{"version":3,"sources":["hooks/useSubInterestSubmit.js","components/drawer/InterestDrawer.js","components/interests/InterestTable.js","pages/interests.js"],"names":["useSubInterestSubmit","id","interstsId","isDrawerOpen","closeDrawer","setIsUpdate","useContext","SidebarContext","update","setUpdate","useState","register","handleSubmit","setValue","clearErrors","formState","errors","useForm","useEffect","InterestServices","getInterestById","then","res","name","catch","err","console","log","notifyError","onSubmit","_ref","type","channelData","updateInterest","notifySuccess","message","addInterest","InterestDrawer","_jsxs","_Fragment","children","_jsx","className","Title","title","Scrollbars","LabelArea","label","InputArea","placeholder","Error","errorName","parent","DrawerButton","InterestTable","channels","useParams","serviceId","handleModalOpen","handleUpdate","useToggleDrawer","MainModal","MainDrawer","TableBody","map","channel","TableRow","TableCell","EditDeleteButton","_id","Interests","toggleDrawer","data","loading","useAsync","getInterest","categoryRef","setFilter","handleChangePage","totalResults","resultsPerPage","dataTable","serviceData","handleSubmitCategory","useFilter","PageTitle","Card","CardBody","Button","onClick","FiPlus","Loading","length","TableContainer","Table","TableHeader","TableFooter","Pagination","onChange","NotFound"],"mappings":"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","file":"static/js/30.56559cfd.chunk.js","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { SidebarContext } from \"../context/SidebarContext\";\nimport InterestServices from \"../services/InterestServices\";\nimport { notifyError, notifySuccess } from \"../utils/toast\";\n\nconst useSubInterestSubmit = (id, interstsId) => {\n  const { isDrawerOpen, closeDrawer, setIsUpdate } = useContext(SidebarContext);\n\n  const [update, setUpdate] = useState();\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    clearErrors,\n    formState: { errors },\n  } = useForm();\n\n  const onSubmit = ({ name, type }) => {\n    if (!name) {\n      notifyError(\"name is required!\");\n      return;\n    }\n    const channelData = {\n      name: name,\n    };\n    channelData[\"channel\"] = interstsId;\n    console.log(update);\n    if (update) {\n      InterestServices.updateInterest(id, channelData)\n        .then((res) => {\n          setIsUpdate(true);\n          notifySuccess(\"Updated successfully\");\n        })\n        .catch((err) => notifyError(err.message));\n      closeDrawer();\n    } else if (interstsId) {\n      InterestServices.addInterest(channelData)\n        .then((res) => {\n          setIsUpdate(true);\n          notifySuccess(\"added successfully\");\n        })\n        .catch((err) => notifyError(err.message));\n      closeDrawer();\n    }\n  };\n\n  useEffect(() => {\n    if (!isDrawerOpen) {\n      setValue(\"name\");\n      clearErrors(\"name\");\n      return;\n    }\n    if (id) {\n      InterestServices.getInterestById(id)\n        .then((res) => {\n          if (res) {\n            setValue(\"name\", res.name);\n            setUpdate(true);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          notifyError(\"There is a server error!\");\n        });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id, setValue, isDrawerOpen]);\n  return {\n    register,\n    handleSubmit,\n    onSubmit,\n    errors,\n  };\n};\n\nexport default useSubInterestSubmit;\n","import React from \"react\";\nimport { Scrollbars } from \"react-custom-scrollbars-2\";\n\nimport Error from \"../form/Error\";\nimport Title from \"../form/Title\";\nimport InputArea from \"../form/InputArea\";\nimport LabelArea from \"../form/LabelArea\";\nimport DrawerButton from \"../form/DrawerButton\";\nimport useSubInterestSubmit from \"../../hooks/useSubInterestSubmit\";\n\nconst InterestDrawer = ({ id, interstsId }) => {\n  const { register, handleSubmit, onSubmit, errors } = useSubInterestSubmit(\n    id,\n    interstsId\n  );\n\n  return (\n    <>\n      <div className=\"w-full relative p-6 border-b border-gray-100 bg-gray-50 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-300\">\n        {id ? (\n          <Title title=\"Update  Interest\" />\n        ) : (\n          <Title title=\"Add Interest\" />\n        )}\n      </div>\n      <Scrollbars className=\"w-full md:w-7/12 lg:w-8/12 xl:w-8/12 relative dark:bg-gray-700 dark:text-gray-200\">\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"p-6 flex-grow scrollbar-hide w-full max-h-full pb-40\">\n            <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\n              <LabelArea label=\"Interest\" />\n              <div className=\"col-span-8 sm:col-span-4\">\n                <InputArea\n                  register={register}\n                  label=\"Interest title\"\n                  name=\"name\"\n                  type=\"text\"\n                  placeholder=\"Interest title\"\n                />\n                <Error errorName={errors.parent} />\n              </div>\n            </div>\n          </div>\n\n          <DrawerButton id={id} interstsId={interstsId} title=\"Interest\" />\n        </form>\n      </Scrollbars>\n    </>\n  );\n};\n\nexport default InterestDrawer;\n","import React from \"react\";\nimport { TableBody, TableRow, TableCell, Avatar } from \"@windmill/react-ui\";\n\nimport MainModal from \"../modal/MainModal\";\nimport MainDrawer from \"../drawer/MainDrawer\";\nimport InterestDrawer from \"../drawer/InterestDrawer\";\nimport useToggleDrawer from \"../../hooks/useToggleDrawer\";\nimport EditDeleteButton from \"../table/EditDeleteButton\";\nimport { useParams } from \"react-router\";\n\nconst InterestTable = ({ channels }) => {\n  const { id } = useParams();\n  const { title, serviceId, handleModalOpen, handleUpdate } = useToggleDrawer();\n\n  return (\n    <>\n      <MainModal id={serviceId} title={\"interests\"} />\n      <MainDrawer>\n        <InterestDrawer id={serviceId} interstsId={id} />\n      </MainDrawer>\n\n      <TableBody>\n        {channels?.map((channel) => (\n          <TableRow key={channel._id}>\n            <TableCell className=\"font-medium text-sm\">\n              <div className=\"flex flex-row\">\n                <span className=\"bg-gray-200 mr-2 border-0 text-gray-500 rounded-full inline-flex items-center justify-center px-2 py-1 text-xs font-semibold font-serif mt-2 dark:bg-gray-700 dark:text-gray-300\">\n                  {channel.name}\n                </span>\n              </div>\n            </TableCell>\n\n            <TableCell>\n              <EditDeleteButton\n                id={channel._id}\n                title={channel.title}\n                handleUpdate={handleUpdate}\n                handleModalOpen={handleModalOpen}\n              />\n            </TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </>\n  );\n};\n\nexport default InterestTable;\n","import React, { useContext } from \"react\";\nimport {\n  Table,\n  TableHeader,\n  TableCell,\n  TableFooter,\n  TableContainer,\n  Button,\n  Input,\n  Card,\n  CardBody,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport { FiPlus } from \"react-icons/fi\";\n\nimport { useParams } from \"react-router\";\nimport useAsync from \"../hooks/useAsync\";\nimport useFilter from \"../hooks/useFilter\";\nimport NotFound from \"../components/table/NotFound\";\nimport Loading from \"../components/preloader/Loading\";\nimport { SidebarContext } from \"../context/SidebarContext\";\nimport PageTitle from \"../components/Typography/PageTitle\";\nimport MainDrawer from \"../components/drawer/MainDrawer\";\nimport InterestServices from \"../services/InterestServices\";\nimport InterestTable from \"../components/interests/InterestTable\";\nimport InterestDrawer from \"../components/drawer/InterestDrawer\";\n\nconst Interests = () => {\n  const { id, title } = useParams();\n  const { toggleDrawer } = useContext(SidebarContext);\n  const { data, loading } = useAsync(() => InterestServices.getInterest(id));\n\n  const {\n    categoryRef,\n    setFilter,\n    handleChangePage,\n    totalResults,\n    resultsPerPage,\n    dataTable,\n    serviceData,\n    handleSubmitCategory,\n  } = useFilter(data);\n\n  return (\n    <>\n      <PageTitle>{title} Interests</PageTitle>\n\n      <MainDrawer>\n        <InterestDrawer interstsId={id} />\n      </MainDrawer>\n\n      <Card className=\"min-w-0 shadow-xs overflow-hidden dark:bg-gray-800 mb-5\">\n        <CardBody>\n          <div className=\"flex-grow-0 md:flex-grow lg:flex-grow xl:flex-grow\"></div>\n\n          <div className=\"w-full md:w-56 lg:w-56 xl:w-56\">\n            <Button onClick={toggleDrawer} className=\"w-full rounded-md h-12\">\n              <span className=\"mr-3\">\n                <FiPlus />\n              </span>\n              Add New\n            </Button>\n          </div>\n        </CardBody>\n      </Card>\n\n      {loading ? (\n        <Loading loading={loading} />\n      ) : serviceData.length !== 0 ? (\n        <TableContainer className=\"mb-8\">\n          <Table>\n            <TableHeader>\n              <tr>\n                <TableCell>Name</TableCell>\n                <TableCell className=\"text-right\">Actions</TableCell>\n              </tr>\n            </TableHeader>\n            <InterestTable channels={dataTable} />\n          </Table>\n          <TableFooter>\n            <Pagination\n              totalResults={totalResults}\n              resultsPerPage={resultsPerPage}\n              onChange={handleChangePage}\n              label=\"Table navigation\"\n            />\n          </TableFooter>\n        </TableContainer>\n      ) : (\n        <NotFound title=\"Interest\" />\n      )}\n    </>\n  );\n};\n\nexport default Interests;\n"],"sourceRoot":""}