{"version":3,"sources":["components/customer/CustomerOrderTable.js","pages/CustomerOrder.js","services/OrderServices.js","components/table/Status.js","components/form/SelectStatus.js"],"names":["CustomerOrderTable","_ref","orders","_jsx","_Fragment","children","TableBody","map","order","_jsxs","TableRow","TableCell","className","_id","substring","dayjs","createdAt","format","address","contact","paymentMethod","Math","round","total","Status","status","SelectStatus","id","CustomerOrder","useParams","data","loading","error","useAsync","OrderServices","getOrderByUser","handleChangePage","totalResults","resultsPerPage","dataTable","useFilter","PageTitle","Loading","length","IoBagHandle","TableContainer","Table","TableHeader","TableFooter","Pagination","onChange","label","getAllOrders","body","headers","page","limit","day","userid","searchContact","searchStatus","searchDay","requests","get","getRecentOrders","_ref2","startDate","endDate","getOrderAndSalesChart","_ref3","getBestSellerProductChart","_ref4","shopid","console","log","getDashboardOrdersData","_ref5","role","getOrderById","updateOrder","put","deleteOrder","delete","Badge","type","setIsUpdate","useContext","SidebarContext","Select","e","handleChangeStatus","then","res","notifySuccess","message","catch","err","notifyError","target","value","defaultValue","hidden"],"mappings":"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","file":"static/js/17.843569c4.chunk.js","sourcesContent":["import React from 'react';\nimport * as dayjs from 'dayjs';\nimport { TableCell, TableBody, TableRow } from '@windmill/react-ui';\n\nimport Status from '../table/Status';\nimport SelectStatus from '../form/SelectStatus';\n\nconst CustomerOrderTable = ({ orders }) => {\n  return (\n    <>\n      <TableBody>\n        {orders?.map((order) => (\n          <TableRow key={order._id}>\n            <TableCell>\n              <span className=\"font-semibold uppercase text-xs\">\n                {order._id.substring(20, 24)}\n              </span>\n            </TableCell>\n            <TableCell>\n              <span className=\"text-sm\">\n                {dayjs(order.createdAt).format('MMM D, YYYY')}\n              </span>\n            </TableCell>\n\n            <TableCell>\n              <span className=\"text-sm\">{order.address}</span>\n            </TableCell>\n            <TableCell>\n              {' '}\n              <span className=\"text-sm\">{order.contact}</span>{' '}\n            </TableCell>\n            <TableCell>\n              <span className=\"text-sm font-semibold\">\n                {order.paymentMethod}\n              </span>\n            </TableCell>\n            <TableCell>\n              {' '}\n              <span className=\"text-sm font-semibold\">\n                ${Math.round(order.total)}.00\n              </span>{' '}\n            </TableCell>\n            <TableCell className=\"text-center\">\n              <Status status={order.status} />\n            </TableCell>\n            <TableCell className=\"text-right\">\n              <SelectStatus id={order._id} />\n            </TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </>\n  );\n};\n\nexport default CustomerOrderTable;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  Table,\n  TableHeader,\n  TableCell,\n  TableFooter,\n  TableContainer,\n  Pagination,\n} from '@windmill/react-ui';\nimport { IoBagHandle } from 'react-icons/io5';\n\nimport useAsync from '../hooks/useAsync';\nimport useFilter from '../hooks/useFilter';\nimport OrderServices from '../services/OrderServices';\nimport Loading from '../components/preloader/Loading';\nimport PageTitle from '../components/Typography/PageTitle';\nimport CustomerOrderTable from '../components/customer/CustomerOrderTable';\n\nconst CustomerOrder = () => {\n  const { id } = useParams();\n\n  const { data, loading, error } = useAsync(() =>\n    OrderServices.getOrderByUser(id)\n  );\n\n  const { handleChangePage, totalResults, resultsPerPage, dataTable } =\n    useFilter(data);\n\n  return (\n    <>\n      <PageTitle>Customer Order List</PageTitle>\n\n      {loading && <Loading loading={loading} />}\n      {!error && !loading && dataTable.length === 0 && (\n        <div className=\"w-full bg-white rounded-md dark:bg-gray-800\">\n          <div className=\"p-8 text-center\">\n            <span className=\"flex justify-center my-30 text-red-500 font-semibold text-6xl\">\n              <IoBagHandle />\n            </span>\n            <h2 className=\"font-medium text-base mt-4 text-gray-600\">\n              This Customer have no order Yet!\n            </h2>\n          </div>\n        </div>\n      )}\n\n      {data.length > 0 && !error && !loading ? (\n        <TableContainer className=\"mb-8\">\n          <Table>\n            <TableHeader>\n              <tr>\n                <TableCell>Order ID</TableCell>\n                <TableCell>Time</TableCell>\n                <TableCell>Shipping Address</TableCell>\n                <TableCell>Phone</TableCell>\n                <TableCell>Method</TableCell>\n                <TableCell>Amount</TableCell>\n                <TableCell className=\"text-center\">Status</TableCell>\n                <TableCell className=\"text-center\">Actions</TableCell>\n              </tr>\n            </TableHeader>\n            <CustomerOrderTable orders={dataTable} />\n          </Table>\n          <TableFooter>\n            <Pagination\n              totalResults={totalResults}\n              resultsPerPage={resultsPerPage}\n              onChange={handleChangePage}\n              label=\"Table navigation\"\n            />\n          </TableFooter>\n        </TableContainer>\n      ) : null}\n    </>\n  );\n};\n\nexport default CustomerOrder;\n","import requests from \"./httpService\";\nimport { AdminContext } from \"../context/AdminContext\";\nimport ShopServices from \"./ShopServices\";\n\nconst OrderServices = {\n  getAllOrders({\n    body,\n    headers,\n    contact,\n    status,\n    page = 1,\n    limit = 8,\n    day,\n    userid = \"\",\n  }) {\n    const searchContact = contact !== null ? contact : \"\";\n    const searchStatus = status !== null ? status : \"\";\n    const searchDay = day !== null ? day : \"\";\n    const id = userid !== null ? userid : \"\";\n\n    return requests.get(\n      `/orders/all/orders?contact=${searchContact}&status=${searchStatus}&day=${searchDay}&page=${page}&limit=${limit}&userid=${id}`,\n      body,\n      headers\n    );\n  },\n\n  getRecentOrders({\n    page = 1,\n    limit = 8,\n    startDate = \"1:00\",\n    endDate = \"23:59\",\n  }) {\n    return requests.get(\n      `/orders/recent?page=${page}&limit=${limit}&startDate=${startDate}&endDate=${endDate}`\n    );\n  },\n\n  getOrderAndSalesChart({ startDate = \"1:00\", endDate = \"23:59\" }) {\n    return requests.get(\n      `/orders/sales/chart?startDate=${startDate}&endDate=${endDate}`\n    );\n  },\n\n  getBestSellerProductChart({ shopid = \"\" }) {\n    console.log(\"shopid\", shopid);\n    return requests.get(\n      `/orders/dashboard/orders/best-seller/chart?shopid=${shopid}`\n    );\n  },\n\n  async getDashboardOrdersData({\n    page = 1,\n    limit = 8,\n    userid = \"\",\n    role = \"\",\n    shopid = \"\",\n  }) {\n    const id = userid !== null ? userid : \"\";\n    if (role == \"shopowner\") {\n      return requests.get(\n        `/orders/dashboard/orders/shopowner?page=${page}&limit=${limit}&userid=${id}&shopid=${shopid}`\n      );\n    } else {\n      return requests.get(\n        `/orders/dashboard/orders?page=${page}&limit=${limit}&userid=${id}`\n      );\n    }\n  },\n\n  getOrderByUser(id, body) {\n    return requests.get(`/orders/user/${id}`, body);\n  },\n\n  getOrderById(id, body) {\n    return requests.get(`/orders/orders/${id}`, body);\n  },\n\n  updateOrder(id, body, headers) {\n    return requests.put(`/orders/orders/${id}`, body, headers);\n  },\n\n  deleteOrder(id) {\n    return requests.delete(`/orders/${id}`);\n  },\n};\n\nexport default OrderServices;\n","import React from 'react';\nimport { Badge } from '@windmill/react-ui';\n\nconst Status = ({ status }) => {\n  return (\n    <>\n      <span className=\"font-serif\">\n        {status === \"completed\" && <Badge type=\"success\">{status}</Badge>}\n        {status === \"pending\" && <Badge type=\"warning\">{status}</Badge>}\n        {status === \"processing\" && <Badge>{status}</Badge>}\n        {status === \"shipped\" && <Badge>{status}</Badge>}\n        {status === \"delivered\" && <Badge type=\"success\">{status}</Badge>}\n        {status === \"cancelled\" && <Badge type=\"danger\">{status}</Badge>}\n      </span>\n    </>\n  );\n};\n\nexport default Status;\n","import React, { useContext } from \"react\";\nimport { Select } from \"@windmill/react-ui\";\n\nimport OrderServices from \"../../services/OrderServices\";\nimport { notifySuccess, notifyError } from \"../../utils/toast\";\nimport { SidebarContext } from \"../../context/SidebarContext\";\n\nconst SelectStatus = ({ id, order }) => {\n  const { setIsUpdate } = useContext(SidebarContext);\n  const handleChangeStatus = (id, status) => {\n    OrderServices.updateOrder(id, { status: status })\n      .then((res) => {\n        notifySuccess(res.message);\n        setIsUpdate(true);\n      })\n      .catch((err) => notifyError(err.message));\n  };\n\n  return (\n    <>\n      <Select\n        onChange={(e) => handleChangeStatus(id, e.target.value)}\n        className=\"border border-gray-50 bg-gray-50 dark:border-gray-700 h-8 rounded-md text-xs focus:border-gray-400 focus:outline-none\"\n      >\n        <option value=\"status\" defaultValue hidden>\n          {order?.status}\n        </option>\n        <option defaultValue={order?.status === \"completed\"} value=\"completed\">\n          Completed\n        </option>\n        <option defaultValue={order?.status === \"pending\"} value=\"pending\">\n          Pending\n        </option>\n        <option\n          defaultValue={order?.status === \"processing\"}\n          value=\"processing\"\n        >\n          Processing\n        </option>\n        <option defaultValue={order?.status === \"refunded\"} value=\"refunded\">\n          Refunded\n        </option>\n        <option defaultValue={order?.status === \"on-hold\"} value=\"on-hold\">\n          On Hold\n        </option>\n        <option defaultValue={order?.status === \"failed\"} value=\"failed\">\n          Failed\n        </option>\n        <option defaultValue={order?.status === \"cancelled\"} value=\"cancelled\">\n          Cancelled\n        </option>\n      </Select>\n    </>\n  );\n};\n\nexport default SelectStatus;\n"],"sourceRoot":""}