{"version":3,"sources":["pages/Woocomerce.js","components/form/SelectRole.js","hooks/useAdminSubmit.js"],"names":["WoocommerceSettings","state","adminInfo","token","useContext","AdminContext","register","handleSubmit","onSubmit","errors","useSettingsSubmit","_id","_jsxs","_Fragment","children","_jsx","PageTitle","className","LabelArea","label","InputArea","defaultValue","name","type","placeholder","Error","errorName","wcUrl","wcSecretKey","wcConsumerKey","Button","SelectRole","_ref","setRole","Select","onChange","e","target","value","required","hidden","useAdminSubmit","id","imageUrl","setImageUrl","useState","selectedDate","setSelectedDate","location","useLocation","isDrawerOpen","closeDrawer","setIsUpdate","SidebarContext","setValue","clearErrors","formState","useForm","useEffect","AdminServices","getAdminById","then","res","admin","email","joiningData","role","dayjs","format","catch","err","notifyError","pathname","Cookies","get","user","JSON","parse","image","data","staffData","password","joiningDate","Date","updateAdmin","notifySuccess","message","addAdmin"],"mappings":"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","file":"static/js/21.8e8a62f6.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\nimport { Button } from \"@windmill/react-ui\";\n\nimport Error from \"../components/form/Error\";\nimport useAdminSubmit from \"../hooks/useAdminSubmit\";\nimport LabelArea from \"../components/form/LabelArea\";\nimport InputArea from \"../components/form/InputArea\";\nimport { AdminContext } from \"../context/AdminContext\";\nimport SelectRole from \"../components/form/SelectRole\";\nimport PageTitle from \"../components/Typography/PageTitle\";\nimport useSettingsSubmit from \"../hooks/useSettingsSubmit\";\n\nconst WoocommerceSettings = () => {\n  const {\n    state: { adminInfo, token },\n  } = useContext(AdminContext);\n\n  const { register, handleSubmit, onSubmit, errors } = useSettingsSubmit(\n    adminInfo._id\n  );\n  var validateWebsiteUrl = (websiteUrl) => {\n    const urlRegEx =\n      \"[-a-zA-Z0-9@:%_+.~#?&//=]{2,256}(.[a-z]{2,4})?\\b(/[-a-zA-Z0-9@:%_+.~#?&//=]*)?\";\n    return urlRegEx.test(String(websiteUrl).toLowerCase());\n  };\n\n  return (\n    <>\n      <PageTitle>Woocommerce Settings</PageTitle>\n      <div className=\"container p-6 mx-auto bg-white  dark:bg-gray-800 dark:text-gray-200 rounded-lg\">\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"p-6 flex-grow scrollbar-hide w-full max-h-full\">\n            <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\n              <LabelArea label=\"Woocommerce Shop Url\" />\n              <div className=\"col-span-8 sm:col-span-4\">\n                <InputArea\n                  register={register}\n                  defaultValue=\"\"\n                  label=\"Woocommerce Shop Url\"\n                  name=\"wcUrl\"\n                  type=\"wcUrl\"\n                  placeholder=\"Url\"\n                />\n                <Error errorName={errors.wcUrl} />\n              </div>\n            </div>\n          </div>\n          <div className=\"p-6 flex-grow scrollbar-hide w-full max-h-full\">\n            <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\n              <LabelArea label=\" Security Key\" />\n              <div className=\"col-span-8 sm:col-span-4\">\n                <InputArea\n                  register={register}\n                  defaultValue=\"\"\n                  label=\"SecurityKey \"\n                  name=\"wcSecretKey\"\n                  type=\"wcSecretKey\"\n                  placeholder=\"security key\"\n                />\n                <Error errorName={errors.wcSecretKey} />\n              </div>\n            </div>\n          </div>\n          <div className=\"p-6 flex-grow scrollbar-hide w-full max-h-full\">\n            <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\n              <LabelArea label=\"Consumer Key\" />\n              <div className=\"col-span-8 sm:col-span-4\">\n                <InputArea\n                  register={register}\n                  defaultValue=\"\"\n                  label=\"ConsumerKey \"\n                  name=\"wcConsumerKey\"\n                  type=\"wcConsumerKey\"\n                  placeholder=\"consumer key\"\n                />\n                <Error errorName={errors.wcConsumerKey} />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"flex flex-row-reverse pr-6 pb-6\">\n            <Button type=\"submit\" className=\"h-12 px-6\">\n              Update Settings\n            </Button>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default WoocommerceSettings;\n","import React from \"react\";\nimport { Select } from \"@windmill/react-ui\";\n\nconst SelectRole = ({ setRole, register, name, label }) => {\n  return (\n    <>\n      <Select\n        onChange={(e) => setRole(e.target.value)}\n        className=\"border h-12 text-sm focus:outline-none block w-full bg-gray-100 dark:bg-white border-transparent focus:bg-white\"\n        name={name}\n        {...register(`${name}`, {\n          required: `${label} is required!`,\n        })}\n      >\n        <option value=\"\" defaultValue hidden>\n          Admin role\n        </option>\n        <option value=\"admin\">Admin</option>\n        <option value=\"restricted\">Restricted</option>\n      </Select>\n    </>\n  );\n};\n\nexport default SelectRole;\n","import { useContext, useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Cookies from \"js-cookie\";\nimport dayjs from \"dayjs\";\nimport { useLocation } from \"react-router\";\n\nimport AdminServices from \"../services/AdminServices\";\nimport { AdminContext } from \"../context/AdminContext\";\nimport { SidebarContext } from \"../context/SidebarContext\";\nimport { notifyError, notifySuccess } from \"../utils/toast\";\n\nconst useAdminSubmit = (id) => {\n  const { state } = useContext(AdminContext);\n  const { adminInfo } = state;\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [selectedDate, setSelectedDate] = useState(\"\");\n  const location = useLocation();\n  const { isDrawerOpen, closeDrawer, setIsUpdate } = useContext(SidebarContext);\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    clearErrors,\n    formState: { errors },\n  } = useForm();\n\n  const onSubmit = (data) => {\n    const staffData = {\n      email: data.email,\n      password: data.password,\n      joiningDate: selectedDate\n        ? selectedDate\n        : dayjs(new Date()).format(\"YYYY-MM-DD\"),\n      role: data.role,\n    };\n\n    if (id) {\n      AdminServices.updateAdmin(id, { email: adminInfo.email, data: staffData })\n        .then((res) => {\n          setIsUpdate(true);\n          notifySuccess(\"Admin Updated Successfully!\");\n        })\n        .catch((err) => notifyError(err.message));\n      closeDrawer();\n    } else {\n      AdminServices.addAdmin(staffData)\n        .then((res) => {\n          setIsUpdate(true);\n          notifySuccess(res.message);\n        })\n        .catch((err) => notifyError(err.message));\n      closeDrawer();\n    }\n  };\n\n  useEffect(() => {\n    if (!isDrawerOpen) {\n      setValue(\"email\");\n      setValue(\"password\");\n      setValue(\"joiningDate\");\n      setValue(\"role\");\n      clearErrors(\"email\");\n      clearErrors(\"password\");\n      clearErrors(\"joiningDate\");\n      clearErrors(\"role\");\n      return;\n    }\n    if (id) {\n      AdminServices.getAdminById(id)\n        .then((res) => {\n          if (res) {\n            setValue(\"email\", res.admin.email);\n            setValue(\"password\");\n            setValue(\"joiningDate\", res.admin.joiningData);\n            setValue(\"role\", res.admin.role);\n            setSelectedDate(dayjs(res.joiningData).format(\"YYYY-MM-DD\"));\n          }\n        })\n        .catch((err) => {\n          notifyError(\"There is a server error!\");\n        });\n    }\n  }, [id, setValue, isDrawerOpen, adminInfo.email, clearErrors]);\n\n  useEffect(() => {\n    if (\n      location.pathname === \"/setting\" ||\n      (location.pathname === \"/edit-profile\" && Cookies.get(\"adminInfo\"))\n    ) {\n      const user = JSON.parse(Cookies.get(\"adminInfo\"));\n      setValue(\"email\", user.email);\n      setValue(\"role\", user.role);\n      setImageUrl(user.image);\n      setSelectedDate(dayjs(user.joiningData).format(\"YYYY-MM-DD\"));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return {\n    register,\n    handleSubmit,\n    onSubmit,\n    errors,\n    setImageUrl,\n    imageUrl,\n    selectedDate,\n    setSelectedDate,\n  };\n};\n\nexport default useAdminSubmit;\n"],"sourceRoot":""}