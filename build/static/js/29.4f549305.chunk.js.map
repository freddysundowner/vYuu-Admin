{"version":3,"sources":["pages/ProductDetails.js"],"names":["ProductDetails","id","useParams","handleUpdate","useToggleDrawer","data","loading","useAsync","ProductServices","getProductById","_jsxs","_Fragment","children","_jsx","MainDrawer","ProductDrawer","PageTitle","Loading","className","src","images","width","alt","name","available","undefined","_id","substring","price","discountedPrice","quantity","Badge","type","description","interest","map","e","onClick"],"mappings":"qGAAA,gGA2HeA,UA/GQA,KACrB,MAAM,GAAEC,GAAOC,eACT,aAAEC,GAAiBC,eACnB,KAAEC,EAAI,QAAEC,GAAYC,aAAS,IAAMC,IAAgBC,eAAeR,KACxE,OACES,eAAAC,WAAA,CAAAC,SAAA,CACEC,cAACC,IAAU,CAAAF,SACTC,cAACE,IAAa,CAACd,GAAIA,MAGrBY,cAACG,IAAS,CAAAJ,SAAC,oBACVN,EACCO,cAACI,IAAO,CAACX,QAASA,IAElBO,cAAA,OAAKK,UAAU,4EAA2EN,SACxFF,eAAA,OAAKQ,UAAU,+DAA8DN,SAAA,CAC3EC,cAAA,OAAKK,UAAU,wDAAuDN,SACpEC,cAAA,OAAKM,IAAKd,EAAKe,OAAO,GAAIC,MAAM,MAAMC,IAAKjB,EAAKkB,SAElDb,eAAA,OAAKQ,UAAU,4CAA2CN,SAAA,CACxDF,eAAA,OAAKQ,UAAU,cAAaN,SAAA,CAC1BC,cAAA,OAAKK,UAAU,wCAAuCN,SACpDF,eAAA,KAAGQ,UAAU,6BAA4BN,SAAA,CAAC,UAChC,IACW,GAAlBP,EAAKmB,UACJX,cAAA,QAAMK,UAAU,iBAAgBN,SAAC,WAIjCC,cAAA,QAAMK,UAAU,eAAcN,SAAC,mBAIrCC,cAAA,MAAIK,UAAU,0FAAyFN,SACpGP,EAAKkB,OAERb,eAAA,KAAGQ,UAAU,4EAA2EN,SAAA,CAAC,QACjF,IACNC,cAAA,QAAMK,UAAU,6CAA4CN,cAC5Ca,IAAbpB,EAAKqB,KAAqBrB,EAAKqB,IAAIC,UAAU,GAAI,YAIxDd,cAAA,OAAKK,UAAU,wDAAuDN,SACpEF,eAAA,QAAMQ,UAAU,wBAAuBN,SAAA,CAAC,IACpCP,EAAKuB,MACNvB,EAAKwB,iBAAmB,GACvBnB,eAAA,OAAKQ,UAAU,gDAA+CN,SAAA,CAAC,IAC3DP,EAAKwB,wBAKfnB,eAAA,OAAKQ,UAAU,OAAMN,SAAA,CAClBP,EAAKyB,UAAY,EAChBpB,eAACqB,QAAK,CAACC,KAAK,SAAQpB,SAAA,CAClBC,cAAA,QAAMK,UAAU,YAAWN,SAAC,cAAiB,OAG/CF,eAACqB,QAAK,CAACC,KAAK,UAASpB,SAAA,CAClB,IACDC,cAAA,QAAMK,UAAU,YAAWN,SAAC,gBAGhCF,eAAA,QAAMQ,UAAU,4DAA2DN,SAAA,CAAC,aAC/DP,EAAKyB,eAGpBjB,cAAA,KAAGK,UAAU,kEAAiEN,SAC3EP,EAAK4B,cAERpB,cAAA,OAAKK,UAAU,qBAAoBN,SACjCF,eAAA,KAAGQ,UAAU,sDAAqDN,SAAA,CAChEF,eAAA,QAAMQ,UAAU,mCAAkCN,SAAA,CAAC,YACvC,OACJ,IACRC,cAAA,OAAKK,UAAU,gBAAeN,SAC3BP,EAAK6B,SAASC,KAAKC,GAClBvB,cAAA,QAAMK,UAAU,qKAAoKN,SACjLwB,EAAEb,gBAgBbV,cAAA,OAAKK,UAAU,OAAMN,SACnBC,cAAA,UACEwB,QAASA,IAAMlC,EAAaF,GAC5BiB,UAAU,gPAA+ON,SAC1P,6BAQV,C","file":"static/js/29.4f549305.chunk.js","sourcesContent":["import { Badge } from \"@windmill/react-ui\";\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router\";\n\nimport useAsync from \"../hooks/useAsync\";\nimport MainDrawer from \"../components/drawer/MainDrawer\";\nimport useToggleDrawer from \"../hooks/useToggleDrawer\";\nimport Loading from \"../components/preloader/Loading\";\nimport PageTitle from \"../components/Typography/PageTitle\";\nimport ProductServices from \"../services/ProductServices\";\nimport ProductDrawer from \"../components/drawer/ProductDrawer\";\n\nconst ProductDetails = () => {\n  const { id } = useParams();\n  const { handleUpdate } = useToggleDrawer();\n  const { data, loading } = useAsync(() => ProductServices.getProductById(id));\n  return (\n    <>\n      <MainDrawer>\n        <ProductDrawer id={id} />\n      </MainDrawer>\n\n      <PageTitle>Product Details</PageTitle>\n      {loading ? (\n        <Loading loading={loading} />\n      ) : (\n        <div className=\"inline-block overflow-y-auto h-full align-middle transition-all transform\">\n          <div className=\"flex flex-col lg:flex-row md:flex-row w-full overflow-hidden\">\n            <div className=\"flex-shrink-0 flex items-center justify-center h-auto\">\n              <img src={data.images[0]} width=\"350\" alt={data.name} />\n            </div>\n            <div className=\"w-full flex flex-col p-5 md:p-8 text-left\">\n              <div className=\"mb-5 block \">\n                <div className=\"font-serif font-semibold py-1 text-sm\">\n                  <p className=\"text-sm text-gray-500 pr-4\">\n                    Status:{\" \"}\n                    {data.available == true ? (\n                      <span className=\"text-green-400\">\n                        Active\n                      </span>\n                    ) : (\n                      <span className=\"text-red-400\"> Inactive</span>\n                    )}\n                  </p>\n                </div>\n                <h2 className=\"text-heading text-lg md:text-xl lg:text-2xl font-semibold font-serif dark:text-gray-400\">\n                  {data.name}\n                </h2>\n                <p className=\"uppercase font-serif font-medium text-gray-500 dark:text-gray-400 text-sm\">\n                  SKU :{\" \"}\n                  <span className=\"font-bold text-gray-500 dark:text-gray-500\">\n                    {data._id !== undefined && data._id.substring(18, 24)}\n                  </span>\n                </p>\n              </div>\n              <div className=\"font-serif product-price font-bold dark:text-gray-400\">\n                <span className=\"inline-block text-2xl\">\n                  ${data.price}\n                  {data.discountedPrice >= 1 && (\n                    <del className=\"text-gray-400 dark:text-gray-500 text-lg pl-2\">\n                      ${data.discountedPrice}\n                    </del>\n                  )}\n                </span>\n              </div>\n              <div className=\"mb-3\">\n                {data.quantity <= 0 ? (\n                  <Badge type=\"danger\">\n                    <span className=\"font-bold\">Stock Out</span>{\" \"}\n                  </Badge>\n                ) : (\n                  <Badge type=\"success\">\n                    {\" \"}\n                    <span className=\"font-bold\">In Stock</span>\n                  </Badge>\n                )}\n                <span className=\"text-sm text-gray-500 dark:text-gray-400 font-medium pl-4\">\n                  Quantity: {data.quantity}\n                </span>\n              </div>\n              <p className=\"text-sm leading-6 text-gray-500 dark:text-gray-400 md:leading-7\">\n                {data.description}\n              </p>\n              <div className=\"flex flex-col mt-4\">\n                <p className=\"font-serif font-semibold py-1 text-gray-500 text-sm\">\n                  <span className=\"text-gray-700 dark:text-gray-400\">\n                    Category:{\" \"}\n                  </span>{\" \"}\n                  <div className=\"flex flex-row\">\n                    {data.interest.map((e) => (\n                      <span className=\"bg-gray-200 mr-2 border-0 text-gray-500 rounded-full inline-flex items-center  px-2 py-1 text-xs font-semibold font-serif mt-2 dark:bg-gray-700 dark:text-gray-300\">\n                        {e.name}\n                      </span>\n                    ))}\n                  </div>\n                </p>\n                {/* <div className=\"flex flex-row\">\n                  {JSON.parse(data?.categories).map((t, i) => (\n                    <span\n                      key={i + 1}\n                      className=\"bg-gray-200 mr-2 border-0 text-gray-500 rounded-full inline-flex items-center justify-center px-2 py-1 text-xs font-semibold font-serif mt-2 dark:bg-gray-700 dark:text-gray-300\"\n                    >\n                      {t}\n                    </span>\n                  ))}\n                </div> */}\n              </div>\n              <div className=\"mt-6\">\n                <button\n                  onClick={() => handleUpdate(id)}\n                  className=\"cursor-pointer leading-5 transition-colors duration-150 font-medium text-sm focus:outline-none px-5 py-2 rounded-md text-white bg-green-500 border border-transparent active:bg-green-600 hover:bg-green-600 focus:ring focus:ring-purple-300\"\n                >\n                  Edit Product\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ProductDetails;\n"],"sourceRoot":""}