{"version":3,"sources":["pages/ForgotPassword.js","services/httpService.js","components/form/Error.js","components/form/LabelArea.js","components/form/InputArea.js","services/AdminServices.js","hooks/useLoginSubmit.js"],"names":["ForgotPassword","onSubmit","register","handleSubmit","errors","loading","useLoginSubmit","_jsx","className","children","_jsxs","LabelArea","label","InputArea","name","type","placeholder","Error","errorName","verifyEmail","Button","disabled","block","Link","to","instance","axios","create","baseURL","timeout","headers","Accept","interceptors","request","use","config","adminInfo","Cookies","get","JSON","parse","authorization","token","responseBody","response","data","requests","url","body","then","post","put","patch","delete","_ref","_Fragment","message","Label","defaultValue","required","Input","AdminServices","registerAdmin","loginAdmin","loginUser","authenticateUser","forgetPassword","resetPassword","signUpWithProvider","addAdmin","getAllAdmin","getAdminById","id","updateAdmin","deleteAdmin","updateAppSettings","getAppSettings","setLoading","useState","dispatch","useContext","AdminContext","history","useHistory","location","useLocation","formState","useForm","email","password","role","pathname","res","notifySuccess","payload","set","stringify","expires","replace","catch","err","notifyError"],"mappings":"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","file":"static/js/12.2ee1bf33.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from '@windmill/react-ui';\n\nimport Error from '../components/form/Error';\nimport useLoginSubmit from '../hooks/useLoginSubmit';\nimport LabelArea from '../components/form/LabelArea';\nimport InputArea from '../components/form/InputArea';\n\nconst ForgotPassword = () => {\n  const { onSubmit, register, handleSubmit, errors, loading } =\n    useLoginSubmit();\n\n  return (\n    <div className=\"flex items-center min-h-screen p-6 bg-gray-50 dark:bg-gray-900\">\n      <div className=\"flex-1 h-full max-w-4xl mx-auto overflow-hidden bg-white rounded-lg shadow-xl dark:bg-gray-800\">\n        <div className=\"flex flex-col overflow-y-auto md:flex-row\">\n          <main className=\"flex items-center justify-center p-6 sm:p-12 md:w-1/2\">\n            <div className=\"w-full\">\n              <h1 className=\"mb-4 text-xl font-semibold text-gray-700 dark:text-gray-200\">\n                Forgot password\n              </h1>\n\n              <form onSubmit={handleSubmit(onSubmit)}>\n                <LabelArea label=\"Email\" />\n                <InputArea\n                  register={register}\n                  label=\"Email\"\n                  name=\"verifyEmail\"\n                  type=\"email\"\n                  placeholder=\"john@doe.com\"\n                />\n                <Error errorName={errors.verifyEmail} />\n\n                <Button\n                  disabled={loading}\n                  type=\"submit\"\n                  block\n                  className=\"mt-4 h-12\"\n                >\n                  Recover password\n                </Button>\n              </form>\n              <p className=\"mt-4\">\n                <Link\n                  className=\"text-sm font-medium text-green-500 dark:text-green-400 hover:underline\"\n                  to=\"/login\"\n                >\n                  Already have an account? Login\n                </Link>\n              </p>\n            </div>\n          </main>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ForgotPassword;\n","import axios from \"axios\";\nimport Cookies from \"js-cookie\";\nconst instance = axios.create({\n  baseURL: `${process.env.REACT_APP_API_BASE_URL}`,\n  timeout: 500000,\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n\n// Add a request interceptor\ninstance.interceptors.request.use(function (config) {\n  // Do something before request is sent\n  let adminInfo;\n  if (Cookies.get(\"adminInfo\")) {\n    adminInfo = JSON.parse(Cookies.get(\"adminInfo\"));\n  }\n\n  return {\n    ...config,\n    headers: {\n      authorization: adminInfo ? `Bearer ${adminInfo.token}` : null,\n    },\n  };\n});\n\nconst responseBody = (response) => response.data;\n\nconst requests = {\n  get: (url, body, headers) =>\n    instance.get(url, body, headers).then(responseBody),\n\n  post: (url, body) => instance.post(url, body).then(responseBody),\n\n  put: (url, body, headers) =>\n    instance.put(url, body, headers).then(responseBody),\n\n  patch: (url, body) => instance.patch(url, body).then(responseBody),\n\n  delete: (url) => instance.delete(url).then(responseBody),\n};\n\nexport default requests;\n","import React from \"react\";\n\nconst Error = ({ errorName }) => {\n  return (\n    <>\n      {errorName && (\n        <span className=\"text-red-400 text-sm mt-2\">{errorName.message}</span>\n      )}\n    </>\n  );\n};\n\nexport default Error;\n","import React from \"react\";\nimport { Label } from \"@windmill/react-ui\";\n\nconst LabelArea = ({ label }) => {\n  return (\n    <Label className=\"col-span-4 sm:col-span-2 font-medium text-sm\">\n      {label}\n    </Label>\n  );\n};\n\nexport default LabelArea;\n","import React from 'react';\nimport { Input } from '@windmill/react-ui';\n\nconst InputArea = ({\n  register,\n  defaultValue,\n  required,\n  name,\n  label,\n  type,\n  placeholder,\n}) => {\n  return (\n    <>\n      <Input\n        {...register(`${name}`, {\n          required: required ? false : `${label} is required!`,\n        })}\n        defaultValue={defaultValue}\n        type={type}\n        placeholder={placeholder}\n        name={name}\n        className=\"border h-12 text-sm focus:outline-none block w-full bg-gray-100 dark:bg-white border-transparent focus:bg-white\"\n      />\n    </>\n  );\n};\n\nexport default InputArea;\n","import requests from \"./httpService\";\n\nconst AdminServices = {\n  registerAdmin(body) {\n    return requests.post(\"/admin/register\", body);\n  },\n\n  loginAdmin(body) {\n    return requests.post(`/admin/login`, body);\n  },\n\n  loginUser(body) {\n    return requests.post(`/login`, body);\n  },\n  authenticateUser(body) {\n    return requests.post(`/authenticate/social`, body);\n  },\n\n  forgetPassword(body) {\n    return requests.put(\"/admin/forget-password\", body);\n  },\n\n  resetPassword(body) {\n    return requests.put(\"/admin/reset-password\", body);\n  },\n\n  signUpWithProvider(body) {\n    return requests.post(\"/admin/signup\", body);\n  },\n\n  addAdmin(body) {\n    return requests.post(\"/admin\", body);\n  },\n  getAllAdmin() {\n    return requests.get(\"/admin\");\n  },\n  getAdminById(id) {\n    return requests.get(`/admin/id/${id}`);\n  },\n\n  updateAdmin(id, body) {\n    return requests.patch(`/admin/${id}`, body);\n  },\n  deleteAdmin(id) {\n    return requests.delete(`/admin/${id}`);\n  },\n  updateAppSettings(body) {\n    return requests.post(`/admin/app/settings`, body);\n  },\n  getAppSettings() {\n    return requests.get(`/admin/app/settings`);\n  },\n};\n\nexport default AdminServices;\n","import Cookies from \"js-cookie\";\nimport { useContext, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { AdminContext } from \"../context/AdminContext\";\nimport AdminServices from \"../services/AdminServices\";\nimport { notifyError, notifySuccess } from \"../utils/toast\";\n\nconst useLoginSubmit = () => {\n  const [loading, setLoading] = useState(false);\n  const { dispatch } = useContext(AdminContext);\n  const history = useHistory();\n  const location = useLocation();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const onSubmit = ({ name, email, verifyEmail, password, role }) => {\n    setLoading(true);\n    const cookieTimeOut = 0.5;\n\n    if (location.pathname === \"/login\") {\n      AdminServices.loginAdmin({ email, password })\n        .then((res) => {\n          if (res) {\n            setLoading(false);\n            notifySuccess(\"Login Success!\");\n            dispatch({ type: \"USER_LOGIN\", payload: res[\"user\"] });\n            res[\"user\"][\"token\"] = res[\"accesstoken\"];\n            res[\"user\"][\"role\"] = \"admin\";\n\n            Cookies.set(\"adminInfo\", JSON.stringify(res[\"user\"]), {\n              expires: cookieTimeOut,\n            });\n            history.replace(\"/\");\n          }\n        })\n        .catch((err) => {\n          notifyError(err ? err.response.data.message : err.message);\n          setLoading(false);\n        });\n    }\n\n    if (location.pathname === \"/signup\") {\n      AdminServices.registerAdmin({ name, email, password, role })\n        .then((res) => {\n          if (res) {\n            setLoading(false);\n            notifySuccess(\"Register Success!\");\n            dispatch({ type: \"USER_LOGIN\", payload: res });\n            Cookies.set(\"adminInfo\", JSON.stringify(res), {\n              expires: cookieTimeOut,\n            });\n            history.replace(\"/\");\n          }\n        })\n        .catch((err) => {\n          notifyError(err ? err.response.data.message : err.message);\n          setLoading(false);\n        });\n    }\n\n    if (location.pathname === \"/forgot-password\") {\n      AdminServices.forgetPassword({ verifyEmail })\n        .then((res) => {\n          setLoading(false);\n          notifySuccess(res.message);\n        })\n        .catch((err) => {\n          setLoading(false);\n          notifyError(err ? err.response.data.message : err.message);\n        });\n    }\n  };\n  return {\n    onSubmit,\n    register,\n    handleSubmit,\n    errors,\n    loading,\n  };\n};\n\nexport default useLoginSubmit;\n"],"sourceRoot":""}