{"version":3,"sources":["components/invoice/Invoice.js","pages/OrderInvoice.js","services/OrderServices.js","components/table/Status.js"],"names":["Invoice","_ref","data","_jsx","_Fragment","children","TableBody","className","_jsxs","TableRow","TableCell","itemId","productId","name","quantity","discountedPrice","OrderInvoice","mode","useContext","WindmillContext","id","useParams","printRef","useRef","loading","useAsync","OrderServices","getOrderById","console","log","PageTitle","ref","Status","status","undefined","createdAt","dayjs","format","invoice","shippingId","city","state","country","phone","Loading","TableContainer","Table","TableHeader","Math","round","tax","shippingFee","totalCost","getAllOrders","body","headers","contact","page","limit","day","userid","searchContact","searchStatus","searchDay","requests","get","getRecentOrders","_ref2","startDate","endDate","getOrderAndSalesChart","_ref3","getBestSellerProductChart","_ref4","shopid","getDashboardOrdersData","_ref5","role","getOrderByUser","updateOrder","put","deleteOrder","delete","Badge","type"],"mappings":"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","file":"static/js/24.01fbdf37.chunk.js","sourcesContent":["import React from \"react\";\nimport { TableCell, TableBody, TableRow } from \"@windmill/react-ui\";\n\nconst Invoice = ({ data }) => {\n  return (\n    <>\n      <TableBody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-100 text-serif text-sm \">\n        {/* {data?.itemId?.map((item, i) => ( */}\n        <TableRow key={0} className=\"dark:border-gray-700 dark:text-gray-400\">\n          <TableCell className=\"px-6 py-1 whitespace-nowrap font-normal text-gray-500\">\n            {data?.itemId.productId.name}\n          </TableCell>\n          <TableCell className=\"px-6 py-1 whitespace-nowrap font-bold text-center\">\n            {data?.itemId.quantity}{\" \"}\n          </TableCell>\n\n          <TableCell className=\"px-6 py-1 whitespace-nowrap text-center font-bold text-red-500 dark:text-green-500\">\n            ${data?.itemId.productId.discountedPrice}.00\n          </TableCell>\n        </TableRow>\n        {/* ))} */}\n      </TableBody>\n    </>\n  );\n};\n\nexport default Invoice;\n","import dayjs from \"dayjs\";\nimport { useParams } from \"react-router\";\nimport React, { useContext, useRef } from \"react\";\nimport {\n  TableCell,\n  TableHeader,\n  Table,\n  TableContainer,\n  WindmillContext,\n} from \"@windmill/react-ui\";\n\nimport useAsync from \"../hooks/useAsync\";\nimport Status from \"../components/table/Status\";\nimport OrderServices from \"../services/OrderServices\";\nimport Invoice from \"../components/invoice/Invoice\";\nimport Loading from \"../components/preloader/Loading\";\nimport PageTitle from \"../components/Typography/PageTitle\";\n\nconst OrderInvoice = () => {\n  const { mode } = useContext(WindmillContext);\n  const { id } = useParams();\n  const printRef = useRef();\n\n  const { data, loading } = useAsync(() => OrderServices.getOrderById(id));\n  console.log(data);\n\n  return (\n    <>\n      <PageTitle>Invoice</PageTitle>\n\n      <div\n        ref={printRef}\n        className=\"bg-white dark:bg-gray-800 mb-4 p-6 lg:p-8 rounded-xl shadow-sm overflow-hidden\"\n      >\n        {!loading && (\n          <div className=\"\">\n            <div className=\"flex lg:flex-row md:flex-row flex-col lg:items-center justify-between pb-4 border-b border-gray-50 dark:border-gray-700 dark:text-gray-300\">\n              <h1 className=\"font-bold font-serif text-xl uppercase\">\n                Invoice\n                <p className=\"text-xs mt-1 text-gray-500\">\n                  Status:{\" \"}\n                  <span className=\"pl-2 font-medium text-xs capitalize\">\n                    {\" \"}\n                    <Status status={data.status} />\n                  </span>\n                </p>\n              </h1>\n            </div>\n            <div className=\"flex lg:flex-row md:flex-row flex-col justify-between pt-4\">\n              <div className=\"mb-3 md:mb-0 lg:mb-0 flex flex-col\">\n                <span className=\"font-bold font-serif text-sm uppercase text-gray-600 dark:text-gray-500 block\">\n                  Date\n                </span>\n                <span className=\"text-sm text-gray-500 dark:text-gray-400 block\">\n                  {data.createdAt !== undefined && (\n                    <span>{dayjs(data?.createdAt).format(\"MMMM D, YYYY\")}</span>\n                  )}\n                </span>\n              </div>\n              <div className=\"mb-3 md:mb-0 lg:mb-0 flex flex-col\">\n                <span className=\"font-bold font-serif text-sm uppercase text-gray-600 dark:text-gray-500 block\">\n                  Invoice No\n                </span>\n                <span className=\"text-sm text-gray-500 dark:text-gray-400 block\">\n                  #{data?.invoice}\n                </span>\n              </div>\n              <div className=\"flex flex-col lg:text-right text-left\">\n                <span className=\"font-bold font-serif text-sm uppercase text-gray-600 dark:text-gray-500 block\">\n                  Invoice To.\n                </span>\n                <span className=\"text-sm text-gray-500 dark:text-gray-400 block\">\n                  {data.name}\n                  <br />\n                  {data.shippingId.name}\n                  {data.shippingId.city}, <br />\n                  {data.shippingId.state}, {data.shippingId.country},<br />\n                  Phone Number :{data.shippingId.phone}\n                </span>\n              </div>\n            </div>\n          </div>\n        )}\n        <div>\n          {loading ? (\n            <Loading loading={loading} />\n          ) : (\n            <TableContainer className=\"my-8\">\n              <Table>\n                <TableHeader>\n                  <tr>\n                    <TableCell>Product Name</TableCell>\n                    <TableCell className=\"text-center\">Quantity</TableCell>\n                    <TableCell className=\"text-center\">Amount</TableCell>\n                  </tr>\n                </TableHeader>\n                <Invoice data={data} />\n              </Table>\n            </TableContainer>\n          )}\n        </div>\n\n        {!loading && (\n          <div className=\"border rounded-xl border-gray-100 p-8 py-6 bg-gray-50 dark:bg-gray-900 dark:border-gray-800\">\n            <div className=\"flex lg:flex-row md:flex-row flex-col justify-between\">\n              {/* <div className=\"mb-3 md:mb-0 lg:mb-0  flex flex-col sm:flex-wrap\">\n                <span className=\"mb-1 font-bold font-serif text-sm uppercase text-gray-600 dark:text-gray-500 block\">\n                  Payment Method\n                </span>\n                <span className=\"text-sm text-gray-500 dark:text-gray-400 font-semibold font-serif block\">\n                  {data.paymentMethod}\n                </span>\n              </div>*/}\n              {/* <div className=\"mb-3 md:mb-0 lg:mb-0  flex flex-col sm:flex-wrap\">\n                <span className=\"mb-1 font-bold font-serif text-sm uppercase text-gray-600 dark:text-gray-500 block\">\n                  Discount\n                </span>\n                <span className=\"text-sm text-gray-500 dark:text-gray-400 font-semibold font-serif block\">\n                  ${Math.round(data.itemId.productId.discountedPrice)}.00\n                </span>\n              </div> */}\n              <div className=\"mb-3 md:mb-0 lg:mb-0  flex flex-col sm:flex-wrap\">\n                <span className=\"mb-1 font-bold font-serif text-sm uppercase text-gray-600 dark:text-gray-500 block\">\n                  Tax\n                </span>\n                <span className=\"text-sm text-gray-500 dark:text-gray-400 font-semibold font-serif block\">\n                  ${Math.round(data.tax)}.00\n                </span>\n              </div>\n              <div className=\"mb-3 md:mb-0 lg:mb-0  flex flex-col sm:flex-wrap\">\n                <span className=\"mb-1 font-bold font-serif text-sm uppercase text-gray-600 dark:text-gray-500 block\">\n                  Shipping Fee\n                </span>\n                <span className=\"text-sm text-gray-500 dark:text-gray-400 font-semibold font-serif block\">\n                  ${Math.round(data.shippingFee)}.00\n                </span>\n              </div>\n              {/* <div className=\"mb-3 md:mb-0 lg:mb-0  flex flex-col sm:flex-wrap\">\n                <span className=\"mb-1 font-bold font-serif text-sm uppercase text-gray-600 dark:text-gray-500 block\">\n                  SubTotal\n                </span>\n                <span className=\"text-sm text-gray-500 dark:text-gray-400 font-semibold font-serif block\">\n                  ${Math.round(data.subTotal)}.00\n                </span>\n              </div> */}\n              <div className=\"flex flex-col sm:flex-wrap\">\n                <span className=\"mb-1 font-bold font-serif text-sm uppercase text-gray-600 dark:text-gray-500 block\">\n                  Total Amount\n                </span>\n                <span className=\"text-xl font-serif font-bold text-red-500 dark:text-green-500 block\">\n                  ${Math.round(data.totalCost)}.00\n                </span>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default OrderInvoice;\n","import requests from \"./httpService\";\nimport { AdminContext } from \"../context/AdminContext\";\nimport ShopServices from \"./ShopServices\";\n\nconst OrderServices = {\n  getAllOrders({\n    body,\n    headers,\n    contact,\n    status,\n    page = 1,\n    limit = 8,\n    day,\n    userid = \"\",\n  }) {\n    const searchContact = contact !== null ? contact : \"\";\n    const searchStatus = status !== null ? status : \"\";\n    const searchDay = day !== null ? day : \"\";\n    const id = userid !== null ? userid : \"\";\n\n    return requests.get(\n      `/orders/all/orders?contact=${searchContact}&status=${searchStatus}&day=${searchDay}&page=${page}&limit=${limit}&userid=${id}`,\n      body,\n      headers\n    );\n  },\n\n  getRecentOrders({\n    page = 1,\n    limit = 8,\n    startDate = \"1:00\",\n    endDate = \"23:59\",\n  }) {\n    return requests.get(\n      `/orders/recent?page=${page}&limit=${limit}&startDate=${startDate}&endDate=${endDate}`\n    );\n  },\n\n  getOrderAndSalesChart({ startDate = \"1:00\", endDate = \"23:59\" }) {\n    return requests.get(\n      `/orders/sales/chart?startDate=${startDate}&endDate=${endDate}`\n    );\n  },\n\n  getBestSellerProductChart({ shopid = \"\" }) {\n    console.log(\"shopid\", shopid);\n    return requests.get(\n      `/orders/dashboard/orders/best-seller/chart?shopid=${shopid}`\n    );\n  },\n\n  async getDashboardOrdersData({\n    page = 1,\n    limit = 8,\n    userid = \"\",\n    role = \"\",\n    shopid = \"\",\n  }) {\n    const id = userid !== null ? userid : \"\";\n    if (role == \"shopowner\") {\n      return requests.get(\n        `/orders/dashboard/orders/shopowner?page=${page}&limit=${limit}&userid=${id}&shopid=${shopid}`\n      );\n    } else {\n      return requests.get(\n        `/orders/dashboard/orders?page=${page}&limit=${limit}&userid=${id}`\n      );\n    }\n  },\n\n  getOrderByUser(id, body) {\n    return requests.get(`/orders/user/${id}`, body);\n  },\n\n  getOrderById(id, body) {\n    return requests.get(`/orders/orders/${id}`, body);\n  },\n\n  updateOrder(id, body, headers) {\n    return requests.put(`/orders/orders/${id}`, body, headers);\n  },\n\n  deleteOrder(id) {\n    return requests.delete(`/orders/${id}`);\n  },\n};\n\nexport default OrderServices;\n","import React from 'react';\nimport { Badge } from '@windmill/react-ui';\n\nconst Status = ({ status }) => {\n  return (\n    <>\n      <span className=\"font-serif\">\n        {status === \"completed\" && <Badge type=\"success\">{status}</Badge>}\n        {status === \"pending\" && <Badge type=\"warning\">{status}</Badge>}\n        {status === \"processing\" && <Badge>{status}</Badge>}\n        {status === \"shipped\" && <Badge>{status}</Badge>}\n        {status === \"delivered\" && <Badge type=\"success\">{status}</Badge>}\n        {status === \"cancelled\" && <Badge type=\"danger\">{status}</Badge>}\n      </span>\n    </>\n  );\n};\n\nexport default Status;\n"],"sourceRoot":""}