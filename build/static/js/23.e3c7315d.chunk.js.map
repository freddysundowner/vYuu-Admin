{"version":3,"sources":["components/chart/ChartCard.js","components/dashboard/CardItem.js","components/dashboard/OrderTable.js","components/dashboard/CardItemTwo.js","components/chart/SaleChart.js","components/chart/RevenueChart.js","pages/Dashboard.js","services/OrderServices.js","components/table/Status.js"],"names":["Chart","_ref","children","title","_jsxs","className","_jsx","CardItem","Icon","quantity","amount","_Fragment","Card","CardBody","parseFloat","toFixed","OrderTable","orders","TableBody","map","order","_order$customerId","TableRow","TableCell","dayjs","createdAt","format","customerId","firstName","shippingFee","servicefee","Math","round","totalCost","ordertype","Status","status","_id","CardItemTwo","price","SaleChart","salesReport","activeButton","setActiveButton","useState","color","handleClick","_ref2","barOptions","data","labels","or","date","datasets","label","borderColor","backgroundColor","borderWidth","yAxisID","options","responsive","legend","display","onClick","type","Line","RevenueChart","_data$bestSellingProd","_data$bestSellingProd2","state","dispatch","useContext","AdminContext","adminInfo","loading","useAsync","ShopServices","getShopByUserId","then","res","console","log","OrderServices","getBestSellerProductChart","shopid","PieOption","bestSellingProduct","selling","count","cutoutPercentage","Pie","Dashboard","_data$totalPendingOrd","_data$totalPendingOrd2","_data$totalPendingOrd3","isBetween","setSalesReport","todayOrder","setTodayOrder","currentPage","handleChangePage","SidebarContext","role","getDashboardOrdersData","page","limit","userid","dataTable","useFilter","useEffect","_data$todayOrder","_data$weeklySaleRepor","todayOrderTotal","reduce","pre","acc","weeklySaleReport","value","onlyDate","split","push","PageTitle","ImStack","FiShoppingCart","totalAmountOfThisMonth","ImCreditCard","totalAmount","totalOrder","FiRefreshCw","totalPendingOrder","total","FiTruck","totalProcessingOrder","FiCheck","totalDeliveredOrder","ChartCard","Loading","TableContainer","Table","TableHeader","TableFooter","Pagination","totalResults","resultsPerPage","onChange","getAllOrders","body","headers","contact","day","searchContact","searchStatus","searchDay","id","requests","get","getRecentOrders","startDate","endDate","getOrderAndSalesChart","_ref3","_ref4","_ref5","getOrderByUser","getOrderById","updateOrder","put","deleteOrder","delete","Badge"],"mappings":"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","file":"static/js/23.e3c7315d.chunk.js","sourcesContent":["import React from 'react'\n\nconst Chart = ({ children, title }) => {\n  return (\n    <div className=\"min-w-0 p-4 bg-white rounded-lg shadow-xs dark:bg-gray-800\">\n      <p className=\"mb-4 font-semibold text-gray-800 dark:text-gray-300\">{title}</p>\n      {children}\n    </div>\n  )\n}\n\nexport default Chart\n","import React from 'react';\nimport { Card, CardBody } from '@windmill/react-ui';\n\nconst CardItem = ({ title, Icon, quantity, amount, className }) => {\n  return (\n    <>\n      <Card className=\"flex h-full\">\n        <CardBody className=\"flex items-center border border-gray-200 dark:border-gray-800 w-full rounded-lg\">\n          <div\n            className={`flex items-center justify-center p-3 rounded-full h-12 w-12 text-center mr-4 text-lg ${className}`}\n          >\n            <Icon />\n          </div>\n          <div>\n            <p className=\"mb-1 text-sm font-medium text-gray-600 dark:text-gray-400\">\n              <span>{title}</span>{' '}\n              {amount && (\n                <span className=\"text-red-400 text-sm font-semibold\">\n                  ({parseFloat(amount).toFixed(2)})\n                </span>\n              )}\n            </p>\n            <p className=\"text-2xl font-bold leading-none text-gray-600 dark:text-gray-200\">\n              {quantity}\n            </p>\n          </div>\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default CardItem;\n","import React from \"react\";\nimport * as dayjs from \"dayjs\";\nimport { TableCell, TableBody, TableRow } from \"@windmill/react-ui\";\nimport Status from \"../table/Status\";\n\nconst OrderTable = ({ orders }) => {\n  return (\n    <>\n      <TableBody>\n        {orders?.map((order) => (\n          <TableRow key={order._id}>\n            <TableCell>\n              <span className=\"text-sm\">\n                {dayjs(order.createdAt).format(\"MMM D, YYYY\")}\n              </span>\n            </TableCell>\n\n            <TableCell>\n              {\" \"}\n              <span className=\"text-sm\">{order.customerId?.firstName}</span>\n            </TableCell>\n            <TableCell>\n              <span className=\"text-sm font-semibold\">\n                $<span className=\"text-sm\">{order.shippingFee}</span>{\" \"}\n              </span>\n            </TableCell>\n            <TableCell>\n              <span className=\"text-sm font-semibold\">\n                $<span className=\"text-sm\">{order.servicefee}</span>{\" \"}\n              </span>\n            </TableCell>\n            <TableCell>\n              {\" \"}\n              <span className=\"text-sm font-semibold\">\n                ${Math.round(order.totalCost)}.00\n              </span>{\" \"}\n            </TableCell>\n            <TableCell>\n              {\" \"}\n              <span className=\"text-sm font-semibold\">\n                {order.ordertype == \"WC\" ? \"Woocommerce\" : order.ordertype}\n              </span>{\" \"}\n            </TableCell>\n            <TableCell>\n              <Status status={order.status} />\n            </TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </>\n  );\n};\n\nexport default OrderTable;\n","import React from 'react';\nimport { Card, CardBody } from '@windmill/react-ui';\n\nconst CardItemTwo = ({ title, Icon, className, price }) => {\n  return (\n    <>\n      <Card className=\"flex justify-center text-center h-full\">\n        <CardBody\n          className={`border border-gray-200 dark:border-gray-800 w-full p-6 rounded-lg ${className}`}\n        >\n          <div className={`text-center inline-block text-3xl ${className}`}>\n            <Icon />\n          </div>\n          <div>\n            <p className=\"mb-3 text-base font-medium text-gray-50 dark:text-gray-100\">\n              {title}\n            </p>\n            <p className=\"text-3xl font-bold leading-none text-gray-50 dark:text-gray-50\">\n              ${Math.round(price)}\n            </p>\n          </div>\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default CardItemTwo;\n","import { useState } from 'react';\nimport { Line } from 'react-chartjs-2';\n\nconst SaleChart = ({ salesReport }) => {\n  const [activeButton, setActiveButton] = useState({\n    title: 'Sales',\n    color: 'green',\n  });\n\n  const handleClick = ({ title, color }) => {\n    setActiveButton({ title, color });\n  };\n\n  const barOptions = {\n    data: {\n      labels: salesReport?.map((or) => or.date),\n      datasets: [\n        activeButton.title === \"Sales\"\n          ? {\n              label: \"Sales\",\n              data: salesReport?.map((or) => or.totalCost),\n              borderColor: \"#10B981\",\n              backgroundColor: \"#10B981\",\n              borderWidth: 3,\n              yAxisID: \"y\",\n            }\n          : {\n              label: \"Order\",\n              data: salesReport?.map((or) => or.order),\n              borderColor: \"#F97316\",\n              backgroundColor: \"#F97316\",\n              borderWidth: 3,\n              yAxisID: \"y\",\n            },\n      ],\n    },\n    options: {\n      responsive: true,\n    },\n    legend: {\n      display: false,\n    },\n  };\n\n  return (\n    <>\n      <div className=\"text-sm font-medium text-center text-gray-500 border-b border-gray-200 dark:text-gray-400 dark:border-gray-700 mb-4\">\n        <ul className=\"flex flex-wrap -mb-px\">\n          <li className=\"mr-2\">\n            <button\n              onClick={() => handleClick({ title: 'Sales', color: 'green' })}\n              type=\"button\"\n              className={`inline-block p-2 rounded-t-lg border-b-2 border-transparent ${\n                activeButton.title === 'Sales'\n                  ? 'text-green-600 border-green-600 dark:text-green-500 dark:border-green-500'\n                  : 'hover:text-gray-600 hover:border-gray-300 dark:hover:text-gray-300'\n              }  focus:outline-none`}\n            >\n              Sales\n            </button>\n          </li>\n\n          <li className=\"mr-2\">\n            <button\n              onClick={() => handleClick({ title: 'Orders', color: 'red' })}\n              type=\"button\"\n              className={`inline-block p-2 rounded-t-lg border-b-2 border-transparent ${\n                activeButton.title === 'Orders'\n                  ? 'text-orange-500 border-orange-500 dark:text-orange-500 dark:border-orange-500'\n                  : 'hover:text-gray-600 hover:border-gray-300 dark:hover:text-gray-300'\n              }  focus:outline-none`}\n            >\n              Orders\n            </button>\n          </li>\n        </ul>\n      </div>\n\n      <Line {...barOptions} />\n    </>\n  );\n};\n\nexport default SaleChart;\n","import React, { useContext } from \"react\";\n\nimport { Pie } from \"react-chartjs-2\";\nimport { AdminContext } from \"../../context/AdminContext\";\nimport useAsync from \"../../hooks/useAsync\";\nimport OrderServices from \"../../services/OrderServices\";\nimport ShopServices from \"../../services/ShopServices\";\n\n\nconst RevenueChart = () => {\n  const { state, dispatch } = useContext(AdminContext);\n  const { adminInfo } = state;\n  const { data, loading } = useAsync(() =>\n    ShopServices.getShopByUserId(adminInfo._id).then((res) => {\n      console.log(res);\n      return OrderServices.getBestSellerProductChart({\n        shopid: res._id,\n      });\n    })\n  );\n\n  // const { data } = useAsync(OrderServices.getBestSellerProductChart);\n\n  const PieOption = {\n    data: {\n      datasets: [\n        {\n          data: data?.bestSellingProduct?.map((selling) => selling.count),\n          backgroundColor: [\"#10B981\", \"#3B82F6\", \"#F97316\", \"#0EA5E9\"],\n          label: \"Dataset 1\",\n        },\n      ],\n      labels: data?.bestSellingProduct?.map((selling) => selling._id),\n    },\n    options: {\n      responsive: true,\n      cutoutPercentage: 80,\n    },\n    legend: {\n      display: false,\n    },\n  };\n\n  return (\n    <div>\n      <Pie {...PieOption} className=\"chart\" />\n    </div>\n  );\n};\n\nexport default RevenueChart;\n","import React, { useContext } from \"react\";\nimport * as dayjs from \"dayjs\";\nimport isBetween from \"dayjs/plugin/isBetween\";\n\nimport {\n  Table,\n  TableHeader,\n  TableCell,\n  TableFooter,\n  TableContainer,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport { ImStack, ImCreditCard } from \"react-icons/im\";\nimport { FiShoppingCart, FiTruck, FiRefreshCw, FiCheck } from \"react-icons/fi\";\n\nimport useAsync from \"../hooks/useAsync\";\nimport useFilter from \"../hooks/useFilter\";\nimport OrderServices from \"../services/OrderServices\";\nimport Loading from \"../components/preloader/Loading\";\nimport ChartCard from \"../components/chart/ChartCard\";\nimport CardItem from \"../components/dashboard/CardItem\";\nimport PageTitle from \"../components/Typography/PageTitle\";\nimport OrderTable from \"../components/dashboard/OrderTable\";\nimport CardItemTwo from \"../components/dashboard/CardItemTwo\";\nimport SaleChart from \"../components/chart/SaleChart\";\nimport RevenueChart from \"../components/chart/RevenueChart\";\nimport { SidebarContext } from \"../context/SidebarContext\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport ShopServices from \"../services/ShopServices\";\nimport { AdminContext } from \"../context/AdminContext\";\n\n\nconst Dashboard = () => {\n  dayjs.extend(isBetween);\n  const { state, dispatch } = useContext(AdminContext);\n  const { adminInfo } = state;\n  const [salesReport, setSalesReport] = useState([]);\n  const [todayOrder, setTodayOrder] = useState(0);\n  const { currentPage, handleChangePage } = useContext(SidebarContext);\n\n  const { data, loading } = useAsync(() =>\n    adminInfo.role == \"shopowner\"\n      ? ShopServices.getShopByUserId(adminInfo._id).then((res) => {\n          return OrderServices.getDashboardOrdersData({\n            page: currentPage,\n            limit: 8,\n            userid: adminInfo._id,\n            role: adminInfo.role,\n            shopid: res._id,\n          });\n        })\n      : OrderServices.getDashboardOrdersData({\n          page: currentPage,\n          limit: 8,\n          userid: adminInfo._id,\n          role: adminInfo.role,\n          shopid: \"\",\n        })\n  );\n\n  const { dataTable } = useFilter(data?.orders);\n\n  useEffect(() => {\n    const todayOrderTotal = data?.todayOrder?.reduce(\n      (pre, acc) => pre + acc.totalCost,\n      0\n    );\n    setTodayOrder(todayOrderTotal);\n    data?.weeklySaleReport?.reduce((res, value) => {\n      let onlyDate = value.createdAt.split(\"T\")[0];\n\n      if (!res[onlyDate]) {\n        res[onlyDate] = { date: onlyDate, totalCost: 0, order: 0 };\n        salesReport.push(res[onlyDate]);\n      }\n      res[onlyDate].totalCost += value.totalCost;\n      res[onlyDate].order += 1;\n      return res;\n    }, {});\n  }, [data?.todayOrder, data?.weeklySaleReport, salesReport]);\n\n  return (\n    <>\n      <PageTitle>Dashboard</PageTitle>\n\n      <div className=\"grid gap-4 mb-8 md:grid-cols-3 xl:grid-cols-3\">\n        <CardItemTwo\n          title=\"Today Order\"\n          Icon={ImStack}\n          price={todayOrder ? todayOrder : 0}\n          className=\"text-white dark:text-green-100 bg-teal-500\"\n        />\n        <CardItemTwo\n          title=\"This Month\"\n          Icon={FiShoppingCart}\n          price={\n            data?.totalAmountOfThisMonth ? data?.totalAmountOfThisMonth : 0\n          }\n          className=\"text-white dark:text-green-100 bg-blue-500\"\n        />\n        <CardItemTwo\n          title=\"Total Order\"\n          Icon={ImCreditCard}\n          price={data?.totalAmount ? data?.totalAmount : 0}\n          className=\"text-white dark:text-green-100 bg-green-500\"\n        />\n      </div>\n\n      <div className=\"grid gap-4 md:grid-cols-2 xl:grid-cols-4\">\n        <CardItem\n          title=\"Total Order\"\n          Icon={FiShoppingCart}\n          quantity={data?.totalOrder}\n          className=\"text-orange-600 dark:text-orange-100 bg-orange-100 dark:bg-orange-500\"\n        />\n        <CardItem\n          title=\"Order Pending\"\n          Icon={FiRefreshCw}\n          quantity={data?.totalPendingOrder?.count}\n          amount={\n            data?.totalPendingOrder?.total && data?.totalPendingOrder?.total\n          }\n          className=\"text-blue-600 dark:text-blue-100 bg-blue-100 dark:bg-blue-500\"\n        />\n        <CardItem\n          title=\"Order Processing\"\n          Icon={FiTruck}\n          quantity={data?.totalProcessingOrder}\n          className=\"text-teal-600 dark:text-teal-100 bg-teal-100 dark:bg-teal-500\"\n        />\n        <CardItem\n          title=\"Order Completed\"\n          Icon={FiCheck}\n          quantity={data?.totalDeliveredOrder}\n          className=\"text-green-600 dark:text-green-100 bg-green-100 dark:bg-green-500\"\n        />\n      </div>\n\n      <div className=\"grid gap-4 md:grid-cols-2 my-8\">\n        <ChartCard title=\"Weekly Sales\">\n          <SaleChart salesReport={salesReport} />\n        </ChartCard>\n        <ChartCard title=\"Best Selling Products\">\n          <RevenueChart />\n        </ChartCard>\n      </div>\n\n      <PageTitle>Recent Order</PageTitle>\n      {loading && <Loading loading={loading} />}\n      {dataTable && !loading && (\n        <TableContainer className=\"mb-8\">\n          <Table>\n            <TableHeader>\n              <tr>\n                <TableCell>Order Time</TableCell>\n                <TableCell>Customer</TableCell>\n                <TableCell>Service Fee </TableCell>\n                <TableCell>Shipping Fee</TableCell>\n                <TableCell>Order amount</TableCell>\n                <TableCell>Order type</TableCell>\n                <TableCell>Status</TableCell>\n              </tr>\n            </TableHeader>\n            <OrderTable orders={dataTable} />\n          </Table>\n          <TableFooter>\n            <Pagination\n              totalResults={data?.totalOrder}\n              resultsPerPage={8}\n              onChange={handleChangePage}\n              label=\"Table navigation\"\n            />\n          </TableFooter>\n        </TableContainer>\n      )}\n    </>\n  );\n};\n\nexport default Dashboard;\n","import requests from \"./httpService\";\nimport { AdminContext } from \"../context/AdminContext\";\nimport ShopServices from \"./ShopServices\";\n\nconst OrderServices = {\n  getAllOrders({\n    body,\n    headers,\n    contact,\n    status,\n    page = 1,\n    limit = 8,\n    day,\n    userid = \"\",\n  }) {\n    const searchContact = contact !== null ? contact : \"\";\n    const searchStatus = status !== null ? status : \"\";\n    const searchDay = day !== null ? day : \"\";\n    const id = userid !== null ? userid : \"\";\n\n    return requests.get(\n      `/orders/all/orders?contact=${searchContact}&status=${searchStatus}&day=${searchDay}&page=${page}&limit=${limit}&userid=${id}`,\n      body,\n      headers\n    );\n  },\n\n  getRecentOrders({\n    page = 1,\n    limit = 8,\n    startDate = \"1:00\",\n    endDate = \"23:59\",\n  }) {\n    return requests.get(\n      `/orders/recent?page=${page}&limit=${limit}&startDate=${startDate}&endDate=${endDate}`\n    );\n  },\n\n  getOrderAndSalesChart({ startDate = \"1:00\", endDate = \"23:59\" }) {\n    return requests.get(\n      `/orders/sales/chart?startDate=${startDate}&endDate=${endDate}`\n    );\n  },\n\n  getBestSellerProductChart({ shopid = \"\" }) {\n    console.log(\"shopid\", shopid);\n    return requests.get(\n      `/orders/dashboard/orders/best-seller/chart?shopid=${shopid}`\n    );\n  },\n\n  async getDashboardOrdersData({\n    page = 1,\n    limit = 8,\n    userid = \"\",\n    role = \"\",\n    shopid = \"\",\n  }) {\n    const id = userid !== null ? userid : \"\";\n    if (role == \"shopowner\") {\n      return requests.get(\n        `/orders/dashboard/orders/shopowner?page=${page}&limit=${limit}&userid=${id}&shopid=${shopid}`\n      );\n    } else {\n      return requests.get(\n        `/orders/dashboard/orders?page=${page}&limit=${limit}&userid=${id}`\n      );\n    }\n  },\n\n  getOrderByUser(id, body) {\n    return requests.get(`/orders/user/${id}`, body);\n  },\n\n  getOrderById(id, body) {\n    return requests.get(`/orders/orders/${id}`, body);\n  },\n\n  updateOrder(id, body, headers) {\n    return requests.put(`/orders/orders/${id}`, body, headers);\n  },\n\n  deleteOrder(id) {\n    return requests.delete(`/orders/${id}`);\n  },\n};\n\nexport default OrderServices;\n","import React from 'react';\nimport { Badge } from '@windmill/react-ui';\n\nconst Status = ({ status }) => {\n  return (\n    <>\n      <span className=\"font-serif\">\n        {status === \"completed\" && <Badge type=\"success\">{status}</Badge>}\n        {status === \"pending\" && <Badge type=\"warning\">{status}</Badge>}\n        {status === \"processing\" && <Badge>{status}</Badge>}\n        {status === \"shipped\" && <Badge>{status}</Badge>}\n        {status === \"delivered\" && <Badge type=\"success\">{status}</Badge>}\n        {status === \"cancelled\" && <Badge type=\"danger\">{status}</Badge>}\n      </span>\n    </>\n  );\n};\n\nexport default Status;\n"],"sourceRoot":""}