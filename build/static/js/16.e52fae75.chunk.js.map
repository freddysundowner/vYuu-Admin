{"version":3,"sources":["components/order/OrderTable.js","pages/Orders.js","services/OrderServices.js","components/table/Status.js","components/form/SelectStatus.js"],"names":["OrderTable","_ref","orders","_jsx","_Fragment","children","TableBody","map","order","i","_jsxs","TableRow","TableCell","className","dayjs","createdAt","format","customerId","firstName","servicefee","Math","round","totalCost","Status","status","SelectStatus","id","_id","Link","to","Tooltip","Icon","FiZoomIn","title","bgColor","Orders","state","dispatch","useContext","AdminContext","adminInfo","time","setTime","currentPage","searchText","searchRef","setStatus","handleChangePage","handleSubmitForAll","resultsPerPage","SidebarContext","data","loading","useAsync","OrderServices","getAllOrders","contact","page","limit","day","userid","role","dataTable","serviceData","useFilter","PageTitle","Card","CardBody","onSubmit","Input","ref","type","placeholder","Select","onChange","e","target","value","defaultValue","hidden","CSVDownloader","filename","IoCloudDownloadOutline","Loading","length","TableContainer","Table","TableHeader","TableFooter","Pagination","totalResults","totalDoc","label","NotFound","body","headers","searchContact","searchStatus","searchDay","requests","get","getRecentOrders","_ref2","startDate","endDate","getOrderAndSalesChart","_ref3","getBestSellerProductChart","_ref4","shopid","console","log","getDashboardOrdersData","_ref5","getOrderByUser","getOrderById","updateOrder","put","deleteOrder","delete","Badge","setIsUpdate","handleChangeStatus","then","res","notifySuccess","message","catch","err","notifyError"],"mappings":"qGAAA,wEA6DeA,IAnDIC,IAAiB,IAAhB,OAAEC,GAAQD,EAC5B,OACEE,cAAAC,WAAA,CAAAC,SACEF,cAACG,YAAS,CAAAD,SACD,OAANH,QAAM,IAANA,OAAM,EAANA,EAAQK,KAAI,CAACC,EAAOC,IACnBC,eAACC,WAAQ,CAAAN,SAAA,CACPF,cAACS,YAAS,CAAAP,SACRF,cAAA,QAAMU,UAAU,UAASR,SACtBS,EAAMN,EAAMO,WAAWC,OAAO,mBAInCb,cAACS,YAAS,CAAAP,SACRF,cAAA,QAAMU,UAAU,UAASR,SAAEG,EAAMS,WAAWC,cAE9CR,eAACE,YAAS,CAAAP,SAAA,CACP,IAAI,IACJF,cAAA,QAAMU,UAAU,UAASR,SAAEG,EAAMW,aAAmB,OAEvDT,eAACE,YAAS,CAAAP,SAAA,CACP,IACDK,eAAA,QAAMG,UAAU,wBAAuBR,SAAA,CAAC,IACpCe,KAAKC,MAAMb,EAAMc,WAAW,SACxB,OAEVnB,cAACS,YAAS,CAACC,UAAU,sBAAqBR,SACxCF,cAACoB,IAAM,CAACC,OAAQhB,EAAMgB,WAExBrB,cAACS,YAAS,CAACC,UAAU,cAAaR,SAChCF,cAACsB,IAAY,CAACC,GAAIlB,EAAMmB,IAAKnB,MAAOA,MAEtCL,cAACS,YAAS,CAACC,UAAU,8BAA6BR,SAChDK,eAAA,OAAKG,UAAU,wDAAuDR,SAAA,CACnE,IACDF,cAACyB,IAAI,CAACC,GAAK,UAASrB,EAAMmB,MAAMtB,SAC9BF,cAAC2B,IAAO,CACNJ,GAAG,OACHK,KAAMC,IACNC,MAAM,eACNC,QAAQ,qBAlCHzB,EAAI,QA0CtB,C,mCCzDP,2HAsJe0B,UA7HAA,KACb,MAAM,MAAEC,EAAK,SAAEC,GAAaC,qBAAWC,MACjC,UAAEC,GAAcJ,GAChB,KACJK,EAAI,QACJC,EAAO,YACPC,EAAW,WACXC,EAAU,UACVC,EAAS,OACTrB,EAAM,UACNsB,EAAS,iBACTC,EAAgB,mBAChBC,EAAkB,eAClBC,GACEX,qBAAWY,MAET,KAAEC,EAAI,QAAEC,GAAYC,aAAS,IACjCC,IAAcC,aAAa,CACzBC,QAASZ,EACTpB,SACAiC,KAAMd,EACNe,MAAOT,EACPU,IAAKlB,EACLmB,OAA0B,aAAlBpB,EAAUqB,KAAsBrB,EAAUb,IAAM,QAItD,UAAEmC,EAAS,YAAEC,GAAgBC,YAAUb,EAAKjD,QAElD,OACEQ,eAAAN,WAAA,CAAAC,SAAA,CACEF,cAAC8D,IAAS,CAAA5D,SAAC,WAEXF,cAAC+D,OAAI,CAACrD,UAAU,mEAAkER,SAChFF,cAACgE,WAAQ,CAAA9D,SACPK,eAAA,QACE0D,SAAUpB,EACVnC,UAAU,kEAAiER,SAAA,CAE3EF,cAAA,OAAAE,SACEF,cAACkE,QAAK,CACJC,IAAKzB,EACL0B,KAAK,SACL1D,UAAU,oGACV2D,YAAY,wBAGhBrE,cAAA,OAAAE,SACEK,eAAC+D,SAAM,CACLC,SAAWC,GAAM7B,EAAU6B,EAAEC,OAAOC,OACpChE,UAAU,oGAAmGR,SAAA,CAE7GF,cAAA,UAAQ0E,MAAM,SAASC,cAAY,EAACC,QAAM,EAAA1E,SAAC,WAG3CF,cAAA,UAAQ0E,MAAM,YAAWxE,SAAC,cAC1BF,cAAA,UAAQ0E,MAAM,UAASxE,SAAC,YACxBF,cAAA,UAAQ0E,MAAM,YAAWxE,SAAC,eAC1BF,cAAA,UAAQ0E,MAAM,SAAQxE,SAAC,gBAG3BF,cAAA,OAAAE,SACEK,eAAC+D,SAAM,CACLC,SAAWC,GAAMjC,EAAQiC,EAAEC,OAAOC,OAClChE,UAAU,oGAAmGR,SAAA,CAE7GF,cAAA,UAAQ0E,MAAM,eAAeC,cAAY,EAACC,QAAM,EAAA1E,SAAC,iBAGjDF,cAAA,UAAQ0E,MAAM,IAAGxE,SAAC,uBAClBF,cAAA,UAAQ0E,MAAM,IAAGxE,SAAC,uBAClBF,cAAA,UAAQ0E,MAAM,KAAIxE,SAAC,wBACnBF,cAAA,UAAQ0E,MAAM,KAAIxE,SAAC,6BAGvBF,cAAA,OAAAE,SACEF,cAAC6E,IAAa,CAAC7B,KAAMY,EAAakB,SAAU,SAAS5E,SACnDK,eAAA,UACE6D,KAAK,SACL1D,UAAU,0RAAyRR,SAAA,CACpS,sBAECF,cAAA,QAAMU,UAAU,iBAAgBR,SAC9BF,cAAC+E,IAAsB,oBAQpC9B,EACCjD,cAACgF,IAAO,CAAC/B,QAASA,IACO,IAAvBW,EAAYqB,OACd1E,eAAC2E,iBAAc,CAACxE,UAAU,OAAMR,SAAA,CAC9BK,eAAC4E,QAAK,CAAAjF,SAAA,CACJF,cAACoF,cAAW,CAAAlF,SACVK,eAAA,MAAAL,SAAA,CACEF,cAACS,YAAS,CAAAP,SAAC,eACXF,cAACS,YAAS,CAAAP,SAAC,kBACXF,cAACS,YAAS,CAAAP,SAAC,gBACXF,cAACS,YAAS,CAAAP,SAAC,WACXF,cAACS,YAAS,CAACC,UAAU,cAAaR,SAAC,WACnCF,cAACS,YAAS,CAACC,UAAU,cAAaR,SAAC,WACnCF,cAACS,YAAS,CAACC,UAAU,aAAYR,SAAC,iBAGtCF,cAACH,IAAU,CAACE,OAAQ4D,OAEtB3D,cAACqF,cAAW,CAAAnF,SACVF,cAACsF,aAAU,CACTC,aAAkB,OAAJvC,QAAI,IAAJA,OAAI,EAAJA,EAAMwC,SACpB1C,eAAgBA,EAChByB,SAAU3B,EACV6C,MAAM,0BAKZzF,cAAC0F,IAAQ,CAAC5D,MAAM,YAEjB,C,kCClJP,wBAIA,MAAMqB,EAAgB,CACpBC,aAAYtD,GASR,IATS,KACX6F,EAAI,QACJC,EAAO,QACPvC,EAAO,OACPhC,EAAM,KACNiC,EAAO,EAAC,MACRC,EAAQ,EAAC,IACTC,EAAG,OACHC,EAAS,IACV3D,EACC,MAAM+F,EAA4B,OAAZxC,EAAmBA,EAAU,GAC7CyC,EAA0B,OAAXzE,EAAkBA,EAAS,GAC1C0E,EAAoB,OAARvC,EAAeA,EAAM,GACjCjC,EAAgB,OAAXkC,EAAkBA,EAAS,GAEtC,OAAOuC,IAASC,IACb,8BAA6BJ,YAAwBC,SAAoBC,UAAkBzC,WAAcC,YAAgBhC,IAC1HoE,EACAC,EAEJ,EAEAM,gBAAeC,GAKX,IALY,KACd7C,EAAO,EAAC,MACRC,EAAQ,EAAC,UACT6C,EAAY,OAAM,QAClBC,EAAU,SACXF,EACC,OAAOH,IAASC,IACb,uBAAsB3C,WAAcC,eAAmB6C,aAAqBC,IAEjF,EAEAC,sBAAqBC,GAA6C,IAA5C,UAAEH,EAAY,OAAM,QAAEC,EAAU,SAASE,EAC7D,OAAOP,IAASC,IACb,iCAAgCG,aAAqBC,IAE1D,EAEAG,0BAAyBC,GAAmB,IAAlB,OAAEC,EAAS,IAAID,EAEvC,OADAE,QAAQC,IAAI,SAAUF,GACfV,IAASC,IACb,qDAAoDS,IAEzD,EAEA,4BAAMG,CAAsBC,GAMxB,IANyB,KAC3BxD,EAAO,EAAC,MACRC,EAAQ,EAAC,OACTE,EAAS,GAAE,KACXC,EAAO,GAAE,OACTgD,EAAS,IACVI,EACC,MAAMvF,EAAgB,OAAXkC,EAAkBA,EAAS,GACtC,MAAY,aAARC,EACKsC,IAASC,IACb,2CAA0C3C,WAAcC,YAAgBhC,YAAamF,KAGjFV,IAASC,IACb,iCAAgC3C,WAAcC,YAAgBhC,IAGrE,EAEAwF,eAAcA,CAACxF,EAAIoE,IACVK,IAASC,IAAK,gBAAe1E,IAAMoE,GAG5CqB,aAAYA,CAACzF,EAAIoE,IACRK,IAASC,IAAK,kBAAiB1E,IAAMoE,GAG9CsB,YAAWA,CAAC1F,EAAIoE,EAAMC,IACbI,IAASkB,IAAK,kBAAiB3F,IAAMoE,EAAMC,GAGpDuB,YAAY5F,GACHyE,IAASoB,OAAQ,WAAU7F,MAIvB4B,K,kCCvFf,wBAkBe/B,IAfAtB,IAAiB,IAAhB,OAAEuB,GAAQvB,EACxB,OACEE,cAAAC,WAAA,CAAAC,SACEK,eAAA,QAAMG,UAAU,aAAYR,SAAA,CACd,cAAXmB,GAA0BrB,cAACqH,QAAK,CAACjD,KAAK,UAASlE,SAAEmB,IACtC,YAAXA,GAAwBrB,cAACqH,QAAK,CAACjD,KAAK,UAASlE,SAAEmB,IACpC,eAAXA,GAA2BrB,cAACqH,QAAK,CAAAnH,SAAEmB,IACxB,YAAXA,GAAwBrB,cAACqH,QAAK,CAAAnH,SAAEmB,IACrB,cAAXA,GAA0BrB,cAACqH,QAAK,CAACjD,KAAK,UAASlE,SAAEmB,IACtC,cAAXA,GAA0BrB,cAACqH,QAAK,CAACjD,KAAK,SAAQlE,SAAEmB,QAElD,C,kCCdP,kDAwDeC,IAjDMxB,IAAoB,IAAnB,GAAEyB,EAAE,MAAElB,GAAOP,EACjC,MAAM,YAAEwH,GAAgBnF,qBAAWY,KAUnC,OACE/C,cAAAC,WAAA,CAAAC,SACEK,eAAC+D,SAAM,CACLC,SAAWC,GAZU+C,EAAChG,EAAIF,KAC9B8B,IAAc8D,YAAY1F,EAAI,CAAEF,OAAQA,IACrCmG,MAAMC,IACLC,YAAcD,EAAIE,SAClBL,GAAY,EAAK,IAElBM,OAAOC,GAAQC,YAAYD,EAAIF,UAAS,EAMtBJ,CAAmBhG,EAAIiD,EAAEC,OAAOC,OACjDhE,UAAU,wHAAuHR,SAAA,CAEjIF,cAAA,UAAQ0E,MAAM,SAASC,cAAY,EAACC,QAAM,EAAA1E,SAClC,OAALG,QAAK,IAALA,OAAK,EAALA,EAAOgB,SAEVrB,cAAA,UAAQ2E,aAAgC,eAAb,OAALtE,QAAK,IAALA,OAAK,EAALA,EAAOgB,QAAwBqD,MAAM,YAAWxE,SAAC,cAGvEF,cAAA,UAAQ2E,aAAgC,aAAb,OAALtE,QAAK,IAALA,OAAK,EAALA,EAAOgB,QAAsBqD,MAAM,UAASxE,SAAC,YAGnEF,cAAA,UACE2E,aAAgC,gBAAb,OAALtE,QAAK,IAALA,OAAK,EAALA,EAAOgB,QACrBqD,MAAM,aAAYxE,SACnB,eAGDF,cAAA,UAAQ2E,aAAgC,cAAb,OAALtE,QAAK,IAALA,OAAK,EAALA,EAAOgB,QAAuBqD,MAAM,WAAUxE,SAAC,aAGrEF,cAAA,UAAQ2E,aAAgC,aAAb,OAALtE,QAAK,IAALA,OAAK,EAALA,EAAOgB,QAAsBqD,MAAM,UAASxE,SAAC,YAGnEF,cAAA,UAAQ2E,aAAgC,YAAb,OAALtE,QAAK,IAALA,OAAK,EAALA,EAAOgB,QAAqBqD,MAAM,SAAQxE,SAAC,WAGjEF,cAAA,UAAQ2E,aAAgC,eAAb,OAALtE,QAAK,IAALA,OAAK,EAALA,EAAOgB,QAAwBqD,MAAM,YAAWxE,SAAC,kBAIxE,C","file":"static/js/16.e52fae75.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport * as dayjs from \"dayjs\";\nimport { TableCell, TableBody, TableRow } from \"@windmill/react-ui\";\n\nimport Status from \"../table/Status\";\nimport { FiZoomIn } from \"react-icons/fi\";\nimport Tooltip from \"../tooltip/Tooltip\";\nimport SelectStatus from \"../form/SelectStatus\";\n\nconst OrderTable = ({ orders }) => {\n  return (\n    <>\n      <TableBody>\n        {orders?.map((order, i) => (\n          <TableRow key={i + 1}>\n            <TableCell>\n              <span className=\"text-sm\">\n                {dayjs(order.createdAt).format(\"MMM D, YYYY\")}\n              </span>\n            </TableCell>\n\n            <TableCell>\n              <span className=\"text-sm\">{order.customerId.firstName}</span>\n            </TableCell>\n            <TableCell>\n              {\" \"}\n              $<span className=\"text-sm\">{order.servicefee}</span>{\" \"}\n            </TableCell>\n            <TableCell>\n              {\" \"}\n              <span className=\"text-sm font-semibold\">\n                ${Math.round(order.totalCost)}.00\n              </span>{\" \"}\n            </TableCell>\n            <TableCell className=\"text-center text-xs\">\n              <Status status={order.status} />\n            </TableCell>\n            <TableCell className=\"text-center\">\n              <SelectStatus id={order._id} order={order} />\n            </TableCell>\n            <TableCell className=\"text-right flex justify-end\">\n              <div className=\"p-2 cursor-pointer text-gray-400 hover:text-green-600\">\n                {\" \"}\n                <Link to={`/order/${order._id}`}>\n                  <Tooltip\n                    id=\"view\"\n                    Icon={FiZoomIn}\n                    title=\"View Invoice\"\n                    bgColor=\"#34D399\"\n                  />\n                </Link>\n              </div>\n            </TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </>\n  );\n};\n\nexport default OrderTable;\n","import React, { useContext } from \"react\";\nimport { CSVDownloader } from \"react-papaparse\";\nimport {\n  Table,\n  TableHeader,\n  TableCell,\n  TableFooter,\n  TableContainer,\n  Select,\n  Input,\n  Card,\n  CardBody,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport { IoCloudDownloadOutline } from \"react-icons/io5\";\n\nimport useAsync from \"../hooks/useAsync\";\nimport useFilter from \"../hooks/useFilter\";\nimport NotFound from \"../components/table/NotFound\";\nimport OrderServices from \"../services/OrderServices\";\nimport Loading from \"../components/preloader/Loading\";\nimport OrderTable from \"../components/order/OrderTable\";\nimport PageTitle from \"../components/Typography/PageTitle\";\nimport { SidebarContext } from \"../context/SidebarContext\";\nimport { AdminContext } from \"../context/AdminContext\";\nconst Orders = () => {\n  const { state, dispatch } = useContext(AdminContext);\n  const { adminInfo } = state;\n  const {\n    time,\n    setTime,\n    currentPage,\n    searchText,\n    searchRef,\n    status,\n    setStatus,\n    handleChangePage,\n    handleSubmitForAll,\n    resultsPerPage,\n  } = useContext(SidebarContext);\n\n  const { data, loading } = useAsync(() =>\n    OrderServices.getAllOrders({\n      contact: searchText,\n      status,\n      page: currentPage,\n      limit: resultsPerPage,\n      day: time,\n      userid: adminInfo.role == \"shopowner\" ? adminInfo._id : \"\",\n    })\n  );\n\n  const { dataTable, serviceData } = useFilter(data.orders);\n\n  return (\n    <>\n      <PageTitle>Orders</PageTitle>\n\n      <Card className=\"min-w-0 shadow-xs overflow-hidden bg-white dark:bg-gray-800 mb-5\">\n        <CardBody>\n          <form\n            onSubmit={handleSubmitForAll}\n            className=\"py-3 grid gap-4 lg:gap-6 xl:gap-6 md:grid-cols-4 xl:grid-cols-4\"\n          >\n            <div>\n              <Input\n                ref={searchRef}\n                type=\"search\"\n                className=\"border h-12 text-sm focus:outline-none block w-full bg-gray-100 border-transparent focus:bg-white\"\n                placeholder=\"Search by invoice\"\n              />\n            </div>\n            <div>\n              <Select\n                onChange={(e) => setStatus(e.target.value)}\n                className=\"border h-12 text-sm focus:outline-none block w-full bg-gray-100 border-transparent focus:bg-white\"\n              >\n                <option value=\"Status\" defaultValue hidden>\n                  Status\n                </option>\n                <option value=\"Delivered\">Delivered</option>\n                <option value=\"Pending\">Pending</option>\n                <option value=\"Processed\">Processing</option>\n                <option value=\"Cancel\">Cancel</option>\n              </Select>\n            </div>\n            <div>\n              <Select\n                onChange={(e) => setTime(e.target.value)}\n                className=\"border h-12 text-sm focus:outline-none block w-full bg-gray-100 border-transparent focus:bg-white\"\n              >\n                <option value=\"Order limits\" defaultValue hidden>\n                  Order limits\n                </option>\n                <option value=\"5\">Last 5 days orders</option>\n                <option value=\"7\">Last 7 days orders</option>\n                <option value=\"15\">Last 15 days orders</option>\n                <option value=\"30\">Last 30 days orders</option>\n              </Select>\n            </div>\n            <div>\n              <CSVDownloader data={serviceData} filename={\"orders\"}>\n                <button\n                  type=\"button\"\n                  className=\"flex items-center justify-center text-sm leading-5 h-12 text-center transition-colors duration-150 font-medium focus:outline-none px-6 py-2 rounded-md text-white bg-green-500 border border-transparent active:bg-green-600 hover:bg-green-600 focus:ring focus:ring-purple-300 w-auto\"\n                >\n                  Download all Orders\n                  <span className=\"ml-2 text-base\">\n                    <IoCloudDownloadOutline />\n                  </span>\n                </button>\n              </CSVDownloader>\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n      {loading ? (\n        <Loading loading={loading} />\n      ) : serviceData.length !== 0 ? (\n        <TableContainer className=\"mb-8\">\n          <Table>\n            <TableHeader>\n              <tr>\n                <TableCell>Order Date</TableCell>\n                <TableCell>Customer Name</TableCell>\n                <TableCell>Service Fee</TableCell>\n                <TableCell>Amount</TableCell>\n                <TableCell className=\"text-center\">Status</TableCell>\n                <TableCell className=\"text-center\">Action</TableCell>\n                <TableCell className=\"text-right\">Invoice</TableCell>\n              </tr>\n            </TableHeader>\n            <OrderTable orders={dataTable} />\n          </Table>\n          <TableFooter>\n            <Pagination\n              totalResults={data?.totalDoc}\n              resultsPerPage={resultsPerPage}\n              onChange={handleChangePage}\n              label=\"Table navigation\"\n            />\n          </TableFooter>\n        </TableContainer>\n      ) : (\n        <NotFound title=\"Order\" />\n      )}\n    </>\n  );\n};\n\nexport default Orders;\n","import requests from \"./httpService\";\nimport { AdminContext } from \"../context/AdminContext\";\nimport ShopServices from \"./ShopServices\";\n\nconst OrderServices = {\n  getAllOrders({\n    body,\n    headers,\n    contact,\n    status,\n    page = 1,\n    limit = 8,\n    day,\n    userid = \"\",\n  }) {\n    const searchContact = contact !== null ? contact : \"\";\n    const searchStatus = status !== null ? status : \"\";\n    const searchDay = day !== null ? day : \"\";\n    const id = userid !== null ? userid : \"\";\n\n    return requests.get(\n      `/orders/all/orders?contact=${searchContact}&status=${searchStatus}&day=${searchDay}&page=${page}&limit=${limit}&userid=${id}`,\n      body,\n      headers\n    );\n  },\n\n  getRecentOrders({\n    page = 1,\n    limit = 8,\n    startDate = \"1:00\",\n    endDate = \"23:59\",\n  }) {\n    return requests.get(\n      `/orders/recent?page=${page}&limit=${limit}&startDate=${startDate}&endDate=${endDate}`\n    );\n  },\n\n  getOrderAndSalesChart({ startDate = \"1:00\", endDate = \"23:59\" }) {\n    return requests.get(\n      `/orders/sales/chart?startDate=${startDate}&endDate=${endDate}`\n    );\n  },\n\n  getBestSellerProductChart({ shopid = \"\" }) {\n    console.log(\"shopid\", shopid);\n    return requests.get(\n      `/orders/dashboard/orders/best-seller/chart?shopid=${shopid}`\n    );\n  },\n\n  async getDashboardOrdersData({\n    page = 1,\n    limit = 8,\n    userid = \"\",\n    role = \"\",\n    shopid = \"\",\n  }) {\n    const id = userid !== null ? userid : \"\";\n    if (role == \"shopowner\") {\n      return requests.get(\n        `/orders/dashboard/orders/shopowner?page=${page}&limit=${limit}&userid=${id}&shopid=${shopid}`\n      );\n    } else {\n      return requests.get(\n        `/orders/dashboard/orders?page=${page}&limit=${limit}&userid=${id}`\n      );\n    }\n  },\n\n  getOrderByUser(id, body) {\n    return requests.get(`/orders/user/${id}`, body);\n  },\n\n  getOrderById(id, body) {\n    return requests.get(`/orders/orders/${id}`, body);\n  },\n\n  updateOrder(id, body, headers) {\n    return requests.put(`/orders/orders/${id}`, body, headers);\n  },\n\n  deleteOrder(id) {\n    return requests.delete(`/orders/${id}`);\n  },\n};\n\nexport default OrderServices;\n","import React from 'react';\nimport { Badge } from '@windmill/react-ui';\n\nconst Status = ({ status }) => {\n  return (\n    <>\n      <span className=\"font-serif\">\n        {status === \"completed\" && <Badge type=\"success\">{status}</Badge>}\n        {status === \"pending\" && <Badge type=\"warning\">{status}</Badge>}\n        {status === \"processing\" && <Badge>{status}</Badge>}\n        {status === \"shipped\" && <Badge>{status}</Badge>}\n        {status === \"delivered\" && <Badge type=\"success\">{status}</Badge>}\n        {status === \"cancelled\" && <Badge type=\"danger\">{status}</Badge>}\n      </span>\n    </>\n  );\n};\n\nexport default Status;\n","import React, { useContext } from \"react\";\nimport { Select } from \"@windmill/react-ui\";\n\nimport OrderServices from \"../../services/OrderServices\";\nimport { notifySuccess, notifyError } from \"../../utils/toast\";\nimport { SidebarContext } from \"../../context/SidebarContext\";\n\nconst SelectStatus = ({ id, order }) => {\n  const { setIsUpdate } = useContext(SidebarContext);\n  const handleChangeStatus = (id, status) => {\n    OrderServices.updateOrder(id, { status: status })\n      .then((res) => {\n        notifySuccess(res.message);\n        setIsUpdate(true);\n      })\n      .catch((err) => notifyError(err.message));\n  };\n\n  return (\n    <>\n      <Select\n        onChange={(e) => handleChangeStatus(id, e.target.value)}\n        className=\"border border-gray-50 bg-gray-50 dark:border-gray-700 h-8 rounded-md text-xs focus:border-gray-400 focus:outline-none\"\n      >\n        <option value=\"status\" defaultValue hidden>\n          {order?.status}\n        </option>\n        <option defaultValue={order?.status === \"completed\"} value=\"completed\">\n          Completed\n        </option>\n        <option defaultValue={order?.status === \"pending\"} value=\"pending\">\n          Pending\n        </option>\n        <option\n          defaultValue={order?.status === \"processing\"}\n          value=\"processing\"\n        >\n          Processing\n        </option>\n        <option defaultValue={order?.status === \"refunded\"} value=\"refunded\">\n          Refunded\n        </option>\n        <option defaultValue={order?.status === \"on-hold\"} value=\"on-hold\">\n          On Hold\n        </option>\n        <option defaultValue={order?.status === \"failed\"} value=\"failed\">\n          Failed\n        </option>\n        <option defaultValue={order?.status === \"cancelled\"} value=\"cancelled\">\n          Cancelled\n        </option>\n      </Select>\n    </>\n  );\n};\n\nexport default SelectStatus;\n"],"sourceRoot":""}