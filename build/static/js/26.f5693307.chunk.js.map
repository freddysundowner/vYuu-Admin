{"version":3,"sources":["components/drawer/ShopDrawer.js","components/shops/ShopTable.js","pages/Shops.js","components/table/ShowHideButton.js"],"names":["ShopDrawer","_ref","id","register","watch","handleSubmit","onSubmit","errors","imageUrl","setImageUrl","tag","setTag","useProductSubmit","_jsxs","_Fragment","children","_jsx","className","Title","title","description","Scrollbars","LabelArea","label","Uploader","InputArea","required","name","type","placeholder","Error","errorName","sku","Textarea","rows","spellCheck","unit","InputValue","maxValue","minValue","quantity","originalPrice","defaultValue","salePrice","ReactTagInput","tags","onChange","newTags","DrawerButton","React","memo","ShopTable","shops","serviceId","handleModalOpen","handleUpdate","useToggleDrawer","MainModal","MainDrawer","TableBody","map","shop","i","_shop$userId","TableRow","TableCell","image","Avatar","src","alt","userId","userName","open","Badge","location","ShowHideButton","_id","status","onClick","Tooltip","Icon","FiTrash2","bgColor","Shops","currentPage","handleChangePage","searchText","searchRef","handleSubmitForAll","limitData","useContext","SidebarContext","data","loading","useAsync","ShopServices","getAllShops","page","limit","serviceData","handleOnDrop","handleUploadProducts","useFilter","PageTitle","ProductDrawer","Card","CardBody","Input","ref","Loading","length","TableContainer","Table","TableHeader","TableFooter","Pagination","totalResults","totalDoc","resultsPerPage","NotFound","customValue","customeKey","useLocation","setIsUpdate","handleChangeStatus","console","log","notifySuccess","pathname","UserServices","updateUserById","accountDisabled","then","res","catch","err","notifyError","message","ProductServices","updateProduct","available","updateShop","BsToggleOn","BsToggleOff"],"mappings":"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","file":"static/js/26.f5693307.chunk.js","sourcesContent":["import React from \"react\";\nimport { Scrollbars } from \"react-custom-scrollbars-2\";\nimport { Textarea, Select } from \"@windmill/react-ui\";\nimport ReactTagInput from \"@pathofdev/react-tag-input\";\n\nimport Title from \"../form/Title\";\nimport Error from \"../form/Error\";\nimport LabelArea from \"../form/LabelArea\";\nimport InputArea from \"../form/InputArea\";\nimport InputValue from \"../form/InputValue\";\nimport DrawerButton from \"../form/DrawerButton\";\nimport Uploader from \"../image-uploader/Uploader\";\nimport useProductSubmit from \"../../hooks/useProductSubmit\";\n\nconst ShopDrawer = ({ id }) => {\n  const {\n    register,\n    watch,\n    handleSubmit,\n    onSubmit,\n    errors,\n    imageUrl,\n    setImageUrl,\n    tag,\n    setTag,\n  } = useProductSubmit(id);\n\n  return (\n    <>\n      <div className=\"w-full relative p-6 border-b border-gray-100 bg-gray-50 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-300\">\n        {id ? (\n          <Title\n            title=\"Update Shop\"\n            description=\"Updated your product and necessary information from here\"\n          />\n        ) : (\n          <Title\n            title=\"Add Shop\"\n            description=\"Add your product and necessary information from here\"\n          />\n        )}\n      </div>\n      <Scrollbars className=\"w-full md:w-7/12 lg:w-8/12 xl:w-8/12 relative dark:bg-gray-700 dark:text-gray-200\">\n        <form onSubmit={handleSubmit(onSubmit)} className=\"block\">\n          <div className=\"px-6 pt-8 flex-grow w-full h-full max-h-full pb-40 md:pb-32 lg:pb-32 xl:pb-32\">\n            <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\n              <LabelArea label=\"Product Image\" />\n              <div className=\"col-span-8 sm:col-span-4\">\n                <Uploader imageUrl={imageUrl} setImageUrl={setImageUrl} />\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\n              <LabelArea label=\"Product SKU\" />\n              <div className=\"col-span-8 sm:col-span-4\">\n                <InputArea\n                  register={register}\n                  required=\"false\"\n                  label=\"Product SKU\"\n                  name=\"sku\"\n                  type=\"text\"\n                  placeholder=\"Product SKU\"\n                />\n                <Error errorName={errors.sku} />\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\n              <LabelArea label=\"Product Title/Name\" />\n              <div className=\"col-span-8 sm:col-span-4\">\n                <InputArea\n                  register={register}\n                  label=\"Product Title/Name\"\n                  name=\"title\"\n                  type=\"text\"\n                  placeholder=\"Product title\"\n                />\n                <Error errorName={errors.title} />\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\n              <LabelArea label=\"Product Description\" />\n              <div className=\"col-span-8 sm:col-span-4\">\n                <Textarea\n                  className=\"border text-sm focus:outline-none block w-full bg-gray-100 border-transparent focus:bg-white\"\n                  {...register(\"description\", {\n                    required: \"Description is required!\",\n                    // minLength: {\n                    //   value: 20,\n                    //   message: 'Minimum 20 character!',\n                    // },\n                  })}\n                  name=\"description\"\n                  placeholder=\"Product details\"\n                  rows=\"4\"\n                  spellCheck=\"false\"\n                />\n                <Error errorName={errors.description} />\n              </div>\n            </div>\n\n            {/* <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\n              <LabelArea label=\"Parent Category\" />\n              <div className=\"col-span-8 sm:col-span-4\">\n                <Select\n                  className=\"border h-12 text-sm focus:outline-none block w-full bg-gray-100 dark:bg-white border-transparent focus:bg-white\"\n                  name=\"parent\"\n                  {...register(\"parent\", {\n                    // required: \"Product parent category is required!\",\n                  })}\n                >\n                  <option value=\"\" defaultValue hidden>\n                    Select parent category\n                  </option>\n                  <ParentCategory />\n                </Select>\n                <Error errorName={errors.parent} />\n              </div> */}\n            {/* </div> */}\n\n            <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\n              <LabelArea label=\"Unit (green, pieces, 1kg, 2kg...etc)\" />\n              <div className=\"col-span-8 sm:col-span-4\">\n                <InputArea\n                  register={register}\n                  label=\"Unit\"\n                  name=\"variations\"\n                  type=\"text\"\n                  placeholder=\"Unit\"\n                />\n                <Error errorName={errors.unit} />\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\n              <LabelArea label=\"Product Quantity\" />\n              <div className=\"col-span-8 sm:col-span-4\">\n                <InputValue\n                  register={register}\n                  maxValue={1000}\n                  minValue={0}\n                  label=\"Quantity\"\n                  name=\"quantity\"\n                  type=\"number\"\n                  placeholder=\"Quantity\"\n                />\n                <Error errorName={errors.quantity} />\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\n              <LabelArea label=\"Discounted Price\" />\n              <div className=\"col-span-8 sm:col-span-4\">\n                <InputValue\n                  register={register}\n                  label=\"Price\"\n                  name=\"originalPrice\"\n                  type=\"number\"\n                  placeholder=\"Price\"\n                />\n                <Error errorName={errors.originalPrice} />\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\n              <LabelArea label=\"Regular Price\" />\n              <div className=\"col-span-8 sm:col-span-4\">\n                <InputValue\n                  register={register}\n                  maxValue={2000}\n                  minValue={1}\n                  defaultValue=\"0\"\n                  required=\"false\"\n                  label=\"Sale price\"\n                  name=\"salePrice\"\n                  type=\"number\"\n                  placeholder=\"Sale price\"\n                />\n                <Error errorName={errors.salePrice} />\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\n              <LabelArea label=\"Product Tag\" />\n              <div className=\"col-span-8 sm:col-span-4\">\n                <ReactTagInput\n                  placeholder=\"Product Tag (Write then press enter to add new tag )\"\n                  tags={tag}\n                  onChange={(newTags) => setTag(newTags)}\n                />\n              </div>\n            </div>\n          </div>\n\n          <DrawerButton id={id} title=\"Product\" />\n        </form>\n      </Scrollbars>\n    </>\n  );\n};\n\nexport default React.memo(ShopDrawer);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  TableCell,\n  TableBody,\n  TableRow,\n  Badge,\n  Avatar,\n} from \"@windmill/react-ui\";\nimport { FiZoomIn } from \"react-icons/fi\";\nimport { FiEdit, FiTrash2 } from \"react-icons/fi\";\n\nimport Tooltip from \"../tooltip/Tooltip\";\nimport MainModal from \"../modal/MainModal\";\nimport MainDrawer from \"../drawer/MainDrawer\";\nimport ShopDrawer from \"../drawer/ShopDrawer\";\nimport ShowHideButton from \"../table/ShowHideButton\";\nimport EditDeleteButton from \"../table/EditDeleteButton\";\nimport useToggleDrawer from \"../../hooks/useToggleDrawer\";\n\nconst ShopTable = ({ shops }) => {\n  const { title, serviceId, handleModalOpen, handleUpdate } = useToggleDrawer();\n  return (\n    <>\n      <MainModal id={serviceId} title={title} />\n      <MainDrawer>\n        <ShopDrawer id={serviceId} />\n      </MainDrawer>\n      <TableBody>\n        {shops?.map((shop, i) => (\n          <TableRow key={i + 1}>\n            <TableCell>\n              <div className=\"flex items-center\">\n                {shop.image ? (\n                  <Avatar\n                    className=\"hidden p-1 mr-2 md:block bg-gray-50 shadow-none\"\n                    src={shop.image}\n                    alt={shop.name}\n                  />\n                ) : (\n                  <></>\n                )}\n                <div>\n                  <h2 className=\"text-sm font-medium\">{shop.name}</h2>\n                </div>\n              </div>\n            </TableCell>\n\n            <TableCell>\n              <span className=\"text-sm\">{shop.userId?.userName}</span>{\" \"}\n            </TableCell>\n            <TableCell>\n              {shop.open == true ? (\n                <Badge type=\"success\">Active</Badge>\n              ) : (\n                <Badge type=\"danger\">Closed</Badge>\n              )}\n            </TableCell>\n            <TableCell>\n              {\" \"}\n              <span className=\"text-sm\">{shop.location}</span>{\" \"}\n            </TableCell>\n            <TableCell>\n              <ShowHideButton id={shop._id} status={shop.open} />\n            </TableCell>\n            <TableCell>\n              <div\n                onClick={() => handleModalOpen(shop._id, shop.name)}\n                className=\"p-2 cursor-pointer text-gray-400 hover:text-red-600\"\n              >\n                <Tooltip\n                  id=\"delete\"\n                  Icon={FiTrash2}\n                  title=\"Delete\"\n                  bgColor=\"#EF4444\"\n                />\n              </div>\n            </TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </>\n  );\n};\n\nexport default React.memo(ShopTable);\n","import React, { useContext } from \"react\";\nimport {\n  Table,\n  TableHeader,\n  TableCell,\n  TableFooter,\n  TableContainer,\n  Input,\n  Card,\n  CardBody,\n  Pagination,\n} from \"@windmill/react-ui\";\n\nimport useAsync from \"../hooks/useAsync\";\nimport useFilter from \"../hooks/useFilter\";\nimport NotFound from \"../components/table/NotFound\";\nimport Loading from \"../components/preloader/Loading\";\nimport ShopServices from \"../services/ShopServices\";\nimport PageTitle from \"../components/Typography/PageTitle\";\nimport { SidebarContext } from \"../context/SidebarContext\";\nimport ShopTable from \"../components/shops/ShopTable\";\nimport MainDrawer from \"../components/drawer/MainDrawer\";\nimport ProductDrawer from \"../components/drawer/ProductDrawer\";\n\nconst Shops = () => {\n  const {\n    currentPage,\n    handleChangePage,\n    searchText,\n    searchRef,\n    handleSubmitForAll,\n    limitData,\n  } = useContext(SidebarContext);\n\n  const { data, loading } = useAsync(() =>\n    ShopServices.getAllShops({\n      page: currentPage,\n      limit: limitData,\n      title: searchText,\n    })\n  );\n\n\n  const { serviceData, handleOnDrop, handleUploadProducts } = useFilter(\n    data.shops\n  );\n\n  return (\n    <>\n      <PageTitle>Shops</PageTitle>\n      <MainDrawer>\n        <ProductDrawer />\n      </MainDrawer>\n\n      <Card className=\"min-w-0 shadow-xs overflow-hidden bg-white dark:bg-gray-800 mb-5\">\n        <CardBody>\n          <form\n            onSubmit={handleSubmitForAll}\n            className=\"py-3 grid gap-4 lg:gap-6 xl:gap-6 md:flex xl:flex\"\n          >\n            <div className=\"flex-grow-0 md:flex-grow lg:flex-grow xl:flex-grow\">\n              <Input\n                ref={searchRef}\n                className=\"border h-12 text-sm focus:outline-none block w-full bg-gray-100 border-transparent focus:bg-white\"\n                type=\"search\"\n                name=\"search\"\n                placeholder=\"Search by shop name\"\n              />\n              <button\n                type=\"submit\"\n                className=\"absolute right-0 top-0 mt-5 mr-1\"\n              ></button>\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n      {loading ? (\n        <Loading loading={loading} />\n      ) : serviceData.length !== 0 ? (\n        <TableContainer className=\"mb-8 rounded-b-lg\">\n          <Table>\n            <TableHeader>\n              <tr>\n                <TableCell>Shop name</TableCell>\n                <TableCell>Shop Owner</TableCell>\n                <TableCell>Status</TableCell>\n                <TableCell>Location</TableCell>\n                <TableCell className=\"text-center\">Active</TableCell>\n                <TableCell className=\"text-right\">Actions</TableCell>\n              </tr>\n            </TableHeader>\n            <ShopTable shops={data.shops} />\n          </Table>\n          <TableFooter>\n            <Pagination\n              totalResults={data?.totalDoc}\n              resultsPerPage={limitData}\n              onChange={handleChangePage}\n              label=\"Product Page Navigation\"\n            />\n          </TableFooter>\n        </TableContainer>\n      ) : (\n        <NotFound title=\"Product\" />\n      )}\n    </>\n  );\n};\n\nexport default Shops;\n","import React, { useContext } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { BsToggleOff, BsToggleOn } from \"react-icons/bs\";\n\nimport { notifySuccess, notifyError } from \"../../utils/toast\";\nimport ProductServices from \"../../services/ProductServices\";\nimport { SidebarContext } from \"../../context/SidebarContext\";\nimport UserServices from \"../../services/UserServices\";\nimport ShopServices from \"../../services/ShopServices\";\n\nconst ShowHideButton = ({ id, status, customValue = \"\", customeKey = \"\" }) => {\n  const location = useLocation();\n  const { setIsUpdate } = useContext(SidebarContext);\n\n  const handleChangeStatus = (id, status) => {\n    console.log(status);\n    notifySuccess(\"please wait...\");\n    if (location.pathname === \"/users\") {\n      UserServices.updateUserById(id, { accountDisabled: status })\n        .then((res) => {\n          setIsUpdate(true);\n          notifySuccess(\"status updated\");\n        })\n        .catch((err) => notifyError(err.message));\n    }\n\n    if (location.pathname === \"/products\") {\n      console.log(customeKey);\n      if ((customeKey = \"feature\")) {\n        ProductServices.updateProduct(id, { [customeKey]: customValue })\n          .then((res) => {\n            console.log(res);\n            setIsUpdate(true);\n            notifySuccess(\"status updated\");\n          })\n          .catch((err) => notifyError(err.message));\n      } else {\n        ProductServices.updateProduct(id, { available: !status })\n          .then((res) => {\n            console.log(res);\n            setIsUpdate(true);\n            notifySuccess(\"status updated\");\n          })\n          .catch((err) => notifyError(err.message));\n      }\n    }\n\n    if (location.pathname === \"/shops\") {\n      ShopServices.updateShop(id, { open: !status })\n        .then((res) => {\n          console.log(res);\n          setIsUpdate(true);\n          notifySuccess(\"status updated\");\n        })\n        .catch((err) => notifyError(err.message));\n    }\n  };\n\n  return (\n    <span\n      className=\"cursor-pointer text-xl flex justify-center text-center\"\n      onClick={() => handleChangeStatus(id, status)}\n    >\n      {status == true ? (\n        <BsToggleOn className=\"text-green-500\" />\n      ) : (\n        <BsToggleOff className=\"text-orange-500\" />\n      )}\n    </span>\n  );\n};\n\nexport default ShowHideButton;\n"],"sourceRoot":""}