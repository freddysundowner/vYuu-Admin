{"version":3,"sources":["components/drawer/AdminDrawer.js","components/staff/AdminTable.js","pages/Admin.js","components/form/SelectRole.js","hooks/useAdminSubmit.js"],"names":["AdminDrawer","_ref","id","register","handleSubmit","onSubmit","errors","imageUrl","setImageUrl","selectedDate","setSelectedDate","useAdminSubmit","_jsxs","_Fragment","children","_jsx","className","Title","title","description","Scrollbars","Card","CardBody","LabelArea","label","InputArea","name","type","pattern","placeholder","Error","errorName","email","required","autocomplete","password","Input","onChange","e","target","value","joiningDate","SelectRole","role","DrawerButton","AdminTable","staffs","serviceId","handleModalOpen","handleUpdate","useToggleDrawer","MainModal","MainDrawer","TableBody","map","staff","TableRow","TableCell","_id","substring","dayjs","joiningData","format","EditDeleteButton","Admin","state","useContext","AdminContext","adminInfo","toggleDrawer","SidebarContext","data","loading","useAsync","AdminServices","getAllAdmin","userRef","setRole","handleChangePage","totalResults","resultsPerPage","dataTable","serviceData","handleSubmitUser","useFilter","admin","PageTitle","Button","onClick","FiPlus","Loading","length","TableContainer","Table","TableHeader","TableFooter","Pagination","NotFound","Select","defaultValue","hidden","useState","location","useLocation","isDrawerOpen","closeDrawer","setIsUpdate","setValue","clearErrors","formState","useForm","useEffect","getAdminById","then","res","catch","err","notifyError","pathname","Cookies","get","user","JSON","parse","image","staffData","Date","updateAdmin","notifySuccess","message","addAdmin"],"mappings":"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","file":"static/js/18.21e158fc.chunk.js","sourcesContent":["import React from \"react\";\nimport { Scrollbars } from \"react-custom-scrollbars-2\";\nimport { Card, CardBody, Input } from \"@windmill/react-ui\";\n\nimport Title from \"../form/Title\";\nimport Error from \"../form/Error\";\nimport LabelArea from \"../form/LabelArea\";\nimport InputArea from \"../form/InputArea\";\nimport SelectRole from \"../form/SelectRole\";\nimport DrawerButton from \"../form/DrawerButton\";\nimport useAdminSubmit from \"../../hooks/useAdminSubmit\";\n\nconst AdminDrawer = ({ id }) => {\n  const {\n    register,\n    handleSubmit,\n    onSubmit,\n    errors,\n    imageUrl,\n    setImageUrl,\n    selectedDate,\n    setSelectedDate,\n  } = useAdminSubmit(id);\n\n  return (\n    <>\n      <div className=\"w-full relative p-6 border-b border-gray-100 bg-gray-50 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-300\">\n        {id ? (\n          <Title\n            title=\"Update Admin\"\n            description=\"Updated your staff necessary information from here\"\n          />\n        ) : (\n          <Title\n            title=\"Add Admin\"\n            description=\"Add your staff necessary information from here\"\n          />\n        )}\n      </div>\n      <Scrollbars className=\"w-full md:w-7/12 lg:w-8/12 xl:w-8/12 relative dark:bg-gray-700 dark:text-gray-200\">\n        <Card className=\"overflow-y-scroll flex-grow scrollbar-hide w-full max-h-full\">\n          <CardBody>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div className=\"px-6 pt-8 flex-grow scrollbar-hide w-full max-h-full pb-40\">\n                <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\n                  <LabelArea label=\"Email\" />\n                  <div className=\"col-span-8 sm:col-span-4\">\n                    <InputArea\n                      register={register}\n                      label=\"Email\"\n                      name=\"email\"\n                      type=\"text\"\n                      pattern={\n                        /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/\n                      }\n                      placeholder=\"Email\"\n                    />\n                    <Error errorName={errors.email} />\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\n                  <LabelArea label=\"Password\" />\n                  <div className=\"col-span-8 sm:col-span-4\">\n                    {id ? (\n                      <InputArea\n                        required\n                        register={register}\n                        label=\"Password\"\n                        name=\"password\"\n                        type=\"password\"\n                        autocomplete=\"new-password\"\n                        placeholder=\"Password\"\n                      />\n                    ) : (\n                      <InputArea\n                        register={register}\n                        label=\"Password\"\n                        name=\"password\"\n                        type=\"password\"\n                        autocomplete=\"new-password\"\n                        placeholder=\"Password\"\n                      />\n                    )}\n\n                    <Error errorName={errors.password} />\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\n                  <LabelArea label=\"Joining Date\" />\n                  <div className=\"col-span-8 sm:col-span-4\">\n                    <Input\n                      onChange={(e) => setSelectedDate(e.target.value)}\n                      label=\"Joining Date\"\n                      name=\"joiningDate\"\n                      value={selectedDate}\n                      type=\"date\"\n                      className=\"border h-12 text-sm focus:outline-none block w-full bg-gray-100 dark:bg-white border-transparent focus:bg-white\"\n                      placeholder=\"Admin Joining Date\"\n                    />\n                    <Error errorName={errors.joiningDate} />\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\n                  <LabelArea label=\"Admin Role\" />\n                  <div className=\"col-span-8 sm:col-span-4\">\n                    <SelectRole register={register} label=\"Role\" name=\"role\" />\n                    <Error errorName={errors.role} />\n                  </div>\n                </div>\n              </div>\n\n              <DrawerButton id={id} title=\"Admin\" />\n            </form>\n          </CardBody>\n        </Card>\n      </Scrollbars>\n    </>\n  );\n};\n\nexport default AdminDrawer;\n","import React from \"react\";\nimport * as dayjs from \"dayjs\";\nimport { TableCell, TableBody, TableRow, Avatar } from \"@windmill/react-ui\";\n\nimport MainModal from \"../modal/MainModal\";\nimport MainDrawer from \"../drawer/MainDrawer\";\nimport AdminDrawer from \"../drawer/AdminDrawer\";\nimport useToggleDrawer from \"../../hooks/useToggleDrawer\";\nimport EditDeleteButton from \"../table/EditDeleteButton\";\n\nconst AdminTable = ({ staffs }) => {\n  const { title, serviceId, handleModalOpen, handleUpdate } = useToggleDrawer();\n\n  return (\n    <>\n      <MainModal id={serviceId} title={title} />\n      <MainDrawer>\n        <AdminDrawer id={serviceId} />\n      </MainDrawer>\n\n      <TableBody>\n        {staffs?.map((staff) => (\n          <TableRow key={staff._id}>\n            <TableCell>\n              <span className=\"font-semibold uppercase text-xs\">\n                {\" \"}\n                {staff._id.substring(20, 24)}\n              </span>\n            </TableCell>\n\n            <TableCell>\n              <span className=\"text-sm\">{staff.email}</span>{\" \"}\n            </TableCell>\n            <TableCell>\n              <span className=\"text-sm\">\n                {dayjs(staff.joiningData).format(\"MMM D, YYYY\")}\n              </span>\n            </TableCell>\n            <TableCell>\n              <span className=\"text-sm font-semibold\">{staff.role}</span>\n            </TableCell>\n            <TableCell>\n              <EditDeleteButton\n                id={staff._id}\n                title={staff.name}\n                handleUpdate={handleUpdate}\n                handleModalOpen={handleModalOpen}\n              />\n            </TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </>\n  );\n};\n\nexport default AdminTable;\n","import React, { useContext } from \"react\";\nimport {\n  Table,\n  TableHeader,\n  TableCell,\n  TableFooter,\n  TableContainer,\n  Select,\n  Input,\n  Button,\n  Card,\n  CardBody,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport { FiPlus } from \"react-icons/fi\";\n\nimport useAsync from \"../hooks/useAsync\";\nimport useFilter from \"../hooks/useFilter\";\nimport NotFound from \"../components/table/NotFound\";\nimport Loading from \"../components/preloader/Loading\";\nimport AdminTable from \"../components/staff/AdminTable\";\nimport AdminServices from \"../services/AdminServices\";\nimport { AdminContext } from \"../context/AdminContext\";\nimport { SidebarContext } from \"../context/SidebarContext\";\nimport PageTitle from \"../components/Typography/PageTitle\";\nimport MainDrawer from \"../components/drawer/MainDrawer\";\nimport AdminDrawer from \"../components/drawer/AdminDrawer\";\n\nconst Admin = () => {\n  const { state } = useContext(AdminContext);\n  const { adminInfo } = state;\n  const { toggleDrawer } = useContext(SidebarContext);\n\n  const { data, loading } = useAsync(() =>\n    AdminServices.getAllAdmin()\n  );\n\n\n  const {\n    userRef,\n    setRole,\n    handleChangePage,\n    totalResults,\n    resultsPerPage,\n    dataTable,\n    serviceData,\n    handleSubmitUser,\n  } = useFilter(data.admin);\n\n  return (\n    <>\n      <PageTitle>All Admin</PageTitle>\n      <MainDrawer>\n        <AdminDrawer />\n      </MainDrawer>\n\n      <Card className=\"min-w-0 shadow-xs overflow-hidden bg-white dark:bg-gray-800 mb-5\">\n        <CardBody>\n          <form\n            onSubmit={handleSubmitUser}\n            className=\"py-3 grid gap-4 lg:gap-6 xl:gap-6 md:flex xl:flex\"\n          >\n            <div className=\"flex-grow-0 md:flex-grow lg:flex-grow xl:flex-grow\">\n             \n            </div>\n\n            <div className=\"w-full md:w-56 lg:w-56 xl:w-56\">\n              <Button onClick={toggleDrawer} className=\"w-full rounded-md h-12\">\n                <span className=\"mr-3\">\n                  <FiPlus />\n                </span>\n                Add Admin\n              </Button>\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n\n      {loading ? (\n        <Loading loading={loading} />\n      ) : serviceData.length !== 0 ? (\n        <TableContainer className=\"mb-8 rounded-b-lg\">\n          <Table>\n            <TableHeader>\n              <tr>\n                <TableCell>Id</TableCell>\n                <TableCell>Email</TableCell>\n                <TableCell>Joining Date</TableCell>\n                <TableCell>Role</TableCell>\n\n                <TableCell className=\"text-right\">Actions</TableCell>\n              </tr>\n            </TableHeader>\n            <AdminTable staffs={dataTable} />\n          </Table>\n          <TableFooter>\n            <Pagination\n              totalResults={totalResults}\n              resultsPerPage={resultsPerPage}\n              onChange={handleChangePage}\n              label=\"Table navigation\"\n            />\n          </TableFooter>\n        </TableContainer>\n      ) : (\n        <NotFound title=\"Admin\" />\n      )}\n    </>\n  );\n};\n\nexport default Admin;\n","import React from \"react\";\nimport { Select } from \"@windmill/react-ui\";\n\nconst SelectRole = ({ setRole, register, name, label }) => {\n  return (\n    <>\n      <Select\n        onChange={(e) => setRole(e.target.value)}\n        className=\"border h-12 text-sm focus:outline-none block w-full bg-gray-100 dark:bg-white border-transparent focus:bg-white\"\n        name={name}\n        {...register(`${name}`, {\n          required: `${label} is required!`,\n        })}\n      >\n        <option value=\"\" defaultValue hidden>\n          Admin role\n        </option>\n        <option value=\"admin\">Admin</option>\n        <option value=\"restricted\">Restricted</option>\n      </Select>\n    </>\n  );\n};\n\nexport default SelectRole;\n","import { useContext, useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Cookies from \"js-cookie\";\nimport dayjs from \"dayjs\";\nimport { useLocation } from \"react-router\";\n\nimport AdminServices from \"../services/AdminServices\";\nimport { AdminContext } from \"../context/AdminContext\";\nimport { SidebarContext } from \"../context/SidebarContext\";\nimport { notifyError, notifySuccess } from \"../utils/toast\";\n\nconst useAdminSubmit = (id) => {\n  const { state } = useContext(AdminContext);\n  const { adminInfo } = state;\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [selectedDate, setSelectedDate] = useState(\"\");\n  const location = useLocation();\n  const { isDrawerOpen, closeDrawer, setIsUpdate } = useContext(SidebarContext);\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    clearErrors,\n    formState: { errors },\n  } = useForm();\n\n  const onSubmit = (data) => {\n    const staffData = {\n      email: data.email,\n      password: data.password,\n      joiningDate: selectedDate\n        ? selectedDate\n        : dayjs(new Date()).format(\"YYYY-MM-DD\"),\n      role: data.role,\n    };\n\n    if (id) {\n      AdminServices.updateAdmin(id, { email: adminInfo.email, data: staffData })\n        .then((res) => {\n          setIsUpdate(true);\n          notifySuccess(\"Admin Updated Successfully!\");\n        })\n        .catch((err) => notifyError(err.message));\n      closeDrawer();\n    } else {\n      AdminServices.addAdmin(staffData)\n        .then((res) => {\n          setIsUpdate(true);\n          notifySuccess(res.message);\n        })\n        .catch((err) => notifyError(err.message));\n      closeDrawer();\n    }\n  };\n\n  useEffect(() => {\n    if (!isDrawerOpen) {\n      setValue(\"email\");\n      setValue(\"password\");\n      setValue(\"joiningDate\");\n      setValue(\"role\");\n      clearErrors(\"email\");\n      clearErrors(\"password\");\n      clearErrors(\"joiningDate\");\n      clearErrors(\"role\");\n      return;\n    }\n    if (id) {\n      AdminServices.getAdminById(id)\n        .then((res) => {\n          if (res) {\n            setValue(\"email\", res.admin.email);\n            setValue(\"password\");\n            setValue(\"joiningDate\", res.admin.joiningData);\n            setValue(\"role\", res.admin.role);\n            setSelectedDate(dayjs(res.joiningData).format(\"YYYY-MM-DD\"));\n          }\n        })\n        .catch((err) => {\n          notifyError(\"There is a server error!\");\n        });\n    }\n  }, [id, setValue, isDrawerOpen, adminInfo.email, clearErrors]);\n\n  useEffect(() => {\n    if (\n      location.pathname === \"/setting\" ||\n      (location.pathname === \"/edit-profile\" && Cookies.get(\"adminInfo\"))\n    ) {\n      const user = JSON.parse(Cookies.get(\"adminInfo\"));\n      setValue(\"email\", user.email);\n      setValue(\"role\", user.role);\n      setImageUrl(user.image);\n      setSelectedDate(dayjs(user.joiningData).format(\"YYYY-MM-DD\"));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return {\n    register,\n    handleSubmit,\n    onSubmit,\n    errors,\n    setImageUrl,\n    imageUrl,\n    selectedDate,\n    setSelectedDate,\n  };\n};\n\nexport default useAdminSubmit;\n"],"sourceRoot":""}