{"version":3,"sources":["components/product/ProductTable.js","components/order/OrderTable.js","pages/Profile.js","services/OrderServices.js","components/table/Status.js","components/table/ShowHideButton.js","components/form/SelectStatus.js"],"names":["ProductTable","_ref","products","title","serviceId","handleModalOpen","handleUpdate","useToggleDrawer","_jsxs","_Fragment","children","_jsx","MainModal","id","MainDrawer","ProductDrawer","TableBody","map","product","i","TableRow","TableCell","className","Avatar","src","images","alt","name","interest","e","price","quantity","Badge","type","discountedPrice","Link","to","_id","Tooltip","Icon","FiZoomIn","bgColor","ShowHideButton","status","available","feature","customValue","customeKey","EditDeleteButton","React","memo","OrderTable","orders","order","dayjs","createdAt","format","customerId","firstName","servicefee","Math","round","totalCost","Status","SelectStatus","ProfileDetails","_products$data","_orders$data","useParams","currentPage","searchText","category","sortedField","limitData","handleChangePage","resultsPerPage","time","useContext","SidebarContext","data","loading","useAsync","UserServices","getUserById","ProductServices","getAllProducts","page","limit","userid","OrderServices","getAllOrders","contact","day","PageTitle","Loading","profilePhoto","userName","shopId","bio","email","accountDisabled","TableContainer","Table","TableHeader","TableFooter","Pagination","totalResults","totalDoc","onChange","label","clas","xmlns","fill","viewBox","stroke","d","address","addrress1","addrress2","city","state","phone","body","headers","searchContact","searchStatus","searchDay","requests","get","getRecentOrders","_ref2","startDate","endDate","getOrderAndSalesChart","_ref3","getBestSellerProductChart","_ref4","shopid","console","log","getDashboardOrdersData","_ref5","role","getOrderByUser","getOrderById","updateOrder","put","deleteOrder","delete","location","useLocation","setIsUpdate","onClick","handleChangeStatus","notifySuccess","pathname","updateUserById","then","res","catch","err","notifyError","message","updateProduct","ShopServices","updateShop","open","BsToggleOn","BsToggleOff","Select","target","value","defaultValue","hidden"],"mappings":"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","file":"static/js/14.ba38c82f.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  TableCell,\n  TableBody,\n  TableRow,\n  Badge,\n  Avatar,\n} from \"@windmill/react-ui\";\nimport { FiZoomIn } from \"react-icons/fi\";\n\nimport Tooltip from \"../tooltip/Tooltip\";\nimport MainModal from \"../modal/MainModal\";\nimport MainDrawer from \"../drawer/MainDrawer\";\nimport ProductDrawer from \"../drawer/ProductDrawer\";\nimport ShowHideButton from \"../table/ShowHideButton\";\nimport EditDeleteButton from \"../table/EditDeleteButton\";\nimport useToggleDrawer from \"../../hooks/useToggleDrawer\";\n\nconst ProductTable = ({ products }) => {\n  const { title, serviceId, handleModalOpen, handleUpdate } = useToggleDrawer();\n\n  return (\n    <>\n      <MainModal id={serviceId} title={title} />\n      <MainDrawer>\n        <ProductDrawer id={serviceId} />\n      </MainDrawer>\n      <TableBody>\n        {products?.map((product, i) => (\n          <TableRow key={i + 1}>\n            <TableCell>\n              <div className=\"flex items-center\">\n                <Avatar\n                  className=\"hidden p-1 mr-2 md:block bg-gray-50 shadow-none\"\n                  src={product.images[0]}\n                  alt={product.name}\n                />\n                <div>\n                  <h2 className=\"text-sm font-medium\">{product.name}</h2>\n                </div>\n              </div>\n            </TableCell>\n            <TableCell>\n              <div className=\"flex flex-row\">\n                {product.interest.map((e) => (\n                  <span className=\"bg-gray-200 mr-2 border-0 text-gray-500 rounded-full inline-flex items-center  px-2 py-1 text-xs font-semibold font-serif mt-2 dark:bg-gray-700 dark:text-gray-300\">\n                    {e.name}\n                  </span>\n                ))}\n              </div>\n            </TableCell>\n            <TableCell>\n              <span className=\"text-sm\">${product.price}</span>{\" \"}\n            </TableCell>\n\n            <TableCell>\n              <span className=\"text-sm\">{product.quantity}</span>{\" \"}\n            </TableCell>\n            <TableCell>\n              {product.quantity > 0 ? (\n                <Badge type=\"success\">Selling</Badge>\n              ) : (\n                <Badge type=\"danger\">Sold Out</Badge>\n              )}\n            </TableCell>\n\n            <TableCell>\n              <span className=\"text-sm\">{product.discountedPrice}</span>{\" \"}\n            </TableCell>\n            <TableCell>\n              <Link\n                to={`/product/${product._id}`}\n                className=\"flex justify-center text-center text-gray-400 hover:text-green-600\"\n              >\n                <Tooltip\n                  id=\"details\"\n                  Icon={FiZoomIn}\n                  title=\"Details\"\n                  bgColor=\"#10B981\"\n                />\n              </Link>\n            </TableCell>\n            <TableCell>\n              <ShowHideButton id={product._id} status={product.available} />\n            </TableCell>\n            <TableCell>\n              <ShowHideButton\n                id={product._id}\n                status={product.feature}\n                customValue={!product.feature}\n                customeKey=\"feature\"\n              />\n            </TableCell>\n            <TableCell>\n              <EditDeleteButton\n                id={product._id}\n                title={product.name}\n                handleUpdate={handleUpdate}\n                handleModalOpen={handleModalOpen}\n              />\n            </TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </>\n  );\n};\n\nexport default React.memo(ProductTable);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport * as dayjs from \"dayjs\";\nimport { TableCell, TableBody, TableRow } from \"@windmill/react-ui\";\n\nimport Status from \"../table/Status\";\nimport { FiZoomIn } from \"react-icons/fi\";\nimport Tooltip from \"../tooltip/Tooltip\";\nimport SelectStatus from \"../form/SelectStatus\";\n\nconst OrderTable = ({ orders }) => {\n  return (\n    <>\n      <TableBody>\n        {orders?.map((order, i) => (\n          <TableRow key={i + 1}>\n            <TableCell>\n              <span className=\"text-sm\">\n                {dayjs(order.createdAt).format(\"MMM D, YYYY\")}\n              </span>\n            </TableCell>\n\n            <TableCell>\n              <span className=\"text-sm\">{order.customerId.firstName}</span>\n            </TableCell>\n            <TableCell>\n              {\" \"}\n              $<span className=\"text-sm\">{order.servicefee}</span>{\" \"}\n            </TableCell>\n            <TableCell>\n              {\" \"}\n              <span className=\"text-sm font-semibold\">\n                ${Math.round(order.totalCost)}.00\n              </span>{\" \"}\n            </TableCell>\n            <TableCell className=\"text-center text-xs\">\n              <Status status={order.status} />\n            </TableCell>\n            <TableCell className=\"text-center\">\n              <SelectStatus id={order._id} order={order} />\n            </TableCell>\n            <TableCell className=\"text-right flex justify-end\">\n              <div className=\"p-2 cursor-pointer text-gray-400 hover:text-green-600\">\n                {\" \"}\n                <Link to={`/order/${order._id}`}>\n                  <Tooltip\n                    id=\"view\"\n                    Icon={FiZoomIn}\n                    title=\"View Invoice\"\n                    bgColor=\"#34D399\"\n                  />\n                </Link>\n              </div>\n            </TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </>\n  );\n};\n\nexport default OrderTable;\n","import { Badge } from \"@windmill/react-ui\";\nimport React, { useContext } from \"react\";\nimport { useParams } from \"react-router\";\nimport * as dayjs from \"dayjs\";\nimport {\n  Table,\n  TableHeader,\n  TableCell,\n  TableFooter,\n  TableContainer,\n  Select,\n  Input,\n  Button,\n  Card,\n  CardBody,\n  Pagination,\n} from \"@windmill/react-ui\";\nimport useAsync from \"../hooks/useAsync\";\nimport useToggleDrawer from \"../hooks/useToggleDrawer\";\nimport Loading from \"../components/preloader/Loading\";\nimport PageTitle from \"../components/Typography/PageTitle\";\nimport UserServices from \"../services/UserServices\";\nimport ProductServices from \"../services/ProductServices\";\nimport { SidebarContext } from \"../context/SidebarContext\";\nimport OrderServices from \"../services/OrderServices\";\nimport ProductTable from \"../components/product/ProductTable\";\nimport OrderTable from \"../components/order/OrderTable\";\n\nconst ProfileDetails = () => {\n  const { id } = useParams();\n  const { handleUpdate } = useToggleDrawer();\n\n  const {\n    currentPage,\n    searchText,\n    category,\n    sortedField,\n    limitData,\n    status,\n    handleChangePage,\n    resultsPerPage,\n    time,\n  } = useContext(SidebarContext);\n\n  const { data, loading } = useAsync(() => UserServices.getUserById(id));\n  const products = useAsync(() =>\n    ProductServices.getAllProducts({\n      page: currentPage,\n      limit: limitData,\n      category: category,\n      title: searchText,\n      price: sortedField,\n      userid: id,\n    })\n  );\n\n  const orders = useAsync(() =>\n    OrderServices.getAllOrders({\n      contact: searchText,\n      status,\n      page: currentPage,\n      limit: resultsPerPage,\n      day: time,\n      userid: id,\n    })\n  );\n\n  return (\n    <>\n      <PageTitle>Profile Details</PageTitle>\n      {loading ? (\n        <Loading loading={loading} />\n      ) : (\n        <div className=\"bg-gray-100\">\n          <div className=\"container mx-auto my-5 p-5\">\n            <div className=\"md:flex no-wrap md:-mx-2 \">\n              <div className=\"w-full md:w-3/12 md:mx-2\">\n                <div className=\"bg-white p-3 border-t-4 border-green-400\">\n                  <div className=\"image overflow-hidden\">\n                    {data.profilePhoto ? (\n                      <img\n                        className=\"h-auto w-full mx-auto\"\n                        src={data.profilePhoto}\n                        alt=\"\"\n                      />\n                    ) : (\n                      <img\n                        className=\"h-auto w-full mx-auto md:w-3/6\"\n                        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQz1K1evWjMTfR3IMBxQxXSGV2pTaO2rAP7EzIMB4u0YwxfFL4pJ269eff6sNvuxtjI7c4&usqp=CAU\"\n                        alt=\"\"\n                      />\n                    )}\n                  </div>\n                  <h1 className=\"text-gray-900 font-bold text-xl leading-8 my-1\">\n                    {data.firstName}\n                  </h1>\n                  <h1 className=\"text-gray-900 text-sm leading-8 my-1\">\n                    @{data.userName}\n                  </h1>\n                  {data.shopId ? (\n                    <h3 className=\"text-gray-600 font-lg text-semibold leading-6\">\n                      Owner at {data.shopId.name}.\n                    </h3>\n                  ) : (\n                    \"\"\n                  )}\n                  <p className=\"text-sm text-gray-500 hover:text-gray-600 leading-6\">\n                    {data.bio}\n                  </p>\n                  <p className=\"text-sm text-gray-500 hover:text-gray-600 leading-6\">\n                    Email {data.email}\n                  </p>\n                  <ul className=\"bg-gray-100 text-gray-600 hover:text-gray-700 hover:shadow py-2 px-3 mt-3 divide-y rounded shadow-sm\">\n                    <li className=\"flex items-center py-3\">\n                      <span>Status</span>\n                      <span className=\"ml-auto\">\n                        {data.accountDisabled == true ? (\n                          <span className=\"bg-red-500 py-1 px-2 rounded text-white text-sm\">\n                            Active\n                          </span>\n                        ) : (\n                          <span className=\"bg-green-500 py-1 px-2 rounded text-white text-sm\">\n                            Active\n                          </span>\n                        )}\n                      </span>\n                    </li>\n                    <li className=\"flex items-center py-3\">\n                      <span>Member since</span>\n                      <span className=\"ml-auto\">\n                        {\" \"}\n                        {dayjs(data.createdAt).format(\"MMM D, YYYY\")}\n                      </span>\n                    </li>\n                  </ul>\n                </div>\n                <div className=\"my-4\"></div>\n              </div>\n\n              <div className=\"w-full md:w-9/12 mx-2 h-64\">\n                <div className=\"bg-white p-3 shadow-sm rounded-sm\">\n                  <PageTitle>Products</PageTitle>\n                  <TableContainer className=\"mb-8 rounded-b-lg\">\n                    <Table>\n                      <TableHeader>\n                        <tr>\n                          <TableCell>Product name</TableCell>\n                          <TableCell>Category</TableCell>\n                          <TableCell>Price</TableCell>\n                          <TableCell>Stock</TableCell>\n                          <TableCell>Status</TableCell>\n                          <TableCell>Discount</TableCell>\n                          <TableCell>Details</TableCell>\n                          <TableCell className=\"text-center\">\n                            Published\n                          </TableCell>\n                          <TableCell className=\"text-right\">Actions</TableCell>\n                        </tr>\n                      </TableHeader>\n                      <ProductTable products={products.data.products} />\n                    </Table>\n                    <TableFooter>\n                      <Pagination\n                        totalResults={products?.data?.totalDoc}\n                        resultsPerPage={15}\n                        onChange={handleChangePage}\n                        label=\"Product Page Navigation\"\n                      />\n                    </TableFooter>\n                  </TableContainer>\n                </div>\n\n                <PageTitle>Orders</PageTitle>\n                <TableContainer className=\"mb-8\">\n                  <Table>\n                    <TableHeader>\n                      <tr>\n                        <TableCell>Order Date</TableCell>\n                        <TableCell>Customer Name</TableCell>\n                        <TableCell>Service Fee</TableCell>\n                        <TableCell>Amount</TableCell>\n                        <TableCell className=\"text-center\">Status</TableCell>\n                        <TableCell className=\"text-center\">Action</TableCell>\n                        <TableCell className=\"text-right\">Invoice</TableCell>\n                      </tr>\n                    </TableHeader>\n                    <OrderTable orders={orders.data.orders} />\n                  </Table>\n                  <TableFooter>\n                    <Pagination\n                      totalResults={orders.data?.totalDoc}\n                      resultsPerPage={resultsPerPage}\n                      onChange={handleChangePage}\n                      label=\"Table navigation\"\n                    />\n                  </TableFooter>\n                </TableContainer>\n\n                <div className=\"my-4\"></div>\n                <div className=\"bg-white p-3 shadow-sm rounded-sm\">\n                  <div className=\"grid grid-cols-2\">\n                    <div>\n                      <div className=\"flex items-center space-x-2 font-semibold text-gray-900 leading-8 mb-12\">\n                        <span clas=\"text-green-500\">\n                          <svg\n                            className=\"h-5\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            fill=\"none\"\n                            viewBox=\"0 0 24 24\"\n                            stroke=\"currentColor\"\n                          >\n                            <path\n                              stroke-linecap=\"round\"\n                              stroke-linejoin=\"round\"\n                              stroke-width=\"2\"\n                              d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\n                            />\n                          </svg>\n                        </span>\n                        <span className=\"tracking-wide\">\n                          Shipping Addresses\n                        </span>\n                      </div>\n                      {data.address == null ? (\n                        <></>\n                      ) : (\n                        <ul className=\"list-inside space-y-2\">\n                          <li>\n                            <div className=\"text-teal-600\">\n                              Address 1: {data.address.addrress1} Address 2:{\" \"}\n                              {data.address.addrress2} City: {data.address.city}{\" \"}\n                              State: {data.address.state}\n                            </div>\n                            <div className=\"text-gray-500 text-xs\">\n                              Phone: {data.address.phone}\n                            </div>\n                          </li>\n                        </ul>\n                      )}\n                    </div>\n                    <div></div>\n                  </div>\n                </div>\n                <div className=\"my-4\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ProfileDetails;\n","import requests from \"./httpService\";\nimport { AdminContext } from \"../context/AdminContext\";\nimport ShopServices from \"./ShopServices\";\n\nconst OrderServices = {\n  getAllOrders({\n    body,\n    headers,\n    contact,\n    status,\n    page = 1,\n    limit = 8,\n    day,\n    userid = \"\",\n  }) {\n    const searchContact = contact !== null ? contact : \"\";\n    const searchStatus = status !== null ? status : \"\";\n    const searchDay = day !== null ? day : \"\";\n    const id = userid !== null ? userid : \"\";\n\n    return requests.get(\n      `/orders/all/orders?contact=${searchContact}&status=${searchStatus}&day=${searchDay}&page=${page}&limit=${limit}&userid=${id}`,\n      body,\n      headers\n    );\n  },\n\n  getRecentOrders({\n    page = 1,\n    limit = 8,\n    startDate = \"1:00\",\n    endDate = \"23:59\",\n  }) {\n    return requests.get(\n      `/orders/recent?page=${page}&limit=${limit}&startDate=${startDate}&endDate=${endDate}`\n    );\n  },\n\n  getOrderAndSalesChart({ startDate = \"1:00\", endDate = \"23:59\" }) {\n    return requests.get(\n      `/orders/sales/chart?startDate=${startDate}&endDate=${endDate}`\n    );\n  },\n\n  getBestSellerProductChart({ shopid = \"\" }) {\n    console.log(\"shopid\", shopid);\n    return requests.get(\n      `/orders/dashboard/orders/best-seller/chart?shopid=${shopid}`\n    );\n  },\n\n  async getDashboardOrdersData({\n    page = 1,\n    limit = 8,\n    userid = \"\",\n    role = \"\",\n    shopid = \"\",\n  }) {\n    const id = userid !== null ? userid : \"\";\n    if (role == \"shopowner\") {\n      return requests.get(\n        `/orders/dashboard/orders/shopowner?page=${page}&limit=${limit}&userid=${id}&shopid=${shopid}`\n      );\n    } else {\n      return requests.get(\n        `/orders/dashboard/orders?page=${page}&limit=${limit}&userid=${id}`\n      );\n    }\n  },\n\n  getOrderByUser(id, body) {\n    return requests.get(`/orders/user/${id}`, body);\n  },\n\n  getOrderById(id, body) {\n    return requests.get(`/orders/orders/${id}`, body);\n  },\n\n  updateOrder(id, body, headers) {\n    return requests.put(`/orders/orders/${id}`, body, headers);\n  },\n\n  deleteOrder(id) {\n    return requests.delete(`/orders/${id}`);\n  },\n};\n\nexport default OrderServices;\n","import React from 'react';\nimport { Badge } from '@windmill/react-ui';\n\nconst Status = ({ status }) => {\n  return (\n    <>\n      <span className=\"font-serif\">\n        {status === \"completed\" && <Badge type=\"success\">{status}</Badge>}\n        {status === \"pending\" && <Badge type=\"warning\">{status}</Badge>}\n        {status === \"processing\" && <Badge>{status}</Badge>}\n        {status === \"shipped\" && <Badge>{status}</Badge>}\n        {status === \"delivered\" && <Badge type=\"success\">{status}</Badge>}\n        {status === \"cancelled\" && <Badge type=\"danger\">{status}</Badge>}\n      </span>\n    </>\n  );\n};\n\nexport default Status;\n","import React, { useContext } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { BsToggleOff, BsToggleOn } from \"react-icons/bs\";\n\nimport { notifySuccess, notifyError } from \"../../utils/toast\";\nimport ProductServices from \"../../services/ProductServices\";\nimport { SidebarContext } from \"../../context/SidebarContext\";\nimport UserServices from \"../../services/UserServices\";\nimport ShopServices from \"../../services/ShopServices\";\n\nconst ShowHideButton = ({ id, status, customValue = \"\", customeKey = \"\" }) => {\n  const location = useLocation();\n  const { setIsUpdate } = useContext(SidebarContext);\n\n  const handleChangeStatus = (id, status) => {\n    console.log(status);\n    notifySuccess(\"please wait...\");\n    if (location.pathname === \"/users\") {\n      UserServices.updateUserById(id, { accountDisabled: status })\n        .then((res) => {\n          setIsUpdate(true);\n          notifySuccess(\"status updated\");\n        })\n        .catch((err) => notifyError(err.message));\n    }\n\n    if (location.pathname === \"/products\") {\n      console.log(customeKey);\n      if ((customeKey = \"feature\")) {\n        ProductServices.updateProduct(id, { [customeKey]: customValue })\n          .then((res) => {\n            console.log(res);\n            setIsUpdate(true);\n            notifySuccess(\"status updated\");\n          })\n          .catch((err) => notifyError(err.message));\n      } else {\n        ProductServices.updateProduct(id, { available: !status })\n          .then((res) => {\n            console.log(res);\n            setIsUpdate(true);\n            notifySuccess(\"status updated\");\n          })\n          .catch((err) => notifyError(err.message));\n      }\n    }\n\n    if (location.pathname === \"/shops\") {\n      ShopServices.updateShop(id, { open: !status })\n        .then((res) => {\n          console.log(res);\n          setIsUpdate(true);\n          notifySuccess(\"status updated\");\n        })\n        .catch((err) => notifyError(err.message));\n    }\n  };\n\n  return (\n    <span\n      className=\"cursor-pointer text-xl flex justify-center text-center\"\n      onClick={() => handleChangeStatus(id, status)}\n    >\n      {status == true ? (\n        <BsToggleOn className=\"text-green-500\" />\n      ) : (\n        <BsToggleOff className=\"text-orange-500\" />\n      )}\n    </span>\n  );\n};\n\nexport default ShowHideButton;\n","import React, { useContext } from \"react\";\nimport { Select } from \"@windmill/react-ui\";\n\nimport OrderServices from \"../../services/OrderServices\";\nimport { notifySuccess, notifyError } from \"../../utils/toast\";\nimport { SidebarContext } from \"../../context/SidebarContext\";\n\nconst SelectStatus = ({ id, order }) => {\n  const { setIsUpdate } = useContext(SidebarContext);\n  const handleChangeStatus = (id, status) => {\n    OrderServices.updateOrder(id, { status: status })\n      .then((res) => {\n        notifySuccess(res.message);\n        setIsUpdate(true);\n      })\n      .catch((err) => notifyError(err.message));\n  };\n\n  return (\n    <>\n      <Select\n        onChange={(e) => handleChangeStatus(id, e.target.value)}\n        className=\"border border-gray-50 bg-gray-50 dark:border-gray-700 h-8 rounded-md text-xs focus:border-gray-400 focus:outline-none\"\n      >\n        <option value=\"status\" defaultValue hidden>\n          {order?.status}\n        </option>\n        <option defaultValue={order?.status === \"completed\"} value=\"completed\">\n          Completed\n        </option>\n        <option defaultValue={order?.status === \"pending\"} value=\"pending\">\n          Pending\n        </option>\n        <option\n          defaultValue={order?.status === \"processing\"}\n          value=\"processing\"\n        >\n          Processing\n        </option>\n        <option defaultValue={order?.status === \"refunded\"} value=\"refunded\">\n          Refunded\n        </option>\n        <option defaultValue={order?.status === \"on-hold\"} value=\"on-hold\">\n          On Hold\n        </option>\n        <option defaultValue={order?.status === \"failed\"} value=\"failed\">\n          Failed\n        </option>\n        <option defaultValue={order?.status === \"cancelled\"} value=\"cancelled\">\n          Cancelled\n        </option>\n      </Select>\n    </>\n  );\n};\n\nexport default SelectStatus;\n"],"sourceRoot":""}