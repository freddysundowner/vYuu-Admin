{"version":3,"sources":["pages/ShippingMethods.js","components/form/SelectRole.js","hooks/useAdminSubmit.js"],"names":["ShippingMethods","state","adminInfo","token","useContext","AdminContext","formFields","setFormFields","useState","name","amount","enabled","useEffect","shopId","ShopServices","getShippingMethods","then","res","console","log","catch","err","notifyError","handleFormChange","event","index","data","target","value","_jsxs","_Fragment","children","_jsx","PageTitle","className","Button","onClick","addFields","onSubmit","e","preventDefault","saveShippingMethods","notifySuccess","message","map","form","Input","placeholder","onChange","type","splice","removeFields","FormControlLabel","control","Switch","checked","inputProps","label","SelectRole","_ref","setRole","register","Select","required","defaultValue","hidden","useAdminSubmit","id","imageUrl","setImageUrl","selectedDate","setSelectedDate","location","useLocation","isDrawerOpen","closeDrawer","setIsUpdate","SidebarContext","handleSubmit","setValue","clearErrors","formState","errors","useForm","AdminServices","getAdminById","admin","email","joiningData","role","dayjs","format","pathname","Cookies","get","user","JSON","parse","image","staffData","password","joiningDate","Date","updateAdmin","addAdmin"],"mappings":"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","file":"static/js/20.e15ccdce.chunk.js","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { Button, Input } from \"@windmill/react-ui\";\n\nimport Error from \"../components/form/Error\";\nimport useAdminSubmit from \"../hooks/useAdminSubmit\";\nimport LabelArea from \"../components/form/LabelArea\";\nimport InputArea from \"../components/form/InputArea\";\nimport { AdminContext } from \"../context/AdminContext\";\nimport SelectRole from \"../components/form/SelectRole\";\nimport PageTitle from \"../components/Typography/PageTitle\";\nimport { FormControlLabel, Switch } from \"@mui/material\";\nimport { notifyError, notifySuccess } from \"../utils/toast\";\nimport ShopServices from \"../services/ShopServices\";\n\nconst ShippingMethods = () => {\n  const {\n    state: { adminInfo, token },\n  } = useContext(AdminContext);\n  const [formFields, setFormFields] = useState([\n    { name: \"Cash On Delivery\", amount: 0, enabled: true },\n  ]);\n\n  useEffect(() => {\n    if (adminInfo.shopId) {\n      ShopServices.getShippingMethods(adminInfo.shopId)\n        .then((res) => {\n          if (res) {\n            console.log(res[\"data\"][0][\"shippingMethods\"]);\n            setFormFields(res[\"data\"][0][\"shippingMethods\"]);\n          }\n        })\n        .catch((err) => {\n          notifyError(\"There is a server error!\");\n        });\n    }\n  }, [adminInfo]);\n\n  const handleFormChange = (event, index) => {\n    let data = [...formFields];\n    data[index][event.target.name] = event.target.value;\n    setFormFields(data);\n    console.log(data);\n    console.log(formFields);\n  };\n\n  const submit = (e) => {\n    e.preventDefault();\n    console.log(formFields);\n    ShopServices.saveShippingMethods(adminInfo.shopId, { data: formFields })\n      .then((res) => {\n        notifySuccess(\"Updated shipping methods\");\n      })\n      .catch((err) => notifyError(err.message));\n  };\n\n  const addFields = () => {\n    let object = {\n      name: \"\",\n      amount: 0,\n      enabled: true,\n    };\n\n    setFormFields([...formFields, object]);\n  };\n\n  const removeFields = (index) => {\n    let data = [...formFields];\n    data.splice(index, 1);\n    setFormFields(data);\n  };\n\n  return (\n    <>\n      <PageTitle>Shipping Methods</PageTitle>\n      <div className=\"container p-6 mx-auto bg-white  dark:bg-gray-800 dark:text-gray-200 rounded-lg\">\n        <Button className=\"h-10 px-6 mb-5\" onClick={addFields}>\n          Add +\n        </Button>\n        <form onSubmit={submit}>\n          {formFields.map((form, index) => {\n            return (\n              <div\n                className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\"\n                key={index}\n              >\n                <div className=\"col-span-4 sm:col-span-2\">\n                  <Input\n                    name=\"name\"\n                    placeholder=\"Name\"\n                    onChange={(event) => handleFormChange(event, index)}\n                    value={form.name}\n                    className=\"border h-12 text-sm focus:outline-none block w-full bg-gray-100 dark:bg-white border-transparent focus:bg-white\"\n                  />\n                </div>\n                <div className=\"col-span-4 sm:col-span-2\">\n                  <Input\n                    name=\"amount\"\n                    placeholder=\"Amount\"\n                    onChange={(event) => handleFormChange(event, index)}\n                    value={form.amount}\n                    type=\"number\"\n                    className=\"border h-12 text-sm focus:outline-none block w-full bg-gray-100 dark:bg-white border-transparent focus:bg-white\"\n                  />\n                </div>\n                <div className=\"flex-grow scrollbar-hide w-full\">\n                  <div className=\"grid grid-cols-12 gap-3 xl:gap-12 lg:gap-12\">\n                    <button\n                      className=\"col-span-6 sm:col-span-3\"\n                      onClick={() => removeFields(index)}\n                    >\n                      Remove\n                    </button>\n                    <div className=\"col-span-4 sm:col-span-4\">\n                      <input\n                        name=\"enabled\"\n                        onChange={(event) => handleFormChange(event, index)}\n                        type=\"hidden\"\n                        value={form.enabled}\n                        className=\"border h-12 text-sm focus:outline-none block w-full bg-gray-100 dark:bg-white border-transparent focus:bg-white\"\n                      />\n                      <FormControlLabel\n                        control={\n                          <Switch\n                            name=\"enabled\"\n                            value={form.enabled}\n                            checked={form.enabled}\n                            onChange={(event) => {\n                              let data = [...formFields];\n                              data[index][\"enabled\"] = !form.enabled;\n                              setFormFields(data);\n                              console.log(data);\n                            }}\n                            inputProps={{ \"aria-label\": \"controlled\" }}\n                          />\n                        }\n                        label=\"Enabled\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n          <div className=\"flex flex-row-reverse pr-6 pb-6\">\n            <Button type=\"submit\" className=\"h-12 px-6\">\n              Save\n            </Button>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n\n  // const { register, handleSubmit, onSubmit, errors, imageUrl, setImageUrl } =\n  //   useShippingSubmit(adminInfo._id);\n\n  // const [inputFields, setInputFields] = useState([{ name: \"\", amount: \"\" }]);\n\n  // const handleFormChange = (index, event) => {\n  //   let data = [...inputFields];\n  //   data[index][event.target.name] = event.target.value;\n  //   setInputFields(data);\n  // };\n  // const addFields = () => {\n  //   let newfield = { name: \"\", amount: \"\" };\n\n  //   setInputFields([...inputFields, newfield]);\n  // };\n  // const submit = (e) => {\n  //   e.preventDefault();\n  //   console.log(inputFields);\n  // };\n\n  // return (\n  //   <>\n  //     <PageTitle>Shipping Methods</PageTitle>\n  //     <div className=\"container p-6 mx-auto bg-white  dark:bg-gray-800 dark:text-gray-200 rounded-lg\">\n  //       <form onSubmit={handleSubmit(onSubmit)}>\n  //         <div className=\"p-6 flex-grow scrollbar-hide w-full max-h-full\">\n  //           <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\n  //             <LabelArea label=\"Cash on Delivery\" />\n  //             <div className=\"col-span-8 sm:col-span-4\">\n  //               <FormControlLabel control={<Switch defaultChecked />} />\n  //             </div>\n  //           </div>\n  //         </div>\n  //         <div className=\"p-6 flex-grow scrollbar-hide w-full max-h-full \">\n  //           <Button className=\"h-12 px-6\" onClick={addFields}>\n  //             Add +\n  //           </Button>\n  //           <div className=\"mt-6\"></div>\n  //           {inputFields.map((input, index) => {\n  //             return (\n  //               <div\n  //                 className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\"\n  //                 key={index}\n  //               >\n  //                 <div className=\"col-span-4 sm:col-span-3\">\n  //                   <InputArea\n  //                     register={register}\n  //                     defaultValue={input.name}\n  //                     label=\"Label Name\"\n  //                     name=\"name\"\n  //                     type=\"text\"\n  //                     placeholder=\"Label Name\"\n  //                     onChange={(event) => handleFormChange(index, event)}\n  //                   />\n  //                 </div>\n  //                 <div className=\"col-span-4 sm:col-span-2\">\n  //                   <InputArea\n  //                     register={register}\n  //                     defaultValue={input.amount}\n  //                     name=\"amount\"\n  //                     type=\"number\"\n  //                     placeholder=\"Amount\"\n  //                     onChange={(event) => handleFormChange(index, event)}\n  //                   />\n  //                   <Error errorName={errors.role} />\n  //                 </div>\n  //                 <FormControlLabel control={<Switch defaultChecked />} />\n  //               </div>\n  //             );\n  //           })}\n  //         </div>\n\n  //         <div className=\"flex flex-row-reverse pr-6 pb-6\">\n  //           <Button type=\"submit\" className=\"h-12 px-6\">\n  //             Update Settings\n  //           </Button>\n  //         </div>\n  //       </form>\n  //     </div>\n  //   </>\n  // );\n};\n\nexport default ShippingMethods;\n","import React from \"react\";\nimport { Select } from \"@windmill/react-ui\";\n\nconst SelectRole = ({ setRole, register, name, label }) => {\n  return (\n    <>\n      <Select\n        onChange={(e) => setRole(e.target.value)}\n        className=\"border h-12 text-sm focus:outline-none block w-full bg-gray-100 dark:bg-white border-transparent focus:bg-white\"\n        name={name}\n        {...register(`${name}`, {\n          required: `${label} is required!`,\n        })}\n      >\n        <option value=\"\" defaultValue hidden>\n          Admin role\n        </option>\n        <option value=\"admin\">Admin</option>\n        <option value=\"restricted\">Restricted</option>\n      </Select>\n    </>\n  );\n};\n\nexport default SelectRole;\n","import { useContext, useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Cookies from \"js-cookie\";\nimport dayjs from \"dayjs\";\nimport { useLocation } from \"react-router\";\n\nimport AdminServices from \"../services/AdminServices\";\nimport { AdminContext } from \"../context/AdminContext\";\nimport { SidebarContext } from \"../context/SidebarContext\";\nimport { notifyError, notifySuccess } from \"../utils/toast\";\n\nconst useAdminSubmit = (id) => {\n  const { state } = useContext(AdminContext);\n  const { adminInfo } = state;\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [selectedDate, setSelectedDate] = useState(\"\");\n  const location = useLocation();\n  const { isDrawerOpen, closeDrawer, setIsUpdate } = useContext(SidebarContext);\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    clearErrors,\n    formState: { errors },\n  } = useForm();\n\n  const onSubmit = (data) => {\n    const staffData = {\n      email: data.email,\n      password: data.password,\n      joiningDate: selectedDate\n        ? selectedDate\n        : dayjs(new Date()).format(\"YYYY-MM-DD\"),\n      role: data.role,\n    };\n\n    if (id) {\n      AdminServices.updateAdmin(id, { email: adminInfo.email, data: staffData })\n        .then((res) => {\n          setIsUpdate(true);\n          notifySuccess(\"Admin Updated Successfully!\");\n        })\n        .catch((err) => notifyError(err.message));\n      closeDrawer();\n    } else {\n      AdminServices.addAdmin(staffData)\n        .then((res) => {\n          setIsUpdate(true);\n          notifySuccess(res.message);\n        })\n        .catch((err) => notifyError(err.message));\n      closeDrawer();\n    }\n  };\n\n  useEffect(() => {\n    if (!isDrawerOpen) {\n      setValue(\"email\");\n      setValue(\"password\");\n      setValue(\"joiningDate\");\n      setValue(\"role\");\n      clearErrors(\"email\");\n      clearErrors(\"password\");\n      clearErrors(\"joiningDate\");\n      clearErrors(\"role\");\n      return;\n    }\n    if (id) {\n      AdminServices.getAdminById(id)\n        .then((res) => {\n          if (res) {\n            setValue(\"email\", res.admin.email);\n            setValue(\"password\");\n            setValue(\"joiningDate\", res.admin.joiningData);\n            setValue(\"role\", res.admin.role);\n            setSelectedDate(dayjs(res.joiningData).format(\"YYYY-MM-DD\"));\n          }\n        })\n        .catch((err) => {\n          notifyError(\"There is a server error!\");\n        });\n    }\n  }, [id, setValue, isDrawerOpen, adminInfo.email, clearErrors]);\n\n  useEffect(() => {\n    if (\n      location.pathname === \"/setting\" ||\n      (location.pathname === \"/edit-profile\" && Cookies.get(\"adminInfo\"))\n    ) {\n      const user = JSON.parse(Cookies.get(\"adminInfo\"));\n      setValue(\"email\", user.email);\n      setValue(\"role\", user.role);\n      setImageUrl(user.image);\n      setSelectedDate(dayjs(user.joiningData).format(\"YYYY-MM-DD\"));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return {\n    register,\n    handleSubmit,\n    onSubmit,\n    errors,\n    setImageUrl,\n    imageUrl,\n    selectedDate,\n    setSelectedDate,\n  };\n};\n\nexport default useAdminSubmit;\n"],"sourceRoot":""}