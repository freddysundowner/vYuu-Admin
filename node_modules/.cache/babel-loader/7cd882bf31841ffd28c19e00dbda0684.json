{"ast":null,"code":"import{useContext,useEffect,useState}from\"react\";import{useForm}from\"react-hook-form\";import Cookies from\"js-cookie\";import dayjs from\"dayjs\";import{useLocation}from\"react-router\";import AdminServices from\"../services/AdminServices\";import{AdminContext}from\"../context/AdminContext\";import{SidebarContext}from\"../context/SidebarContext\";import{notifyError,notifySuccess}from\"../utils/toast\";const useAdminSubmit=id=>{const{state}=useContext(AdminContext);const{adminInfo}=state;const[imageUrl,setImageUrl]=useState(\"\");const[selectedDate,setSelectedDate]=useState(\"\");const location=useLocation();const{isDrawerOpen,closeDrawer,setIsUpdate}=useContext(SidebarContext);const{register,handleSubmit,setValue,clearErrors,formState:{errors}}=useForm();const onSubmit=data=>{const staffData={email:data.email,password:data.password,joiningDate:selectedDate?selectedDate:dayjs(new Date()).format(\"YYYY-MM-DD\"),role:data.role};if(id){AdminServices.updateAdmin(id,{email:adminInfo.email,data:staffData}).then(res=>{setIsUpdate(true);notifySuccess(\"Admin Updated Successfully!\");}).catch(err=>notifyError(err.message));closeDrawer();}else{AdminServices.addAdmin(staffData).then(res=>{setIsUpdate(true);notifySuccess(res.message);}).catch(err=>notifyError(err.message));closeDrawer();}};useEffect(()=>{if(!isDrawerOpen){setValue(\"email\");setValue(\"password\");setValue(\"joiningDate\");setValue(\"role\");clearErrors(\"email\");clearErrors(\"password\");clearErrors(\"joiningDate\");clearErrors(\"role\");return;}if(id){AdminServices.getAdminById(id).then(res=>{if(res){setValue(\"email\",res.admin.email);setValue(\"password\");setValue(\"joiningDate\",res.admin.joiningData);setValue(\"role\",res.admin.role);setSelectedDate(dayjs(res.joiningData).format(\"YYYY-MM-DD\"));}}).catch(err=>{notifyError(\"There is a server error!\");});}},[id,setValue,isDrawerOpen,adminInfo.email,clearErrors]);useEffect(()=>{if(location.pathname===\"/setting\"||location.pathname===\"/edit-profile\"&&Cookies.get(\"adminInfo\")){const user=JSON.parse(Cookies.get(\"adminInfo\"));setValue(\"email\",user.email);setValue(\"role\",user.role);setImageUrl(user.image);setSelectedDate(dayjs(user.joiningData).format(\"YYYY-MM-DD\"));}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);return{register,handleSubmit,onSubmit,errors,setImageUrl,imageUrl,selectedDate,setSelectedDate};};export default useAdminSubmit;","map":{"version":3,"names":["useContext","useEffect","useState","useForm","Cookies","dayjs","useLocation","AdminServices","AdminContext","SidebarContext","notifyError","notifySuccess","useAdminSubmit","id","state","adminInfo","imageUrl","setImageUrl","selectedDate","setSelectedDate","location","isDrawerOpen","closeDrawer","setIsUpdate","register","handleSubmit","setValue","clearErrors","formState","errors","onSubmit","data","staffData","email","password","joiningDate","Date","format","role","updateAdmin","then","res","catch","err","message","addAdmin","getAdminById","admin","joiningData","pathname","get","user","JSON","parse","image"],"sources":["/var/www/admin/src/hooks/useAdminSubmit.js"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Cookies from \"js-cookie\";\nimport dayjs from \"dayjs\";\nimport { useLocation } from \"react-router\";\n\nimport AdminServices from \"../services/AdminServices\";\nimport { AdminContext } from \"../context/AdminContext\";\nimport { SidebarContext } from \"../context/SidebarContext\";\nimport { notifyError, notifySuccess } from \"../utils/toast\";\n\nconst useAdminSubmit = (id) => {\n  const { state } = useContext(AdminContext);\n  const { adminInfo } = state;\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [selectedDate, setSelectedDate] = useState(\"\");\n  const location = useLocation();\n  const { isDrawerOpen, closeDrawer, setIsUpdate } = useContext(SidebarContext);\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    clearErrors,\n    formState: { errors },\n  } = useForm();\n\n  const onSubmit = (data) => {\n    const staffData = {\n      email: data.email,\n      password: data.password,\n      joiningDate: selectedDate\n        ? selectedDate\n        : dayjs(new Date()).format(\"YYYY-MM-DD\"),\n      role: data.role,\n    };\n\n    if (id) {\n      AdminServices.updateAdmin(id, { email: adminInfo.email, data: staffData })\n        .then((res) => {\n          setIsUpdate(true);\n          notifySuccess(\"Admin Updated Successfully!\");\n        })\n        .catch((err) => notifyError(err.message));\n      closeDrawer();\n    } else {\n      AdminServices.addAdmin(staffData)\n        .then((res) => {\n          setIsUpdate(true);\n          notifySuccess(res.message);\n        })\n        .catch((err) => notifyError(err.message));\n      closeDrawer();\n    }\n  };\n\n  useEffect(() => {\n    if (!isDrawerOpen) {\n      setValue(\"email\");\n      setValue(\"password\");\n      setValue(\"joiningDate\");\n      setValue(\"role\");\n      clearErrors(\"email\");\n      clearErrors(\"password\");\n      clearErrors(\"joiningDate\");\n      clearErrors(\"role\");\n      return;\n    }\n    if (id) {\n      AdminServices.getAdminById(id)\n        .then((res) => {\n          if (res) {\n            setValue(\"email\", res.admin.email);\n            setValue(\"password\");\n            setValue(\"joiningDate\", res.admin.joiningData);\n            setValue(\"role\", res.admin.role);\n            setSelectedDate(dayjs(res.joiningData).format(\"YYYY-MM-DD\"));\n          }\n        })\n        .catch((err) => {\n          notifyError(\"There is a server error!\");\n        });\n    }\n  }, [id, setValue, isDrawerOpen, adminInfo.email, clearErrors]);\n\n  useEffect(() => {\n    if (\n      location.pathname === \"/setting\" ||\n      (location.pathname === \"/edit-profile\" && Cookies.get(\"adminInfo\"))\n    ) {\n      const user = JSON.parse(Cookies.get(\"adminInfo\"));\n      setValue(\"email\", user.email);\n      setValue(\"role\", user.role);\n      setImageUrl(user.image);\n      setSelectedDate(dayjs(user.joiningData).format(\"YYYY-MM-DD\"));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return {\n    register,\n    handleSubmit,\n    onSubmit,\n    errors,\n    setImageUrl,\n    imageUrl,\n    selectedDate,\n    setSelectedDate,\n  };\n};\n\nexport default useAdminSubmit;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}