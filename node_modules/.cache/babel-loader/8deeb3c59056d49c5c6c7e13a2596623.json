{"ast":null,"code":"import axios from\"axios\";import Cookies from\"js-cookie\";const instance=axios.create({baseURL:`${process.env.REACT_APP_API_BASE_URL}`,timeout:500000,headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\"}});// Add a request interceptor\ninstance.interceptors.request.use(function(config){// Do something before request is sent\nlet adminInfo;if(Cookies.get(\"adminInfo\")){adminInfo=JSON.parse(Cookies.get(\"adminInfo\"));}return{...config,headers:{authorization:adminInfo?`Bearer ${adminInfo.token}`:null}};});const responseBody=response=>response.data;const requests={get:(url,body,headers)=>instance.get(url,body,headers).then(responseBody),post:(url,body)=>instance.post(url,body).then(responseBody),put:(url,body,headers)=>instance.put(url,body,headers).then(responseBody),patch:(url,body)=>instance.patch(url,body).then(responseBody),delete:url=>instance.delete(url).then(responseBody)};export default requests;","map":{"version":3,"names":["axios","Cookies","instance","create","baseURL","process","env","REACT_APP_API_BASE_URL","timeout","headers","Accept","interceptors","request","use","config","adminInfo","get","JSON","parse","authorization","token","responseBody","response","data","requests","url","body","then","post","put","patch","delete"],"sources":["/var/www/admin/src/services/httpService.js"],"sourcesContent":["import axios from \"axios\";\nimport Cookies from \"js-cookie\";\nconst instance = axios.create({\n  baseURL: `${process.env.REACT_APP_API_BASE_URL}`,\n  timeout: 500000,\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n\n// Add a request interceptor\ninstance.interceptors.request.use(function (config) {\n  // Do something before request is sent\n  let adminInfo;\n  if (Cookies.get(\"adminInfo\")) {\n    adminInfo = JSON.parse(Cookies.get(\"adminInfo\"));\n  }\n\n  return {\n    ...config,\n    headers: {\n      authorization: adminInfo ? `Bearer ${adminInfo.token}` : null,\n    },\n  };\n});\n\nconst responseBody = (response) => response.data;\n\nconst requests = {\n  get: (url, body, headers) =>\n    instance.get(url, body, headers).then(responseBody),\n\n  post: (url, body) => instance.post(url, body).then(responseBody),\n\n  put: (url, body, headers) =>\n    instance.put(url, body, headers).then(responseBody),\n\n  patch: (url, body) => instance.patch(url, body).then(responseBody),\n\n  delete: (url) => instance.delete(url).then(responseBody),\n};\n\nexport default requests;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,OAAO,KAAM,WAAW,CAC/B,KAAM,CAAAC,QAAQ,CAAGF,KAAK,CAACG,MAAM,CAAC,CAC5BC,OAAO,CAAG,GAAEC,OAAO,CAACC,GAAG,CAACC,sBAAuB,EAAC,CAChDC,OAAO,CAAE,MAAM,CACfC,OAAO,CAAE,CACPC,MAAM,CAAE,kBAAkB,CAC1B,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF;AACAR,QAAQ,CAACS,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,SAAUC,MAAM,CAAE,CAClD;AACA,GAAI,CAAAC,SAAS,CACb,GAAId,OAAO,CAACe,GAAG,CAAC,WAAW,CAAC,CAAE,CAC5BD,SAAS,CAAGE,IAAI,CAACC,KAAK,CAACjB,OAAO,CAACe,GAAG,CAAC,WAAW,CAAC,CAAC,CAClD,CAEA,MAAO,CACL,GAAGF,MAAM,CACTL,OAAO,CAAE,CACPU,aAAa,CAAEJ,SAAS,CAAI,UAASA,SAAS,CAACK,KAAM,EAAC,CAAG,IAC3D,CACF,CAAC,CACH,CAAC,CAAC,CAEF,KAAM,CAAAC,YAAY,CAAIC,QAAQ,EAAKA,QAAQ,CAACC,IAAI,CAEhD,KAAM,CAAAC,QAAQ,CAAG,CACfR,GAAG,CAAEA,CAACS,GAAG,CAAEC,IAAI,CAAEjB,OAAO,GACtBP,QAAQ,CAACc,GAAG,CAACS,GAAG,CAAEC,IAAI,CAAEjB,OAAO,CAAC,CAACkB,IAAI,CAACN,YAAY,CAAC,CAErDO,IAAI,CAAEA,CAACH,GAAG,CAAEC,IAAI,GAAKxB,QAAQ,CAAC0B,IAAI,CAACH,GAAG,CAAEC,IAAI,CAAC,CAACC,IAAI,CAACN,YAAY,CAAC,CAEhEQ,GAAG,CAAEA,CAACJ,GAAG,CAAEC,IAAI,CAAEjB,OAAO,GACtBP,QAAQ,CAAC2B,GAAG,CAACJ,GAAG,CAAEC,IAAI,CAAEjB,OAAO,CAAC,CAACkB,IAAI,CAACN,YAAY,CAAC,CAErDS,KAAK,CAAEA,CAACL,GAAG,CAAEC,IAAI,GAAKxB,QAAQ,CAAC4B,KAAK,CAACL,GAAG,CAAEC,IAAI,CAAC,CAACC,IAAI,CAACN,YAAY,CAAC,CAElEU,MAAM,CAAGN,GAAG,EAAKvB,QAAQ,CAAC6B,MAAM,CAACN,GAAG,CAAC,CAACE,IAAI,CAACN,YAAY,CACzD,CAAC,CAED,cAAe,CAAAG,QAAQ"},"metadata":{},"sourceType":"module"}