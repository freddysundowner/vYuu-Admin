{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport React from \"react\";\nimport { Tag } from \"./components/Tag\";\nimport { classSelectors } from \"./utils/selectors\";\nvar ReactTagInput = function (_super) {\n  __extends(ReactTagInput, _super);\n  function ReactTagInput() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.state = {\n      input: \"\"\n    };\n    _this.inputRef = React.createRef();\n    _this.onInputChange = function (e) {\n      _this.setState({\n        input: e.target.value\n      });\n    };\n    _this.onInputKeyDown = function (e) {\n      var input = _this.state.input;\n      var _a = _this.props,\n        validator = _a.validator,\n        removeOnBackspace = _a.removeOnBackspace;\n      if (e.keyCode === 13) {\n        e.preventDefault();\n        if (input === \"\") {\n          return;\n        }\n        var valid = validator !== undefined ? validator(input) : true;\n        if (!valid) {\n          return;\n        }\n        _this.addTag(input);\n      } else if (removeOnBackspace && (e.keyCode === 8 || e.keyCode === 46)) {\n        if (input !== \"\") {\n          return;\n        }\n        _this.removeTag(_this.props.tags.length - 1);\n      }\n    };\n    _this.addTag = function (value) {\n      var tags = _this.props.tags.slice();\n      tags.push(value);\n      _this.props.onChange(tags);\n      _this.setState({\n        input: \"\"\n      });\n    };\n    _this.removeTag = function (i) {\n      var tags = _this.props.tags.slice();\n      tags.splice(i, 1);\n      _this.props.onChange(tags);\n    };\n    _this.updateTag = function (i, value) {\n      var tags = _this.props.tags.slice();\n      tags[i] = value;\n      _this.props.onChange(tags);\n    };\n    return _this;\n  }\n  ReactTagInput.prototype.render = function () {\n    var _this = this;\n    var input = this.state.input;\n    var _a = this.props,\n      tags = _a.tags,\n      placeholder = _a.placeholder,\n      maxTags = _a.maxTags,\n      editable = _a.editable,\n      readOnly = _a.readOnly,\n      validator = _a.validator,\n      removeOnBackspace = _a.removeOnBackspace;\n    var maxTagsReached = maxTags !== undefined ? tags.length >= maxTags : false;\n    var isEditable = readOnly ? false : editable || false;\n    var showInput = !readOnly && !maxTagsReached;\n    return React.createElement(\"div\", {\n      className: classSelectors.wrapper\n    }, tags.map(function (tag, i) {\n      return React.createElement(Tag, {\n        key: i,\n        value: tag,\n        index: i,\n        editable: isEditable,\n        readOnly: readOnly || false,\n        inputRef: _this.inputRef,\n        update: _this.updateTag,\n        remove: _this.removeTag,\n        validator: validator,\n        removeOnBackspace: removeOnBackspace\n      });\n    }), showInput && React.createElement(\"input\", {\n      ref: this.inputRef,\n      value: input,\n      className: classSelectors.input,\n      placeholder: placeholder || \"Type and press enter\",\n      onChange: this.onInputChange,\n      onKeyDown: this.onInputKeyDown\n    }));\n  };\n  return ReactTagInput;\n}(React.Component);\nexport default ReactTagInput;","map":{"version":3,"sources":["../../src/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAK,MAAM,OAAO;AACzB,SAAQ,GAAG,QAAO,kBAAkB;AACpC,SAAQ,cAAc,QAAO,mBAAmB;AAmBhD,IAAA,aAAA,GAAA,UAAA,MAAA,EAAA;EAA2C,SAAA,CAAA,aAAA,EAAA,MAAA,CAAA;EAA3C,SAAA,aAAA,CAAA,EAAA;IAAA,IAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;IAEE,KAAA,CAAA,KAAK,GAAG;MAAE,KAAK,EAAE;IAAE,CAAE;IAGrB,KAAA,CAAA,QAAQ,GAAsC,KAAK,CAAC,SAAS,CAAA,CAAE;IAE/D,KAAA,CAAA,aAAa,GAAG,UAAC,CAAsC,EAAA;MACrD,KAAI,CAAC,QAAQ,CAAC;QAAE,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC;MAAK,CAAE,CAAC;IAC1C,CAAC;IAED,KAAA,CAAA,cAAc,GAAG,UAAC,CAAwC,EAAA;MAEhD,IAAA,KAAA,GAAA,KAAA,CAAA,KAAA,CAAA,KAAK;MACP,IAAA,EAAA,GAAA,KAAA,CAAA,KAA6C;QAA3C,SAAA,GAAA,EAAA,CAAA,SAAS;QAAE,iBAAA,GAAA,EAAA,CAAA,iBAAgC;MAGnD,IAAI,CAAC,CAAC,OAAO,KAAK,EAAE,EAAE;QAGpB,CAAC,CAAC,cAAc,CAAA,CAAE;QAGlB,IAAI,KAAK,KAAK,EAAE,EAAE;UAAE;QAAS;QAG7B,IAAM,KAAK,GAAG,SAAS,KAAK,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,IAAI;QAC/D,IAAI,CAAC,KAAK,EAAE;UACV;QACD;QAGD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC;OAEnB,MAEI,IAAI,iBAAiB,KAAK,CAAC,CAAC,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,KAAK,EAAE,CAAC,EAAE;QAGnE,IAAI,KAAK,KAAK,EAAE,EAAE;UAChB;QACD;QAGD,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;MAE3C;IAEH,CAAC;IAED,KAAA,CAAA,MAAM,GAAG,UAAC,KAAa,EAAA;MACrB,IAAM,IAAI,GAAQ,KAAI,CAAC,KAAK,CAAC,IAAI,CAAA,KAAA,CAAA,CAAE;MACnC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;MAChB,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC;MACzB,KAAI,CAAC,QAAQ,CAAC;QAAE,KAAK,EAAE;MAAE,CAAE,CAAC;IAC9B,CAAC;IAED,KAAA,CAAA,SAAS,GAAG,UAAC,CAAS,EAAA;MACpB,IAAM,IAAI,GAAQ,KAAI,CAAC,KAAK,CAAC,IAAI,CAAA,KAAA,CAAA,CAAE;MACnC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;MACjB,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC;IAC3B,CAAC;IAED,KAAA,CAAA,SAAS,GAAG,UAAC,CAAS,EAAE,KAAa,EAAA;MACnC,IAAM,IAAI,GAAO,KAAI,CAAC,KAAK,CAAC,IAAI,CAAA,KAAA,CAAA,CAAC;MACjC,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK;MACf,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC;IAC3B,CAAC;;EA6CH;EA3CE,aAAA,CAAA,SAAA,CAAA,MAAM,GAAN,YAAA;IAAA,IAAA,KAAA,GAAA,IAAA;IAEU,IAAA,KAAA,GAAA,IAAA,CAAA,KAAA,CAAA,KAAK;IAEP,IAAA,EAAA,GAAA,IAAA,CAAA,KAA6F;MAA3F,IAAA,GAAA,EAAA,CAAA,IAAI;MAAE,WAAA,GAAA,EAAA,CAAA,WAAW;MAAE,OAAA,GAAA,EAAA,CAAA,OAAO;MAAE,QAAA,GAAA,EAAA,CAAA,QAAQ;MAAE,QAAA,GAAA,EAAA,CAAA,QAAQ;MAAE,SAAA,GAAA,EAAA,CAAA,SAAS;MAAE,iBAAA,GAAA,EAAA,CAAA,iBAAgC;IAEnG,IAAM,cAAc,GAAG,OAAO,KAAK,SAAS,GAAG,IAAI,CAAC,MAAM,IAAI,OAAO,GAAG,KAAK;IAE7E,IAAM,UAAU,GAAG,QAAQ,GAAG,KAAK,GAAI,QAAQ,IAAI,KAAM;IAEzD,IAAM,SAAS,GAAG,CAAC,QAAQ,IAAI,CAAC,cAAc;IAE9C,OACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;MAAK,SAAS,EAAE,cAAc,CAAC;IAAO,CAAA,EACnC,IAAI,CAAC,GAAG,CAAC,UAAC,GAAG,EAAE,CAAC,EAAA;MAAK,OACpB,KAAA,CAAA,aAAA,CAAC,GAAG,EAAA;QACF,GAAG,EAAE,CAAC;QACN,KAAK,EAAE,GAAG;QACV,KAAK,EAAE,CAAC;QACR,QAAQ,EAAE,UAAU;QACpB,QAAQ,EAAE,QAAQ,IAAI,KAAK;QAC3B,QAAQ,EAAE,KAAI,CAAC,QAAQ;QACvB,MAAM,EAAE,KAAI,CAAC,SAAS;QACtB,MAAM,EAAE,KAAI,CAAC,SAAS;QACtB,SAAS,EAAE,SAAS;QACpB,iBAAiB,EAAE;MAAiB,CAAA,CACpC;IAZkB,CAarB,CAAC,EACD,SAAS,IACR,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA;MACE,GAAG,EAAE,IAAI,CAAC,QAAQ;MAClB,KAAK,EAAE,KAAK;MACZ,SAAS,EAAE,cAAc,CAAC,KAAK;MAC/B,WAAW,EAAE,WAAW,IAAI,sBAAsB;MAClD,QAAQ,EAAE,IAAI,CAAC,aAAa;MAC5B,SAAS,EAAE,IAAI,CAAC;IAAc,CAAA,CAC9B,CAEA;EAGV,CAAC;EAEH,OAAA,aAAC;AAAD,CAAC,CAhH0C,KAAK,CAAC,SAAS,CAAA","sourcesContent":["import React from \"react\";\nimport {Tag} from \"./components/Tag\";\nimport {classSelectors} from \"./utils/selectors\";\n\ntype Tags = string[];\n\nexport interface ReactTagInputProps {\n  tags: Tags;\n  onChange: (tags: Tags) => void;\n  placeholder?: string;\n  maxTags?: number;\n  validator?: (val: string) => boolean;\n  editable?: boolean;\n  readOnly?: boolean;\n  removeOnBackspace?: boolean;\n}\n\ninterface State {\n  input: string;\n}\n\nexport default class ReactTagInput extends React.Component<ReactTagInputProps, State> {\n\n  state = { input: \"\" };\n\n  // Ref for input element\n  inputRef: React.RefObject<HTMLInputElement> = React.createRef();\n\n  onInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ input: e.target.value });\n  }\n\n  onInputKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n\n    const { input } = this.state;\n    const { validator, removeOnBackspace } = this.props;\n\n    // On enter\n    if (e.keyCode === 13) {\n\n      // Prevent form submission if tag input is nested in <form>\n      e.preventDefault();\n\n      // If input is blank, do nothing\n      if (input === \"\") { return; }\n\n      // Check if input is valid\n      const valid = validator !== undefined ? validator(input) : true;\n      if (!valid) {\n        return;\n      }\n\n      // Add input to tag list\n      this.addTag(input);\n\n    }\n    // On backspace or delete\n    else if (removeOnBackspace && (e.keyCode === 8 || e.keyCode === 46)) {\n\n      // If currently typing, do nothing\n      if (input !== \"\") {\n        return;\n      }\n\n      // If input is blank, remove previous tag\n      this.removeTag(this.props.tags.length - 1);\n\n    }\n\n  }\n\n  addTag = (value: string) => {\n    const tags = [ ...this.props.tags ];\n    tags.push(value);\n    this.props.onChange(tags);\n    this.setState({ input: \"\" });\n  }\n\n  removeTag = (i: number) => {\n    const tags = [ ...this.props.tags ];\n    tags.splice(i, 1);\n    this.props.onChange(tags);\n  }\n\n  updateTag = (i: number, value: string) => {\n    const tags = [...this.props.tags];\n    tags[i] = value;\n    this.props.onChange(tags);\n  }\n\n  render() {\n\n    const { input } = this.state;\n\n    const { tags, placeholder, maxTags, editable, readOnly, validator, removeOnBackspace } = this.props;\n\n    const maxTagsReached = maxTags !== undefined ? tags.length >= maxTags : false;\n\n    const isEditable = readOnly ? false : (editable || false);\n\n    const showInput = !readOnly && !maxTagsReached;\n\n    return (\n      <div className={classSelectors.wrapper}>\n        {tags.map((tag, i) => (\n          <Tag\n            key={i}\n            value={tag}\n            index={i}\n            editable={isEditable}\n            readOnly={readOnly || false}\n            inputRef={this.inputRef}\n            update={this.updateTag}\n            remove={this.removeTag}\n            validator={validator}\n            removeOnBackspace={removeOnBackspace}\n          />\n        ))}\n        {showInput &&\n          <input\n            ref={this.inputRef}\n            value={input}\n            className={classSelectors.input}\n            placeholder={placeholder || \"Type and press enter\"}\n            onChange={this.onInputChange}\n            onKeyDown={this.onInputKeyDown}\n          />\n        }\n      </div>\n    );\n\n  }\n\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}