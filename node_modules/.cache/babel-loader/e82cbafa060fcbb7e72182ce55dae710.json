{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport React from \"react\";\nimport { classSelectors } from \"../utils/selectors\";\nimport { ContentEditable } from \"./ContentEditable\";\nvar Tag = function (_super) {\n  __extends(Tag, _super);\n  function Tag() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.innerEditableRef = React.createRef();\n    _this.remove = function () {\n      return _this.props.remove(_this.props.index);\n    };\n    return _this;\n  }\n  Tag.prototype.render = function () {\n    var _a = this.props,\n      value = _a.value,\n      index = _a.index,\n      editable = _a.editable,\n      inputRef = _a.inputRef,\n      validator = _a.validator,\n      update = _a.update,\n      readOnly = _a.readOnly,\n      removeOnBackspace = _a.removeOnBackspace;\n    var tagRemoveClass = !readOnly ? classSelectors.tagRemove : classSelectors.tagRemove + \" \" + classSelectors.tagRemoveReadOnly;\n    return React.createElement(\"div\", {\n      className: classSelectors.tag\n    }, !editable && React.createElement(\"div\", {\n      className: classSelectors.tagContent\n    }, value), editable && React.createElement(ContentEditable, {\n      value: value,\n      inputRef: inputRef,\n      innerEditableRef: this.innerEditableRef,\n      className: classSelectors.tagContent,\n      change: function (newValue) {\n        return update(index, newValue);\n      },\n      remove: this.remove,\n      validator: validator,\n      removeOnBackspace: removeOnBackspace\n    }), React.createElement(\"div\", {\n      className: tagRemoveClass,\n      onClick: this.remove\n    }));\n  };\n  return Tag;\n}(React.Component);\nexport { Tag };","map":{"version":3,"sources":["../../../src/components/Tag.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAK,MAAM,OAAO;AACzB,SAAQ,cAAc,QAAO,oBAAoB;AACjD,SAAQ,eAAe,QAAO,mBAAmB;AAcjD,IAAA,GAAA,GAAA,UAAA,MAAA,EAAA;EAAyB,SAAA,CAAA,GAAA,EAAA,MAAA,CAAA;EAAzB,SAAA,GAAA,CAAA,EAAA;IAAA,IAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;IAEE,KAAA,CAAA,gBAAgB,GAAoC,KAAK,CAAC,SAAS,CAAA,CAAE;IAErE,KAAA,CAAA,MAAM,GAAG,YAAA;MAAM,OAAA,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC;IAAnC,CAAmC;;EA8BpD;EA5BE,GAAA,CAAA,SAAA,CAAA,MAAM,GAAN,YAAA;IAEQ,IAAA,EAAA,GAAA,IAAA,CAAA,KAAiG;MAA/F,KAAA,GAAA,EAAA,CAAA,KAAK;MAAE,KAAA,GAAA,EAAA,CAAA,KAAK;MAAE,QAAA,GAAA,EAAA,CAAA,QAAQ;MAAE,QAAA,GAAA,EAAA,CAAA,QAAQ;MAAE,SAAA,GAAA,EAAA,CAAA,SAAS;MAAE,MAAA,GAAA,EAAA,CAAA,MAAM;MAAE,QAAA,GAAA,EAAA,CAAA,QAAQ;MAAE,iBAAA,GAAA,EAAA,CAAA,iBAAgC;IAEvG,IAAM,cAAc,GAAG,CAAC,QAAQ,GAC9B,cAAc,CAAC,SAAS,GAAM,cAAc,CAAC,SAAS,GAAA,GAAA,GAAI,cAAc,CAAC,iBAAmB;IAE9F,OACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;MAAK,SAAS,EAAE,cAAc,CAAC;IAAG,CAAA,EAC/B,CAAC,QAAQ,IAAI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;MAAK,SAAS,EAAE,cAAc,CAAC;IAAU,CAAA,EAAG,KAAK,CAAO,EACrE,QAAQ,IACP,KAAA,CAAA,aAAA,CAAC,eAAe,EAAA;MACd,KAAK,EAAE,KAAK;MACZ,QAAQ,EAAE,QAAQ;MAClB,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;MACvC,SAAS,EAAE,cAAc,CAAC,UAAU;MACpC,MAAM,EAAE,SAAA,CAAC,QAAQ,EAAA;QAAK,OAAA,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC;MAAvB,CAAuB;MAC7C,MAAM,EAAE,IAAI,CAAC,MAAM;MACnB,SAAS,EAAE,SAAS;MACpB,iBAAiB,EAAE;IAAiB,CAAA,CAEvC,EACD,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;MAAK,SAAS,EAAE,cAAc;MAAE,OAAO,EAAE,IAAI,CAAC;IAAM,CAAA,CAAG,CACnD;EAGV,CAAC;EAEH,OAAA,GAAC;AAAD,CAAC,CAlCwB,KAAK,CAAC,SAAS,CAAA","sourcesContent":["import React from \"react\";\nimport {classSelectors} from \"../utils/selectors\";\nimport {ContentEditable} from \"./ContentEditable\";\n\ninterface Props {\n  value: string;\n  index: number;\n  editable: boolean;\n  readOnly: boolean;\n  inputRef: React.RefObject<HTMLInputElement>;\n  update: (i: number, value: string) => void;\n  remove: (i: number) => void;\n  validator?: (val: string) => boolean;\n  removeOnBackspace?: boolean;\n}\n\nexport class Tag extends React.Component<Props> {\n\n  innerEditableRef: React.RefObject<HTMLDivElement> = React.createRef();\n\n  remove = () => this.props.remove(this.props.index);\n\n  render() {\n\n    const { value, index, editable, inputRef, validator, update, readOnly, removeOnBackspace } = this.props;\n\n    const tagRemoveClass = !readOnly ?\n      classSelectors.tagRemove : `${classSelectors.tagRemove} ${classSelectors.tagRemoveReadOnly}`;\n\n    return (\n      <div className={classSelectors.tag}>\n        {!editable && <div className={classSelectors.tagContent}>{value}</div>}\n        {editable && (\n          <ContentEditable\n            value={value}\n            inputRef={inputRef}\n            innerEditableRef={this.innerEditableRef}\n            className={classSelectors.tagContent}\n            change={(newValue) => update(index, newValue)}\n            remove={this.remove}\n            validator={validator}\n            removeOnBackspace={removeOnBackspace}\n          />\n        )}\n        <div className={tagRemoveClass} onClick={this.remove}/>\n      </div>\n    );\n\n  }\n\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}